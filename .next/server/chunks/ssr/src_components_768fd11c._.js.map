{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/layout/AppSidebar.tsx"],"sourcesContent":["\r\n\r\n'use client';\r\n\r\nimport {\r\n  SidebarContent,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n  SidebarTrigger,\r\n  SidebarMenuSub,\r\n  SidebarMenuSubButton,\r\n  SidebarMenuSubItem,\r\n} from '@/components/ui/sidebar';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Settings, User, PanelLeft, LayoutGrid, Heart, LogOut, FolderKanban, Store, Library, Bot, Briefcase, Users, ChevronRight, Building, Headphones, BookOpen, FileText, HelpCircle, Home } from 'lucide-react';\r\nimport type { Widget, User as UserType, Workspace } from '@/lib/types';\r\nimport { useRouter, usePathname } from 'next/navigation';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { getFindAnswersItems, type FindAnswersItem } from '@/services/findAnswersService';\r\nimport { useFindAnswersSync } from '@/hooks/use-find-answers-sync';\r\nimport Image from 'next/image';\r\nimport { clearUserData } from '@/services/userService';\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '../ui/accordion';\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from '../ui/dropdown-menu';\r\nimport { cn } from '@/lib/utils';\r\n\r\ntype ViewType = 'dashboard' | 'ai-store' | 'prompt-catalog' | 'profile' | 'user-management' | 'role-management' | 'company-management' | 'company-edit' | string;\r\n\r\ninterface AppSidebarProps {\r\n    user: UserType | null;\r\n    minimizedWidgets: Widget[];\r\n    favoritedWidgets: Widget[];\r\n    workspaces: Workspace[];\r\n    currentView?: ViewType;\r\n    onViewChange?: (view: ViewType) => void;\r\n    onRestoreWidget: (id: string) => void;\r\n    onRestoreFavorite: (widget: Widget) => void;\r\n    onProfileUpdate: () => void;\r\n    onLoadWorkspace: (workspace: Workspace) => void;\r\n    onWorkspaceAction: (action: 'create' | 'edit' | 'forget' | 'load' | 'save') => void;\r\n    onMainWorkspace?: () => void;\r\n    onRefreshWorkspaces?: () => void;\r\n    isSyncingWorkspaces?: boolean;\r\n    syncEnabled?: boolean;\r\n    lastSyncTime?: Date | null;\r\n    activeWorkspaceId?: string | null;\r\n}\r\n\r\nconst SIDEBAR_ACCORDION_STATE = 'sidebarAccordionState';\r\n\r\nexport function AppSidebar({ user, minimizedWidgets, favoritedWidgets, workspaces, currentView = 'dashboard', onViewChange, onRestoreWidget, onRestoreFavorite, onProfileUpdate, onLoadWorkspace, onWorkspaceAction, onMainWorkspace, onRefreshWorkspaces, isSyncingWorkspaces = false, syncEnabled = true, lastSyncTime, activeWorkspaceId }: AppSidebarProps) {\r\n  const { state, setOpenMobile } = useSidebar();\r\n  const router = useRouter();\r\n  const pathname = usePathname();\r\n  const isMobile = useIsMobile();\r\n  const [openAccordionItem, setOpenAccordionItem] = useState('');\r\n  const [findAnswersItems, setFindAnswersItems] = useState<FindAnswersItem[]>([]);\r\n  const [findAnswersLoading, setFindAnswersLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const savedState = sessionStorage.getItem(SIDEBAR_ACCORDION_STATE);\r\n    if (savedState) {\r\n      setOpenAccordionItem(savedState);\r\n    } else {\r\n        if (pathname.startsWith('/ai')) setOpenAccordionItem('ai-tools');\r\n        else if (pathname.startsWith('/dashboard')) setOpenAccordionItem('workspace');\r\n        else if (pathname.startsWith('/profile') || pathname.startsWith('/settings')) setOpenAccordionItem('user');\r\n    }\r\n  }, [pathname]);\r\n\r\n  // Initial fetch of Find Answers items\r\n  useEffect(() => {\r\n    const fetchFindAnswersItems = async () => {\r\n      setFindAnswersLoading(true);\r\n      try {\r\n        const items = await getFindAnswersItems();\r\n        setFindAnswersItems(items);\r\n      } catch (error) {\r\n        console.error('Failed to fetch Find Answers items:', error);\r\n        setFindAnswersItems([]);\r\n      } finally {\r\n        setFindAnswersLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFindAnswersItems();\r\n  }, []);\r\n\r\n  // Set up periodic sync for Find Answers\r\n  const {\r\n    isChecking: isSyncingFindAnswers,\r\n    lastSyncTime: findAnswersLastSync,\r\n    syncNow: syncFindAnswersNow\r\n  } = useFindAnswersSync({\r\n    user,\r\n    findAnswersItems,\r\n    onFindAnswersChanged: (updatedItems) => {\r\n      setFindAnswersItems(updatedItems);\r\n    },\r\n    enabled: process.env.NEXT_PUBLIC_FIND_ANSWERS_SYNC_ENABLED !== 'false',\r\n    intervalMs: parseInt(process.env.NEXT_PUBLIC_FIND_ANSWERS_SYNC_INTERVAL || '60000'),\r\n    showNotifications: process.env.NEXT_PUBLIC_FIND_ANSWERS_SYNC_NOTIFICATIONS !== 'false'\r\n  });\r\n\r\n  const handleAccordionChange = (value: string) => {\r\n    setOpenAccordionItem(value);\r\n    sessionStorage.setItem(SIDEBAR_ACCORDION_STATE, value);\r\n  };\r\n\r\n  const getIconComponent = (iconName: string) => {\r\n    const iconMap: { [key: string]: React.ReactNode } = {\r\n      'headphones': <Headphones />,\r\n      'users': <Users />,\r\n      'file-text': <FileText />,\r\n      'book-open': <BookOpen />,\r\n      'help-circle': <HelpCircle />,\r\n      'settings': <Settings />,\r\n      'user': <User />,\r\n      'building': <Building />\r\n    };\r\n    \r\n    return iconMap[iconName] || <HelpCircle />;\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    clearUserData();\r\n    router.push('/');\r\n  };\r\n  \r\n  const handleWorkspaceClick = (ws: Workspace) => {\r\n    onLoadWorkspace(ws);\r\n    if(isMobile) setOpenMobile(false);\r\n  }\r\n\r\n  const mainContent = (\r\n    <Accordion type=\"single\" collapsible className=\"w-full space-y-1\" value={openAccordionItem} onValueChange={handleAccordionChange}>\r\n        <AccordionItem value=\"ai-tools\">\r\n            <AccordionTrigger className=\"w-full justify-start rounded-md px-2 hover:bg-sidebar-accent\">\r\n                <Bot />\r\n                <span>AI Tools</span>\r\n            </AccordionTrigger>\r\n            <AccordionContent>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\" \r\n                    isActive={currentView === 'ai-store'}\r\n                    onClick={() => onViewChange?.('ai-store')}\r\n                >\r\n                    <Store />\r\n                    <span>AI Store</span>\r\n                </SidebarMenuButton>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\" \r\n                    isActive={currentView === 'prompt-catalog'}\r\n                    onClick={() => onViewChange?.('prompt-catalog')}\r\n                >\r\n                    <Library />\r\n                    <span>Prompt Catalog</span>\r\n                </SidebarMenuButton>\r\n            </AccordionContent>\r\n        </AccordionItem>\r\n        <AccordionItem value=\"workspace\">\r\n            <AccordionTrigger className=\"w-full justify-start rounded-md px-2 hover:bg-sidebar-accent\">\r\n                <Briefcase />\r\n                <span>Workspace</span>\r\n            </AccordionTrigger>\r\n            <AccordionContent>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\" \r\n                    isActive={currentView === 'dashboard' && !activeWorkspaceId}\r\n                    onClick={() => onMainWorkspace?.()}\r\n                >\r\n                    <LayoutGrid />\r\n                    <span>Main Workspace</span>\r\n                </SidebarMenuButton>\r\n                \r\n                \r\n                {workspaces.map((ws) => (\r\n                    <SidebarMenuButton key={ws.workspaceId} variant=\"ghost\" className=\"w-full justify-start\" isActive={ws.workspaceId === activeWorkspaceId} onClick={() => handleWorkspaceClick(ws)}>\r\n                        <FolderKanban />\r\n                        <span className=\"truncate\">{ws.workspace_name}</span>\r\n                    </SidebarMenuButton>\r\n                ))}\r\n            </AccordionContent>\r\n        </AccordionItem>\r\n        <AccordionItem value=\"user\">\r\n            <AccordionTrigger className=\"w-full justify-start rounded-md px-2 hover:bg-sidebar-accent\">\r\n                 <User />\r\n                 <span>User</span>\r\n            </AccordionTrigger>\r\n            <AccordionContent>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\" \r\n                    isActive={currentView === 'profile'}\r\n                    onClick={() => onViewChange?.('profile')}\r\n                >\r\n                   <User />\r\n                   <span>Profile & Settings</span>\r\n                </SidebarMenuButton>\r\n            </AccordionContent>\r\n        </AccordionItem>\r\n        <AccordionItem value=\"find-answers\">\r\n            <AccordionTrigger className=\"w-full justify-start rounded-md px-2 hover:bg-sidebar-accent\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <HelpCircle />\r\n                    <span>Find Answers</span>\r\n                    {isSyncingFindAnswers && (\r\n                        <div className=\"animate-spin h-3 w-3 border border-gray-300 border-t-blue-500 rounded-full\" />\r\n                    )}\r\n                </div>\r\n            </AccordionTrigger>\r\n            <AccordionContent>\r\n                {findAnswersLoading ? (\r\n                    <div className=\"px-2 py-1 text-sm text-muted-foreground\">Loading...</div>\r\n                ) : findAnswersItems.length === 0 ? (\r\n                    <div className=\"px-2 py-1 text-sm text-muted-foreground\">No items available</div>\r\n                ) : (\r\n                    findAnswersItems.map((item) => (\r\n                        <SidebarMenuButton \r\n                            key={`expanded-${item.id}`}\r\n                            variant=\"ghost\" \r\n                            className=\"w-full justify-start\"\r\n                            isActive={currentView === item.id}\r\n                            onClick={() => onViewChange?.(item.id as any)}\r\n                        >\r\n                            {getIconComponent(item.icon || 'help-circle')}\r\n                            <span>{item.title}</span>\r\n                        </SidebarMenuButton>\r\n                    ))\r\n                )}\r\n            </AccordionContent>\r\n        </AccordionItem>\r\n        <AccordionItem value=\"admin\">\r\n            <AccordionTrigger className=\"w-full justify-start rounded-md px-2 hover:bg-sidebar-accent\">\r\n                <Users />\r\n                <span>Administration</span>\r\n            </AccordionTrigger>\r\n            <AccordionContent>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\"\r\n                    isActive={currentView === 'user-management'}\r\n                    onClick={() => onViewChange?.('user-management')}\r\n                >\r\n                    <Users />\r\n                    <span>User Management</span>\r\n                </SidebarMenuButton>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\"\r\n                    isActive={currentView === 'role-management'}\r\n                    onClick={() => onViewChange?.('role-management')}\r\n                >\r\n                    <Settings />\r\n                    <span>Role Management</span>\r\n                </SidebarMenuButton>\r\n                <SidebarMenuButton \r\n                    variant=\"ghost\" \r\n                    className=\"w-full justify-start\"\r\n                    isActive={currentView === 'company-management'}\r\n                    onClick={() => onViewChange?.('company-management')}\r\n                >\r\n                    <Building />\r\n                    <span>Company Management</span>\r\n                </SidebarMenuButton>\r\n            </AccordionContent>\r\n        </AccordionItem>\r\n    </Accordion>\r\n  );\r\n\r\n  const nonAccordionContent = (\r\n    <div className=\"flex flex-col items-center space-y-1\">\r\n        <SidebarMenuItem>\r\n            <SidebarMenuButton \r\n                tooltip=\"AI Store\" \r\n                variant=\"ghost\" \r\n                isActive={currentView === 'ai-store'}\r\n                onClick={() => onViewChange?.('ai-store')}\r\n                className=\"w-12 h-12 p-0 flex items-center justify-center\"\r\n            >\r\n                <Store />\r\n            </SidebarMenuButton>\r\n        </SidebarMenuItem>\r\n        <SidebarMenuItem>\r\n            <SidebarMenuButton \r\n                tooltip=\"Prompt Catalog\" \r\n                variant=\"ghost\" \r\n                isActive={currentView === 'prompt-catalog'}\r\n                onClick={() => onViewChange?.('prompt-catalog')}\r\n                className=\"w-12 h-12 p-0 flex items-center justify-center\"\r\n            >\r\n                <Library />\r\n            </SidebarMenuButton>\r\n        </SidebarMenuItem>\r\n        <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n                <SidebarMenuItem>\r\n                    <SidebarMenuButton \r\n                        tooltip=\"Workspace\" \r\n                        variant=\"ghost\"\r\n                        className=\"w-12 h-12 p-0 flex items-center justify-center\"\r\n                    >\r\n                        <Briefcase />\r\n                    </SidebarMenuButton>\r\n                </SidebarMenuItem>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent side=\"right\" align=\"start\" className=\"ml-2\">\r\n                <DropdownMenuItem onClick={() => onMainWorkspace?.()} className=\"cursor-pointer\">\r\n                    <LayoutGrid className=\"mr-2 h-4 w-4\" />\r\n                    <span>Main Workspace</span>\r\n                </DropdownMenuItem>\r\n                 {workspaces.map((ws) => (\r\n                    <DropdownMenuItem key={ws.workspaceId} onClick={() => handleWorkspaceClick(ws)} className=\"cursor-pointer\">\r\n                        <FolderKanban className=\"mr-2 h-4 w-4\" />\r\n                        <span>{ws.workspace_name}</span>\r\n                    </DropdownMenuItem>\r\n                ))}\r\n            </DropdownMenuContent>\r\n        </DropdownMenu>\r\n        <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n                <SidebarMenuItem>\r\n                    <SidebarMenuButton \r\n                        tooltip=\"Find Answers\" \r\n                        variant=\"ghost\"\r\n                        className=\"w-12 h-12 p-0 flex items-center justify-center\"\r\n                    >\r\n                        <div className=\"relative flex items-center justify-center\">\r\n                            <HelpCircle />\r\n                            {isSyncingFindAnswers && (\r\n                                <div className=\"absolute -top-1 -right-1 animate-spin h-2 w-2 border border-gray-300 border-t-blue-500 rounded-full\" />\r\n                            )}\r\n                        </div>\r\n                    </SidebarMenuButton>\r\n                </SidebarMenuItem>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent side=\"right\" align=\"start\" className=\"ml-2\">\r\n                {findAnswersLoading ? (\r\n                    <DropdownMenuItem disabled>\r\n                        <span className=\"text-muted-foreground\">Loading...</span>\r\n                    </DropdownMenuItem>\r\n                ) : findAnswersItems.length === 0 ? (\r\n                    <DropdownMenuItem disabled>\r\n                        <span className=\"text-muted-foreground\">No items available</span>\r\n                    </DropdownMenuItem>\r\n                ) : (\r\n                    findAnswersItems.map((item) => (\r\n                        <DropdownMenuItem \r\n                            key={`collapsed-${item.id}`}\r\n                            onClick={() => onViewChange?.(item.id as any)}\r\n                            className=\"cursor-pointer\"\r\n                        >\r\n                            <div className=\"mr-2 h-4 w-4 flex items-center justify-center\">\r\n                                {getIconComponent(item.icon || 'help-circle')}\r\n                            </div>\r\n                            <span>{item.title}</span>\r\n                        </DropdownMenuItem>\r\n                    ))\r\n                )}\r\n            </DropdownMenuContent>\r\n        </DropdownMenu>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <SidebarContent>\r\n        <SidebarMenu>\r\n            <div className={cn(\"flex items-center justify-between group-data-[collapsible=icon]:justify-center group-data-[collapsible=icon]:group-data-[state=expanded]:justify-between\", (state === 'expanded' || isMobile) ? \"p-2 mb-4\" : \"p-2 mb-2\")}>\r\n              <Link href=\"/home\" className=\"flex items-center gap-2 font-semibold text-xl group-data-[collapsible=icon]:hidden group-data-[collapsible=icon]:group-data-[state=expanded]:flex\">\r\n                  <Image\r\n                    src=\"/bablephish_logo.svg\"\r\n                    alt=\"BabelPhish Logo\"\r\n                    width={24}\r\n                    height={24}\r\n                    className=\"flex-shrink-0\"\r\n                  />\r\n                  <span className=\"text-primary\">BabelPhish</span>\r\n              </Link>\r\n              <SidebarTrigger asChild>\r\n                  <Button variant=\"ghost\" className=\"h-8 w-8\">\r\n                      <PanelLeft />\r\n                      <span className=\"sr-only\">Toggle Sidebar</span>\r\n                  </Button>\r\n              </SidebarTrigger>\r\n            </div>\r\n            \r\n            <div className={cn(\"space-y-1\", (state === 'expanded' || isMobile) ? \"px-2\" : \"px-0\")}>\r\n                {(state === 'expanded' || isMobile) ? mainContent : nonAccordionContent}\r\n            </div>\r\n            \r\n        </SidebarMenu>\r\n      </SidebarContent>\r\n       <div className={cn(\"mt-auto\", (state === 'expanded' || isMobile) ? \"p-4\" : \"p-2 flex justify-center\")}>\r\n            <div className=\"text-sm text-muted-foreground mb-2 group-data-[collapsible=icon]:hidden group-data-[collapsible=icon]:group-data-[state=expanded]:block truncate\">\r\n                {user?.email || 'User'}\r\n            </div>\r\n           <SidebarMenuButton \r\n               tooltip=\"Logout\" \r\n               variant=\"ghost\" \r\n               onClick={handleLogout} \r\n               className={cn(\r\n                   (state === 'expanded' || isMobile) \r\n                       ? \"w-full justify-start\" \r\n                       : \"w-12 h-12 p-0 flex items-center justify-center\"\r\n               )}\r\n           >\r\n              <LogOut />\r\n              <span className=\"group-data-[collapsible=icon]:hidden group-data-[collapsible=icon]:group-data-[state=expanded]:inline\">Logout</span>\r\n           </SidebarMenuButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1013, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/ChatInput.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useRef, useEffect, type FormEvent } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Send, Mic, Bookmark, Loader2, Sparkles, AlertCircle, FileWarning, GitBranch, BookText, Server, FolderPlus, Edit, Trash2, Save } from 'lucide-react';\r\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { cn } from '@/lib/utils';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport {\r\n  Sheet,\r\n  SheetContent,\r\n  SheetDescription,\r\n  SheetHeader,\r\n  SheetTitle,\r\n  SheetTrigger,\r\n} from \"@/components/ui/sheet\"\r\nimport type { Widget } from '@/lib/types';\r\n\r\n\r\ninterface ChatInputProps {\r\n  onSubmit: (query: string) => void;\r\n  onSave: (query: string, name: string) => void;\r\n  loading: boolean;\r\n  widgets: Widget[];\r\n  onWorkspaceAction: (action: 'create' | 'edit' | 'forget' | 'load' | 'save') => void;\r\n}\r\n\r\nconst commands = [\r\n  { name: 'Incidents', query: '@incident', description: 'View and manage incidents', icon: AlertCircle },\r\n  { name: 'Changes', query: '@change', description: 'View and manage change requests', icon: GitBranch },\r\n  { name: 'Problems', query: '@problem', description: 'View and manage problems', icon: FileWarning },\r\n  { name: 'Overview Summary', query: '@summary', description: 'Get a summary of all open widgets', icon: BookText },\r\n  { name: 'Fetch ServiceNow', query: '@servicenow', description: 'Fetch data from ServiceNow', icon: Server },\r\n];\r\n\r\nconst workspaceCommands = [\r\n  { name: 'Create workspace', action: 'create', description: 'Save the current layout as a new workspace', icon: FolderPlus },\r\n  { name: 'Save workspace', action: 'save', description: 'Save changes to the current workspace', icon: Save },\r\n  { name: 'Edit workspace', action: 'edit', description: 'Update or rename the current workspace', icon: Edit },\r\n  { name: 'Forget workspace', action: 'forget', description: 'Clear the saved workspace from memory', icon: Trash2 },\r\n];\r\n\r\nexport function ChatInput({ onSubmit, onSave, loading, widgets, onWorkspaceAction }: ChatInputProps) {\r\n  const [query, setQuery] = useState('');\r\n  const [tokenCount, setTokenCount] = useState(0);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef<any>(null);\r\n  const { toast } = useToast();\r\n  const [showCommandMenu, setShowCommandMenu] = useState(false);\r\n  const [showWorkspaceMenu, setShowWorkspaceMenu] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [thinkingDots, setThinkingDots] = useState('.');\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n    if (loading) {\r\n      interval = setInterval(() => {\r\n        setThinkingDots(dots => {\r\n          if (dots.length >= 3) return '.';\r\n          return dots + '.';\r\n        });\r\n      }, 500);\r\n    } else {\r\n      setThinkingDots('.');\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined' || !('SpeechRecognition' in window || 'webkitSpeechRecognition' in window)) {\r\n      console.warn('Speech recognition not supported in this browser.');\r\n      return;\r\n    }\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    const recognition = new SpeechRecognition();\r\n    recognition.continuous = false;\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setQuery(transcript);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error('Speech recognition error:', event.error);\r\n      toast({ variant: 'destructive', title: 'Voice Error', description: 'Could not start voice recognition.' });\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognitionRef.current = recognition;\r\n  }, [toast]);\r\n\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (!query.trim() || loading) return;\r\n    onSubmit(query);\r\n    setQuery('');\r\n    setTokenCount(0);\r\n    setShowCommandMenu(false);\r\n  };\r\n  \r\n  const handleListen = () => {\r\n    if (!recognitionRef.current) {\r\n        toast({ variant: 'destructive', title: 'Unsupported', description: 'Voice recognition is not supported in your browser.' });\r\n        return;\r\n    }\r\n    if (isListening) {\r\n      recognitionRef.current.stop();\r\n    } else {\r\n      recognitionRef.current.start();\r\n    }\r\n    setIsListening(prev => !prev);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newQuery = e.target.value;\r\n    setQuery(newQuery);\r\n    // Estimate tokens: 1 token ~ 4 chars\r\n    setTokenCount(Math.ceil(newQuery.length / 4));\r\n  };\r\n\r\n  const handleCommandSelect = (commandQuery: string) => {\r\n    setQuery(commandQuery);\r\n    setShowCommandMenu(false);\r\n    onSubmit(commandQuery);\r\n    setQuery('');\r\n    setTokenCount(0);\r\n  };\r\n  \r\n  const handleWorkspaceAction = (action: 'create' | 'edit' | 'forget' | 'load' | 'save') => {\r\n    onWorkspaceAction(action);\r\n    setShowWorkspaceMenu(false);\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  const isSummaryDisabled = widgets.length === 0;\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2\">\r\n      <form onSubmit={handleSubmit} className=\"relative w-full\">\r\n          <Popover open={loading}>\r\n          <PopoverTrigger asChild>\r\n              <div>\r\n              <Input\r\n                  ref={inputRef}\r\n                  value={query}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Please type your message here\"\r\n                  className=\"w-full rounded-full h-14 pl-6 pr-16 bg-card/80 border-primary focus-visible:ring-primary/50 text-base shadow-lg\"\r\n                  disabled={loading}\r\n              />\r\n              <Button type=\"submit\" size=\"icon\" disabled={loading || !query.trim()} className=\"absolute right-4 top-1/2 -translate-y-1/2 rounded-full h-10 w-10 bg-primary/20 hover:bg-primary/30 text-primary\">\r\n                  {loading ? <Loader2 className=\"animate-spin\" /> : <Sparkles />}\r\n                  <span className=\"sr-only\">Send</span>\r\n              </Button>\r\n              </div>\r\n          </PopoverTrigger>\r\n          <PopoverContent \r\n              side=\"top\" \r\n              align=\"center\" \r\n              className=\"w-auto py-1 px-3 mb-2 text-sm text-muted-foreground\"\r\n              sideOffset={10}\r\n          >\r\n              Thinking{thinkingDots}\r\n          </PopoverContent>\r\n          </Popover>\r\n      </form>\r\n      <div className=\"flex justify-between items-center px-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <Popover open={showCommandMenu} onOpenChange={setShowCommandMenu}>\r\n              <PopoverTrigger asChild>\r\n                  <Button variant=\"link\" className=\"text-xs text-muted-foreground self-start p-0 h-auto\">Use Commands</Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent \r\n                  className=\"w-[400px] p-2 mb-2\" \r\n                  align=\"start\"\r\n                  onCloseAutoFocus={(e) => {\r\n                    e.preventDefault();\r\n                    inputRef.current?.focus();\r\n                  }}\r\n              >\r\n                <div className=\"space-y-1\">\r\n                  <p className=\"text-xs text-muted-foreground px-2\">Commands</p>\r\n                  {commands.map((command) => {\r\n                    const Icon = command.icon;\r\n                    const isDisabled = command.query === '@summary' && isSummaryDisabled;\r\n                    return (\r\n                      <button\r\n                        key={command.name}\r\n                        type=\"button\"\r\n                        className={cn(\r\n                          \"w-full text-left p-2 rounded-md hover:bg-accent flex items-start gap-3\",\r\n                          isDisabled && \"opacity-50 cursor-not-allowed\"\r\n                        )}\r\n                        onClick={() => handleCommandSelect(command.query)}\r\n                        disabled={isDisabled}\r\n                      >\r\n                        <Icon className=\"w-8 h-8 p-1.5 bg-muted rounded-md mt-0.5\" />\r\n                        <div>\r\n                          <p className=\"font-medium text-sm\">{command.name}</p>\r\n                          <p className=\"text-xs text-muted-foreground\">{command.description}</p>\r\n                        </div>\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </PopoverContent>\r\n          </Popover>\r\n          <Popover open={showWorkspaceMenu} onOpenChange={setShowWorkspaceMenu}>\r\n              <PopoverTrigger asChild>\r\n                  <Button variant=\"link\" className=\"text-xs text-muted-foreground self-start p-0 h-auto\">Workspace</Button>\r\n              </PopoverTrigger>\r\n              <PopoverContent \r\n                  className=\"w-[400px] p-2 mb-2\" \r\n                  align=\"start\"\r\n                  onCloseAutoFocus={(e) => {\r\n                    e.preventDefault();\r\n                    inputRef.current?.focus();\r\n                  }}\r\n              >\r\n                <div className=\"space-y-1\">\r\n                  <p className=\"text-xs text-muted-foreground px-2\">Workspace Actions</p>\r\n                  {workspaceCommands.map((command) => {\r\n                    const Icon = command.icon;\r\n                    return (\r\n                      <button\r\n                        key={command.name}\r\n                        type=\"button\"\r\n                        className=\"w-full text-left p-2 rounded-md hover:bg-accent flex items-start gap-3\"\r\n                        onClick={() => handleWorkspaceAction(command.action as 'create' | 'edit' | 'forget' | 'load' | 'save')}\r\n                      >\r\n                        <Icon className=\"w-8 h-8 p-1.5 bg-muted rounded-md mt-0.5\" />\r\n                        <div>\r\n                          <p className=\"font-medium text-sm\">{command.name}</p>\r\n                          <p className=\"text-xs text-muted-foreground\">{command.description}</p>\r\n                        </div>\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </PopoverContent>\r\n          </Popover>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/Profile.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\r\nimport { Button } from './ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\r\nimport { Input } from './ui/input';\r\nimport { Label } from './ui/label';\r\nimport { Separator } from './ui/separator';\r\nimport { Switch } from './ui/switch';\r\nimport { Textarea } from './ui/textarea';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from './ui/collapsible';\r\nimport { cn } from '@/lib/utils';\r\nimport { updateUserProfile, getUserById } from '@/services/userService';\r\nimport type { User } from '@/lib/types';\r\nimport { Skeleton } from './ui/skeleton';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Pencil, ChevronDown, ChevronRight, Settings, Bell, Shield } from 'lucide-react';\r\n\r\ninterface ProfileProps {\r\n    user?: User | null;\r\n    userId?: string;\r\n    onProfileUpdate: () => void;\r\n    isPage?: boolean;\r\n}\r\n\r\nexport function Profile({ user, userId, onProfileUpdate, isPage = false }: ProfileProps) {\r\n  const [profile, setProfile] = useState<User | null>(user || null);\r\n  const [loading, setLoading] = useState(!user);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [emailNotifications, setEmailNotifications] = useState(true);\r\n  const [pushNotifications, setPushNotifications] = useState(false);\r\n  const [displayOpen, setDisplayOpen] = useState(false);\r\n  const [notificationsOpen, setNotificationsOpen] = useState(false);\r\n  const [securityOpen, setSecurityOpen] = useState(false);\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const { toast } = useToast();\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n        if (user) {\r\n        setProfile(user);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      if (userId) {\r\n        setLoading(true);\r\n        try {\r\n          const userData = await getUserById(userId);\r\n          setProfile(userData);\r\n        } catch (error) {\r\n          console.error('Failed to fetch user data:', error);\r\n          toast({ \r\n            variant: 'destructive', \r\n            title: 'Error', \r\n            description: 'Failed to load user profile.' \r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [user, userId, toast]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    if (!profile) {\r\n      toast({ variant: 'destructive', title: 'Error', description: 'No profile data to save.' });\r\n      return;\r\n    }\r\n\r\n    // Check if we have essential data (email is required)\r\n    if (!profile.email) {\r\n      toast({ variant: 'destructive', title: 'Error', description: 'Email is required to update profile.' });\r\n      return;\r\n    }\r\n\r\n    const success = await updateUserProfile(profile);\r\n     if (success) {\r\n      toast({ title: 'Success', description: 'Profile updated successfully!', duration: 3000 });\r\n      // Now that the webhook is working properly, refresh the Dashboard's user data\r\n      onProfileUpdate();\r\n    } else {\r\n      toast({ variant: 'destructive', title: 'Error', description: 'Failed to update profile.' });\r\n    }\r\n  };\r\n\r\n  const handleSaveSettings = () => {\r\n    // In a real application, you would save the settings here.\r\n    console.log('Saving settings:', { darkMode, emailNotifications, pushNotifications });\r\n    toast({ title: 'Success', description: 'Settings saved successfully!', duration: 3000 });\r\n  };\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!profile) return;\r\n\r\n    // Validate password fields\r\n    if (!currentPassword || !newPassword || !confirmPassword) {\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'Please fill in all password fields.' \r\n      });\r\n      return;\r\n    }\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'New passwords do not match.' \r\n      });\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 6) {\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'New password must be at least 6 characters long.' \r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Update password using the same updateUserProfile function\r\n      const passwordUpdate = {\r\n        userId: profile.userId || profile.email,\r\n        email: profile.email,\r\n        password: newPassword\r\n      };\r\n\r\n      const success = await updateUserProfile(passwordUpdate);\r\n      \r\n      if (success) {\r\n        // Clear password fields\r\n        setCurrentPassword('');\r\n        setNewPassword('');\r\n        setConfirmPassword('');\r\n        \r\n        toast({ \r\n          title: 'Success', \r\n          description: 'Password updated successfully!', \r\n          duration: 3000 \r\n        });\r\n      } else {\r\n        toast({ \r\n          variant: 'destructive', \r\n          title: 'Error', \r\n          description: 'Failed to update password.' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'An error occurred while updating password.' \r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    if (!profile) return;\r\n    const { id, value } = e.target;\r\n    setProfile({ ...profile, [id]: value });\r\n  };\r\n  \r\n  const handleAvatarClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        if (profile) {\r\n          setProfile({ ...profile, avatar: reader.result as string });\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n      return (\r\n        <div className=\"space-y-6\">\r\n            <Card>\r\n                <CardHeader>\r\n                    <Skeleton className=\"h-5 w-2/5\" />\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-8\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <Skeleton className=\"h-24 w-24 rounded-full\" />\r\n                        <div className=\"grid gap-1.5\">\r\n                            <Skeleton className=\"h-8 w-32\" />\r\n                            <Skeleton className=\"h-5 w-48\" />\r\n                            <Skeleton className=\"h-9 w-24 mt-1\" />\r\n                        </div>\r\n                    </div>\r\n                     <div className=\"grid gap-4\">\r\n                        <div className=\"grid gap-2\">\r\n                            <Skeleton className=\"h-4 w-16\" />\r\n                            <Skeleton className=\"h-10 w-full\" />\r\n                        </div>\r\n                         <div className=\"grid gap-2\">\r\n                            <Skeleton className=\"h-4 w-16\" />\r\n                            <Skeleton className=\"h-10 w-full\" />\r\n                        </div>\r\n                         <div className=\"grid gap-2\">\r\n                            <Skeleton className=\"h-4 w-16\" />\r\n                            <Skeleton className=\"h-20 w-full\" />\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n      );\r\n  }\r\n\r\n  if (!profile) {\r\n    return <div>Failed to load profile. Please try again later.</div>;\r\n  }\r\n  \r\n  const ProfileHeader = () => (\r\n     <CardHeader>\r\n        <CardTitle>Profile</CardTitle>\r\n        <CardDescription>This is how others will see you on the site.</CardDescription>\r\n    </CardHeader>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6 max-w-4xl mx-auto\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Profile & Settings</h1>\r\n          <p className=\"text-sm text-gray-600 mt-1\">Manage your profile information and account settings</p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button variant=\"outline\" onClick={handleSaveSettings} className=\"bg-blue-500 hover:bg-blue-600 text-white\">\r\n            <Settings className=\"h-4 w-4 mr-2\" />\r\n            Save Settings\r\n          </Button>\r\n          <Button onClick={handleSaveChanges} className=\"bg-orange-500 hover:bg-orange-600\">\r\n            Save Profile\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile Information */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Profile Information</CardTitle>\r\n          <CardDescription>This is how others will see you on the site.</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-8\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"relative group\" onClick={handleAvatarClick}>\r\n              <Avatar className=\"h-24 w-24\">\r\n                <AvatarImage src={profile.avatar} alt=\"User avatar\" />\r\n                <AvatarFallback>{profile.first_name?.substring(0,1)}{profile.last_name?.substring(0,1)}</AvatarFallback>\r\n              </Avatar>\r\n              <div className=\"absolute inset-0 bg-black/50 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity cursor-pointer\">\r\n                <Pencil className=\"text-white\" size={32} />\r\n              </div>\r\n              <input type=\"file\" ref={fileInputRef} onChange={handleAvatarChange} className=\"hidden\" accept=\"image/*\" />\r\n            </div>\r\n            <div className=\"grid gap-1.5\">\r\n              <p className=\"text-sm text-muted-foreground\">{profile.Company || 'Company Name'}</p>\r\n              <h2 className=\"text-2xl font-bold\">{(profile.first_name && profile.last_name) ? `${profile.first_name} ${profile.last_name}` : (profile.username || 'User')}</h2>\r\n              <p className=\"text-sm text-muted-foreground\">{profile.email}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"grid gap-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"first_name\">First Name</Label>\r\n                <Input id=\"first_name\" value={profile.first_name || ''} onChange={handleInputChange} />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"last_name\">Last Name</Label>\r\n                <Input id=\"last_name\" value={profile.last_name || ''} onChange={handleInputChange} />\r\n              </div>\r\n            </div>\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"bio\">Bio</Label>\r\n              <Textarea id=\"bio\" placeholder=\"Tell us a little bit about yourself\" value={profile.bio || ''} onChange={handleInputChange} />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Display Settings */}\r\n      <Card>\r\n        <Collapsible open={displayOpen} onOpenChange={(open) => {\r\n          setDisplayOpen(open);\r\n          if (open) {\r\n            setNotificationsOpen(false);\r\n            setSecurityOpen(false);\r\n          }\r\n        }}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Settings className=\"h-5 w-5\" />\r\n                    Display Settings\r\n                  </CardTitle>\r\n                  <CardDescription>Manage your display and theme preferences</CardDescription>\r\n                </div>\r\n                {displayOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"space-y-6 pt-0\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className={cn('transition-opacity', !darkMode && 'opacity-50')}>\r\n                  <Label htmlFor=\"dark-mode\">Dark Mode</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Enable dark theme for the application.</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"dark-mode\" \r\n                  checked={darkMode} \r\n                  onCheckedChange={setDarkMode} \r\n                  className={cn('transition-opacity', !darkMode && 'opacity-50')} \r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Notification Settings */}\r\n      <Card>\r\n        <Collapsible open={notificationsOpen} onOpenChange={(open) => {\r\n          setNotificationsOpen(open);\r\n          if (open) {\r\n            setDisplayOpen(false);\r\n            setSecurityOpen(false);\r\n          }\r\n        }}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Bell className=\"h-5 w-5\" />\r\n                    Notification Settings\r\n                  </CardTitle>\r\n                  <CardDescription>Manage how you receive notifications</CardDescription>\r\n                </div>\r\n                {notificationsOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"space-y-6 pt-0\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className={cn('transition-opacity', !emailNotifications && 'opacity-50')}>\r\n                  <Label htmlFor=\"email-notifications\">Email Notifications</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Receive notifications about your account via email.</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"email-notifications\" \r\n                  checked={emailNotifications} \r\n                  onCheckedChange={setEmailNotifications} \r\n                  className={cn('transition-opacity', !emailNotifications && 'opacity-50')} \r\n                />\r\n              </div>\r\n              <Separator />\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className={cn('transition-opacity', !pushNotifications && 'opacity-50')}>\r\n                  <Label htmlFor=\"push-notifications\">Push Notifications</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">Receive push notifications on your devices.</p>\r\n                </div>\r\n                <Switch \r\n                  id=\"push-notifications\" \r\n                  checked={pushNotifications} \r\n                  onCheckedChange={setPushNotifications} \r\n                  className={cn('transition-opacity', !pushNotifications && 'opacity-50')} \r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Security Settings */}\r\n      <Card>\r\n        <Collapsible open={securityOpen} onOpenChange={(open) => {\r\n          setSecurityOpen(open);\r\n          if (open) {\r\n            setDisplayOpen(false);\r\n            setNotificationsOpen(false);\r\n          }\r\n        }}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Shield className=\"h-5 w-5\" />\r\n                    Security\r\n                  </CardTitle>\r\n                  <CardDescription>Manage your account security and password</CardDescription>\r\n                </div>\r\n                {securityOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"space-y-6 pt-0\">\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-sm font-medium\">Change Password</h4>\r\n                <div className=\"grid gap-4\">\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"current-password\">Current Password</Label>\r\n                    <Input \r\n                      id=\"current-password\" \r\n                      type=\"password\"\r\n                      value={currentPassword}\r\n                      onChange={(e) => setCurrentPassword(e.target.value)}\r\n                      placeholder=\"Enter current password\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"new-password\">New Password</Label>\r\n                    <Input \r\n                      id=\"new-password\" \r\n                      type=\"password\"\r\n                      value={newPassword}\r\n                      onChange={(e) => setNewPassword(e.target.value)}\r\n                      placeholder=\"Enter new password (min 6 characters)\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"confirm-password\">Confirm New Password</Label>\r\n                    <Input \r\n                      id=\"confirm-password\" \r\n                      type=\"password\"\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}\r\n                      placeholder=\"Confirm new password\"\r\n                    />\r\n                  </div>\r\n                  <Button \r\n                    onClick={handlePasswordChange}\r\n                    className=\"w-fit bg-red-500 hover:bg-red-600\"\r\n                    disabled={!currentPassword || !newPassword || !confirmPassword}\r\n                  >\r\n                    Update Password\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2813, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/AIStore.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useMemo, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Search, Heart, RefreshCw, Zap, Bot, Box, Loader2 } from 'lucide-react';\r\nimport Image from 'next/image';\r\nimport { cn } from '@/lib/utils';\r\nimport { getAssistants } from '@/services/assistantService';\r\nimport type { Assistant } from '@/lib/types';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\ntype DisplayAssistant = Assistant & {\r\n    isFavorited: boolean;\r\n    iconComponent?: React.ReactNode;\r\n    iconBg?: string;\r\n};\r\n\r\nconst iconMap: { [key: string]: { component: React.ReactNode, bg: string } } = {\r\n    'zap': { component: <Zap className=\"text-green-500\" />, bg: 'bg-green-100' },\r\n    'box': { component: <Box className=\"text-blue-500\" />, bg: 'bg-blue-100' },\r\n    'bot': { component: <Bot className=\"text-pink-500\" />, bg: 'bg-pink-100' },\r\n    'sky_box': { component: <Box className=\"text-sky-500\" />, bg: 'bg-sky-100' },\r\n};\r\n\r\nconst FAVORITES_KEY = 'ai_store_favorites';\r\n\r\nexport function AIStore() {\r\n  const [assistants, setAssistants] = useState<DisplayAssistant[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortOrder, setSortOrder] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  const fetchAssistants = async (forceRefresh = false) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n        const data = await getAssistants(forceRefresh);\r\n        const savedFavorites = JSON.parse(localStorage.getItem(FAVORITES_KEY) || '[]');\r\n        \r\n        const displayAssistants = data.map(a => {\r\n            const iconInfo = iconMap[a.icon] || { component: <Bot className=\"text-gray-500\" />, bg: 'bg-gray-100' };\r\n            return {\r\n                ...a,\r\n                isFavorited: savedFavorites.includes(a.id),\r\n                iconComponent: iconInfo.component,\r\n                iconBg: iconInfo.bg,\r\n                addedDate: a.addedDate || new Date().toISOString(),\r\n            };\r\n        });\r\n\r\n        setAssistants(displayAssistants);\r\n    } catch (err) {\r\n        setError('Failed to load assistants. Please try refreshing.');\r\n        console.error(err);\r\n        toast({\r\n            variant: \"destructive\",\r\n            title: \"Error\",\r\n            description: \"Could not fetch assistants from the server.\"\r\n        });\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAssistants();\r\n  }, []);\r\n  \r\n  const toggleFavorite = (id: string) => {\r\n    let newFavorites: string[] = [];\r\n    const updatedAssistants = assistants.map(a => {\r\n      if (a.id === id) {\r\n        return { ...a, isFavorited: !a.isFavorited };\r\n      }\r\n      return a;\r\n    });\r\n\r\n    setAssistants(updatedAssistants);\r\n    newFavorites = updatedAssistants.filter(a => a.isFavorited).map(a => a.id);\r\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify(newFavorites));\r\n  };\r\n\r\n  const filteredAndSortedAssistants = useMemo(() => {\r\n    let result = assistants.filter(a => a.name.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n    switch (sortOrder) {\r\n      case 'name-asc':\r\n        result.sort((a, b) => a.name.localeCompare(b.name));\r\n        break;\r\n      case 'name-desc':\r\n        result.sort((a, b) => b.name.localeCompare(a.name));\r\n        break;\r\n      case 'favorites':\r\n        result = result.filter(a => a.isFavorited);\r\n        break;\r\n      case 'recent':\r\n        result.sort((a, b) => new Date(b.addedDate).getTime() - new Date(a.addedDate).getTime());\r\n        break;\r\n      case 'all':\r\n      default:\r\n        break;\r\n    }\r\n    return result;\r\n  }, [assistants, searchTerm, sortOrder]);\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col p-6 pt-12 bg-background text-foreground\">\r\n      <header className=\"mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n            <div className=\"space-y-1\">\r\n                <h1 className=\"text-2xl font-bold\">Welcome to the AI Storefront</h1>\r\n                <p className=\"text-muted-foreground\">Each Assistant is created to help you do a specific set of tasks. Get answers to your questions, brainstorm ideas, create new content, and more!</p>\r\n            </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <div className=\"flex items-center gap-4 mb-6\">\r\n        <Select value={sortOrder} onValueChange={setSortOrder}>\r\n          <SelectTrigger className=\"w-[180px]\">\r\n            <SelectValue placeholder=\"Sort\" />\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"all\">All</SelectItem>\r\n            <SelectItem value=\"recent\">Recently Added</SelectItem>\r\n            <SelectItem value=\"name-asc\">Name A-Z</SelectItem>\r\n            <SelectItem value=\"name-desc\">Name Z-A</SelectItem>\r\n            <SelectItem value=\"favorites\">Favorites</SelectItem>\r\n          </SelectContent>\r\n        </Select>\r\n        <div className=\"relative flex-1\">\r\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n          <Input \r\n            placeholder=\"Search using assistant name\" \r\n            className=\"pl-10\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n        <Button variant=\"ghost\" onClick={() => fetchAssistants(true)} disabled={loading}>\r\n            <RefreshCw className={cn(\"mr-2 h-4 w-4\", loading && \"animate-spin\")} />\r\n            Refresh\r\n        </Button>\r\n        <span className=\"text-sm text-muted-foreground\">{filteredAndSortedAssistants.length} assistants</span>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto no-scrollbar\">\r\n        {loading ? (\r\n            <div className=\"flex justify-center items-center h-full\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n            </div>\r\n        ) : error ? (\r\n            <div className=\"flex flex-col justify-center items-center h-full text-destructive\">\r\n                <p>{error}</p>\r\n                <Button variant=\"link\" onClick={() => fetchAssistants(true)}>Try again</Button>\r\n            </div>\r\n        ) : (\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {filteredAndSortedAssistants.map(assistant => (\r\n                <Card key={assistant.id} className=\"flex flex-col hover:shadow-lg transition-shadow\">\r\n                <CardHeader className=\"p-4\">\r\n                    <div className=\"flex justify-between items-start\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${assistant.iconBg}`}>\r\n                          {assistant.iconComponent}\r\n                        </div>\r\n                        <CardTitle className=\"text-sm font-semibold\">{assistant.name}</CardTitle>\r\n                    </div>\r\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" onClick={() => toggleFavorite(assistant.id)}>\r\n                        <Heart className={cn(\"h-4 w-4\", assistant.isFavorited && \"fill-primary text-primary\")} />\r\n                    </Button>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardContent className=\"flex-1 p-4 pt-0\">\r\n                    <CardDescription className=\"text-xs\">{assistant.description}</CardDescription>\r\n                </CardContent>\r\n                <CardFooter className=\"p-4 pt-0\">\r\n                    <div className=\"text-xs bg-gray-100 dark:bg-gray-800 text-muted-foreground rounded-full px-2 py-0.5\">\r\n                    {assistant.version}\r\n                    </div>\r\n                </CardFooter>\r\n                </Card>\r\n            ))}\r\n            </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3314, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/PromptCatalog.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useMemo, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Search, Heart, RefreshCw, Loader2, Pencil, Trash2 } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Badge } from './ui/badge';\r\nimport { getPrompts } from '@/services/promptService';\r\nimport type { Prompt } from '@/lib/types';\r\n\r\ntype DisplayPrompt = Prompt & { isFavorited: boolean };\r\n\r\nconst assistants = ['All Assistants', 'ODIN', 'NOW Assist Guru', 'Prompt Architect', 'ADEPT Guru', 'NIEA Guru'];\r\nconst tasks = ['Select Task...', 'Content Creation', 'Brainstorming', 'Explanation', 'Summarization', 'Question Generation'];\r\nconst functionalAreas = ['Select Functional Area...', 'Marketing', 'Creative', 'Education', 'Research', 'Human Resources'];\r\n\r\nconst PROMPTS_CACHE_KEY = 'promptCatalogCache';\r\n\r\nexport function PromptCatalog() {\r\n  const [prompts, setPrompts] = useState<DisplayPrompt[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedAssistant, setSelectedAssistant] = useState('All Assistants');\r\n  const [selectedTask, setSelectedTask] = useState('Select Task...');\r\n  const [selectedFunctionalArea, setSelectedFunctionalArea] = useState('Select Functional Area...');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [activeTab, setActiveTab] = useState('common-prompts');\r\n\r\n\r\n  const fetchPrompts = async (forceRefresh = false) => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    if (!forceRefresh) {\r\n        const cachedPrompts = sessionStorage.getItem(PROMPTS_CACHE_KEY);\r\n        if (cachedPrompts) {\r\n            try {\r\n                const parsedPrompts = JSON.parse(cachedPrompts);\r\n                setPrompts(parsedPrompts);\r\n                setLoading(false);\r\n                return;\r\n            } catch (e) {\r\n                console.error(\"Failed to parse cached prompts\", e);\r\n                sessionStorage.removeItem(PROMPTS_CACHE_KEY);\r\n            }\r\n        }\r\n    } else {\r\n        sessionStorage.removeItem(PROMPTS_CACHE_KEY);\r\n    }\r\n\r\n    try {\r\n        const data = await getPrompts();\r\n        const displayPrompts = data.map(p => ({ ...p, isFavorited: false }));\r\n        setPrompts(displayPrompts);\r\n        sessionStorage.setItem(PROMPTS_CACHE_KEY, JSON.stringify(displayPrompts));\r\n    } catch (err) {\r\n        setError('Failed to load prompts. Please try again later.');\r\n        console.error(err);\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPrompts();\r\n  }, []);\r\n\r\n  const toggleFavorite = (id: string) => {\r\n    const newPrompts = prompts.map(p => p.id === id ? {...p, isFavorited: !p.isFavorited} : p);\r\n    setPrompts(newPrompts);\r\n    if (sessionStorage.getItem(PROMPTS_CACHE_KEY)) {\r\n        sessionStorage.setItem(PROMPTS_CACHE_KEY, JSON.stringify(newPrompts));\r\n    }\r\n  };\r\n  \r\n  const applyFilters = (items: DisplayPrompt[]) => {\r\n      return items.filter(prompt => {\r\n        const searchMatch = prompt.title.toLowerCase().includes(searchTerm.toLowerCase()) || prompt.description.toLowerCase().includes(searchTerm.toLowerCase());\r\n        const assistantMatch = selectedAssistant === 'All Assistants' || prompt.assistant === selectedAssistant;\r\n        const taskMatch = selectedTask === 'Select Task...' || prompt.task === selectedTask;\r\n        const functionalAreaMatch = selectedFunctionalArea === 'Select Functional Area...' || prompt.functionalArea === selectedFunctionalArea;\r\n        return searchMatch && assistantMatch && taskMatch && functionalAreaMatch;\r\n      });\r\n  }\r\n\r\n  const filteredPrompts = useMemo(() => {\r\n    return applyFilters(prompts);\r\n  }, [prompts, searchTerm, selectedAssistant, selectedTask, selectedFunctionalArea]);\r\n  \r\n  const favoritedPrompts = useMemo(() => {\r\n    const favorites = prompts.filter(p => p.isFavorited);\r\n    return applyFilters(favorites);\r\n  }, [prompts, searchTerm, selectedAssistant, selectedTask, selectedFunctionalArea]);\r\n  \r\n  const hasFavorites = useMemo(() => prompts.some(p => p.isFavorited), [prompts]);\r\n  \r\n  const handleRefresh = () => {\r\n    fetchPrompts(true);\r\n  };\r\n\r\n  const renderPromptGrid = (promptList: DisplayPrompt[], emptyMessage: string) => {\r\n    if (loading) {\r\n      return <div className=\"flex items-center justify-center h-full\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>;\r\n    }\r\n    if (error) {\r\n      return <div className=\"flex items-center justify-center h-full text-destructive\">{error}</div>;\r\n    }\r\n    if (promptList.length === 0) {\r\n      return <div className=\"flex items-center justify-center h-64\"><p className=\"text-muted-foreground\">{emptyMessage}</p></div>;\r\n    }\r\n    return (\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {promptList.map(prompt => (\r\n          <Card key={prompt.id} className=\"group relative flex flex-col hover:shadow-lg transition-shadow\">\r\n            <CardHeader className=\"p-4\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <CardTitle className=\"text-xs font-normal text-muted-foreground\">{prompt.assistant}</CardTitle>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 -mt-2 -mr-2\" onClick={() => toggleFavorite(prompt.id)}>\r\n                  <Heart className={cn(\"h-4 w-4\", prompt.isFavorited && \"fill-primary text-primary\")} />\r\n                </Button>\r\n              </div>\r\n              <p className=\"font-semibold text-sm pt-2\">{prompt.title}</p>\r\n            </CardHeader>\r\n            <CardContent className=\"flex-1 p-4 pt-0\">\r\n              <CardDescription className=\"text-xs\">{prompt.description}</CardDescription>\r\n            </CardContent>\r\n            <CardFooter className=\"p-4 pt-0 flex justify-between items-end\">\r\n              <div className=\"flex-wrap gap-2 flex\">\r\n                  {(prompt.tags || []).map(tag => (\r\n                  <Badge key={tag} variant=\"secondary\">{tag}</Badge>\r\n                  ))}\r\n              </div>\r\n              <div className=\"flex items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\">\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\">\r\n                      <Pencil className=\"h-4 w-4\" />\r\n                  </Button>\r\n              </div>\r\n            </CardFooter>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col p-6 pt-12 bg-background text-foreground\">\r\n      <header className=\"mb-6\">\r\n        <div className=\"flex justify-between items-center\">\r\n            <div className=\"space-y-1\">\r\n                <h1 className=\"text-2xl font-bold\">Prompt Catalog</h1>\r\n                <p className=\"text-muted-foreground\">Discover and use pre-built prompts to get the most out of your AI assistants. Browse by category, assistant, or search for specific use cases.</p>\r\n            </div>\r\n        </div>\r\n      </header>\r\n      \r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-grow flex flex-col\">\r\n        <div className='flex justify-between items-center border-b'>\r\n            <TabsList className=\"bg-transparent p-0\">\r\n                <TabsTrigger value=\"common-prompts\" className=\"data-[state=active]:shadow-none data-[state=active]:border-b-2 border-primary rounded-none\">Common Prompts</TabsTrigger>\r\n                {hasFavorites && (\r\n                    <TabsTrigger value=\"favorite-prompts\" className=\"data-[state=active]:shadow-none data-[state=active]:border-b-2 border-primary rounded-none\">Favorite Prompts</TabsTrigger>\r\n                )}\r\n            </TabsList>\r\n            <Button variant=\"ghost\" onClick={handleRefresh} disabled={loading}>\r\n                <RefreshCw className={cn(\"mr-2 h-4 w-4\", loading && \"animate-spin\")} />\r\n                Refresh\r\n            </Button>\r\n        </div>\r\n\r\n        <div className=\"mt-6 mb-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                <div>\r\n                    <label className=\"text-sm font-medium\">Assistant</label>\r\n                    <Select value={selectedAssistant} onValueChange={setSelectedAssistant}>\r\n                        <SelectTrigger><SelectValue /></SelectTrigger>\r\n                        <SelectContent>{assistants.map(a => <SelectItem key={a} value={a}>{a}</SelectItem>)}</SelectContent>\r\n                    </Select>\r\n                </div>\r\n                <div>\r\n                    <label className=\"text-sm font-medium\">Task</label>\r\n                     <Select value={selectedTask} onValueChange={setSelectedTask}>\r\n                        <SelectTrigger><SelectValue /></SelectTrigger>\r\n                        <SelectContent>{tasks.map(t => <SelectItem key={t} value={t}>{t}</SelectItem>)}</SelectContent>\r\n                    </Select>\r\n                </div>\r\n                <div>\r\n                    <label className=\"text-sm font-medium\">Functional Area</label>\r\n                     <Select value={selectedFunctionalArea} onValueChange={setSelectedFunctionalArea}>\r\n                        <SelectTrigger><SelectValue /></SelectTrigger>\r\n                        <SelectContent>{functionalAreas.map(f => <SelectItem key={f} value={f}>{f}</SelectItem>)}</SelectContent>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n             <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n                <Input \r\n                    placeholder=\"Search prompts...\" \r\n                    className=\"pl-10\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n            </div>\r\n        </div>\r\n        \r\n        <div className=\"flex-1 overflow-y-auto no-scrollbar\">\r\n            <TabsContent value=\"common-prompts\" className=\"mt-0\">\r\n                {renderPromptGrid(filteredPrompts, \"No prompts match your criteria.\")}\r\n            </TabsContent>\r\n            <TabsContent value=\"favorite-prompts\" className=\"mt-0\">\r\n                {renderPromptGrid(favoritedPrompts, \"You haven't favorited any prompts yet.\")}\r\n            </TabsContent>\r\n        </div>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3997, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/UserManagement.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Badge } from './ui/badge';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from './ui/dialog';\r\nimport { Label } from './ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\r\nimport { Card, CardContent, CardHeader } from './ui/card';\r\nimport { Search, UserPlus, Edit2, Trash2, MoreHorizontal, Loader2, ChevronsUpDown } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getAllUsers, updateUserProfile } from '@/services/userService';\r\nimport { roleService, type Role } from '@/services/roleService';\r\nimport type { User } from '@/lib/types';\r\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\r\nimport { Popover, PopoverContent, PopoverTrigger } from './ui/popover';\r\nimport { Checkbox } from './ui/checkbox';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { cn } from '@/lib/utils';\r\nimport { Switch } from './ui/switch';\r\nimport { Textarea } from './ui/textarea';\r\n\r\n\r\nexport function UserManagement() {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedRoleFilter, setSelectedRoleFilter] = useState('All Roles');\r\n  const [isAddUserOpen, setIsAddUserOpen] = useState(false);\r\n  const [editingUser, setEditingUser] = useState<User | null>(null);\r\n  const [newUser, setNewUser] = useState<Partial<User> & { active: boolean }>({\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    roles: [],\r\n    active: true,\r\n    bio: '',\r\n    avatar: '',\r\n    password: '',\r\n    Company: '',\r\n  });\r\n  const { toast } = useToast();\r\n  \r\n  const fetchInitialData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [fetchedUsers, fetchedRoles] = await Promise.all([\r\n        getAllUsers(),\r\n        roleService.getRoles()\r\n      ]);\r\n      setUsers(fetchedUsers);\r\n      setRoles(fetchedRoles);\r\n    } catch (error) {\r\n       toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch users or roles.\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  const filteredUsers = users.filter(user => {\r\n    const name = `${user.first_name || ''} ${user.last_name || ''}`.toLowerCase();\r\n    const matchesSearch = name.includes(searchTerm.toLowerCase()) ||\r\n                         (user.email || '').toLowerCase().includes(searchTerm.toLowerCase());\r\n    const userRoles = user.roles && user.roles.length > 0 ? user.roles : [];\r\n    const matchesRole = selectedRoleFilter === 'All Roles' || userRoles.includes(selectedRoleFilter);\r\n    return matchesSearch && matchesRole;\r\n  });\r\n\r\n  const availableRoles = useMemo(() => roles, [roles]);\r\n  \r\n  const handleAddUser = async () => {\r\n    if (!newUser.email) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please provide an email for the new user.\",\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n    \r\n    const userToCreate: Partial<User> = {\r\n        ...newUser,\r\n        active: newUser.active ? 'true' : 'false',\r\n    };\r\n\r\n    const success = await updateUserProfile(userToCreate);\r\n\r\n    if (success) {\r\n        resetForm();\r\n        setIsAddUserOpen(false);\r\n        toast({\r\n          title: \"Success\",\r\n          description: \"User added successfully\"\r\n        });\r\n        fetchInitialData();\r\n    } else {\r\n         toast({\r\n          title: \"Error\",\r\n          description: \"Failed to add user.\",\r\n          variant: \"destructive\"\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (user: User) => {\r\n    setEditingUser(user);\r\n    setNewUser({\r\n      first_name: user.first_name,\r\n      last_name: user.last_name,\r\n      email: user.email,\r\n      roles: user.roles || [],\r\n      userId: user.userId,\r\n      active: user.active === 'true',\r\n      bio: user.bio || '',\r\n      avatar: user.avatar || '',\r\n      password: '', // Don't pre-fill password for security\r\n      Company: user.Company || '',\r\n    });\r\n    setIsAddUserOpen(true);\r\n  };\r\n\r\n  const handleUpdateUser = async () => {\r\n    if (!editingUser) return;\r\n    \r\n    const userToUpdate: Partial<User> = {\r\n        userId: editingUser.userId,\r\n        first_name: newUser.first_name,\r\n        last_name: newUser.last_name,\r\n        email: newUser.email,\r\n        roles: newUser.roles || [],\r\n        active: newUser.active ? 'true' : 'false',\r\n        bio: newUser.bio,\r\n        avatar: newUser.avatar,\r\n        Company: newUser.Company,\r\n    };\r\n    \r\n    // Only include password if it was changed\r\n    if (newUser.password) {\r\n        userToUpdate.password = newUser.password;\r\n    }\r\n\r\n    const success = await updateUserProfile(userToUpdate);\r\n\r\n    if (success) {\r\n      const updatedUsers = users.map(user => \r\n        user.userId === editingUser.userId \r\n          ? { ...user, ...userToUpdate, active: userToUpdate.active! }\r\n          : user\r\n      );\r\n      setUsers(updatedUsers);\r\n      setEditingUser(null);\r\n      resetForm();\r\n      setIsAddUserOpen(false);\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"User updated successfully\"\r\n      });\r\n    } else {\r\n       toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update user.\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = (userId: string) => {\r\n    // This would call a deleteUser service in a real app.\r\n    setUsers(users.filter(user => user.userId !== userId));\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"User deleted successfully (client-side). Implement backend delete call.\"\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewUser({ \r\n      first_name: '', \r\n      last_name: '', \r\n      email: '', \r\n      roles: [],\r\n      active: true,\r\n      bio: '',\r\n      avatar: '',\r\n      password: '',\r\n      Company: '',\r\n    });\r\n    setEditingUser(null);\r\n  };\r\n\r\n  const handleRoleSelection = (roleName: string) => {\r\n    setNewUser(prev => {\r\n        const roles = prev.roles ? [...prev.roles] : [];\r\n        const index = roles.indexOf(roleName);\r\n        if (index > -1) {\r\n            roles.splice(index, 1);\r\n        } else {\r\n            roles.push(roleName);\r\n        }\r\n        return {...prev, roles};\r\n    })\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n        <div className=\"flex justify-center items-center h-64\">\r\n            <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">User Management</h1>\r\n          <p className=\"text-sm text-gray-600 mt-1\">Manage user accounts and permissions</p>\r\n        </div>\r\n        <Button onClick={() => setIsAddUserOpen(true)} className=\"bg-orange-500 hover:bg-orange-600\">\r\n          <UserPlus className=\"h-4 w-4 mr-2\" />\r\n          Add User\r\n        </Button>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                <Input\r\n                  placeholder=\"Search users...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10 w-64\"\r\n                />\r\n              </div>\r\n              <Select value={selectedRoleFilter} onValueChange={setSelectedRoleFilter}>\r\n                <SelectTrigger className=\"w-40\">\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"All Roles\">All Roles</SelectItem>\r\n                  {availableRoles.map(role => (\r\n                    <SelectItem key={role.id} value={role.name}>{role.name}</SelectItem>\r\n                  ))}\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>User</TableHead>\r\n                <TableHead>Role</TableHead>\r\n                <TableHead>Status</TableHead>\r\n                <TableHead>Last Login</TableHead>\r\n                <TableHead>Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filteredUsers.map((user) => {\r\n                const userRoles = user.roles && user.roles.length > 0 ? user.roles : ['User'];\r\n                return (\r\n                <TableRow key={user.userId}>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <Avatar>\r\n                        <AvatarImage src={user.avatar} />\r\n                        <AvatarFallback>{user.first_name?.charAt(0)}{user.last_name?.charAt(0)}</AvatarFallback>\r\n                      </Avatar>\r\n                      <div>\r\n                        <div className=\"font-medium text-blue-600\">{user.first_name} {user.last_name}</div>\r\n                        <div className=\"text-sm text-gray-600\">{user.email}</div>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {userRoles.map(role => (\r\n                          <Badge \r\n                              key={role}\r\n                              variant=\"secondary\" \r\n                              className={cn(\r\n                                  \"font-normal\",\r\n                                  role === 'Admin' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                              )}\r\n                          >\r\n                          {role}\r\n                          </Badge>\r\n                      ))}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge \r\n                      variant={'default'}\r\n                      className={cn(user.active === 'true' ? 'bg-green-500' : 'bg-gray-400')}\r\n                    >\r\n                      {user.active === 'true' ? 'Active' : 'Inactive'}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell className=\"text-gray-600\">Never</TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                          handleEditUser(user);\r\n                        }}\r\n                        className=\"text-orange-600 hover:text-orange-700\"\r\n                      >\r\n                        <Edit2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDeleteUser(user.userId)}\r\n                        className=\"text-red-600 hover:text-red-700\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )})}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog open={isAddUserOpen} onOpenChange={(open) => {\r\n        if (!open) {\r\n          setIsAddUserOpen(false);\r\n          resetForm();\r\n        }\r\n      }}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>{editingUser ? 'Edit User' : 'Add New User'}</DialogTitle>\r\n            <DialogDescription>\r\n              {editingUser ? 'Update user information and permissions.' : 'Create a new user account with appropriate permissions.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-4 py-4 max-h-[60vh] overflow-y-auto pr-6\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"first_name\" className=\"text-right\">\r\n                First Name\r\n              </Label>\r\n              <Input\r\n                id=\"first_name\"\r\n                value={newUser.first_name || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, first_name: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter first name\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"last_name\" className=\"text-right\">\r\n                Last Name\r\n              </Label>\r\n              <Input\r\n                id=\"last_name\"\r\n                value={newUser.last_name || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, last_name: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter last name\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"email\" className=\"text-right\">\r\n                Email\r\n              </Label>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={newUser.email || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter email address\"\r\n                disabled={!!editingUser}\r\n              />\r\n            </div>\r\n             <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"password\" className=\"text-right\">\r\n                Password\r\n              </Label>\r\n              <Input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={newUser.password || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder={editingUser ? \"Enter new password (optional)\" : \"Enter password\"}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"Company\" className=\"text-right\">\r\n                Company\r\n              </Label>\r\n              <Input\r\n                id=\"Company\"\r\n                value={newUser.Company || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, Company: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter company name\"\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"avatar\" className=\"text-right\">\r\n                Avatar URL\r\n              </Label>\r\n              <Input\r\n                id=\"avatar\"\r\n                value={newUser.avatar || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, avatar: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"https://example.com/avatar.png\"\r\n              />\r\n            </div>\r\n             <div className=\"grid grid-cols-4 items-start gap-4\">\r\n              <Label htmlFor=\"bio\" className=\"text-right pt-2\">\r\n                Bio\r\n              </Label>\r\n              <Textarea\r\n                id=\"bio\"\r\n                value={newUser.bio || ''}\r\n                onChange={(e) => setNewUser({ ...newUser, bio: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Tell us about the user\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label className=\"text-right\">\r\n                Roles\r\n              </Label>\r\n              <Popover>\r\n                <PopoverTrigger asChild>\r\n                    <Button\r\n                        variant=\"outline\"\r\n                        role=\"combobox\"\r\n                        className=\"col-span-3 justify-between font-normal\"\r\n                    >\r\n                        <span className=\"truncate\">\r\n                            {newUser.roles && newUser.roles.length > 0 ? newUser.roles.join(', ') : \"Select roles...\"}\r\n                        </span>\r\n                        <ChevronsUpDown className=\"ml-2 h-4 w-4 shrink-0 opacity-50\" />\r\n                    </Button>\r\n                </PopoverTrigger>\r\n                <PopoverContent className=\"w-[--radix-popover-trigger-width] p-0\">\r\n                    <ScrollArea className=\"h-48\">\r\n                        <div className=\"p-2 space-y-1\">\r\n                            {availableRoles.map(role => (\r\n                                <div key={role.id} className=\"flex items-center space-x-2 p-2 hover:bg-accent rounded-md\">\r\n                                    <Checkbox \r\n                                        id={`role-${role.id}`}\r\n                                        checked={newUser.roles?.includes(role.name)}\r\n                                        onCheckedChange={() => handleRoleSelection(role.name)}\r\n                                    />\r\n                                    <Label htmlFor={`role-${role.id}`} className=\"font-normal flex-1 cursor-pointer\">\r\n                                        {role.name}\r\n                                    </Label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </ScrollArea>\r\n                </PopoverContent>\r\n              </Popover>\r\n            </div>\r\n             <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"active\" className=\"text-right\">\r\n                Active\r\n              </Label>\r\n              <div className=\"col-span-3\">\r\n                <Switch\r\n                    id=\"active\"\r\n                    checked={newUser.active}\r\n                    onCheckedChange={(checked) => setNewUser({ ...newUser, active: checked })}\r\n                    className={cn('transition-opacity', !newUser.active && 'opacity-50')}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => {\r\n              setIsAddUserOpen(false);\r\n              resetForm();\r\n            }}>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={editingUser ? handleUpdateUser : handleAddUser} className=\"bg-orange-500 hover:bg-orange-600\">\r\n              {editingUser ? 'Update User' : 'Add User'}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5110, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/RoleManagement.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Badge } from './ui/badge';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from './ui/dialog';\r\nimport { Label } from './ui/label';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\r\nimport { Search, Plus, Edit2, Trash2, Users, Loader2 } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Checkbox } from './ui/checkbox';\r\nimport { Textarea } from './ui/textarea';\r\nimport { roleService, testRoleWebhooks, type Role } from '@/services/roleService';\r\n\r\nconst availablePermissions = [\r\n  'User Management',\r\n  'Role Management',\r\n  'System Settings',\r\n  'View Reports',\r\n  'Export Data',\r\n  'Import Data',\r\n  'Manage Workspaces',\r\n  'AI Tools Access',\r\n  'Admin Panel'\r\n];\r\n\r\nexport function RoleManagement() {\r\n  const [roles, setRoles] = useState<Role[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isAddRoleOpen, setIsAddRoleOpen] = useState(false);\r\n  const [editingRole, setEditingRole] = useState<Role | null>(null);\r\n  const [newRole, setNewRole] = useState({\r\n    name: '',\r\n    description: '',\r\n    permissions: [] as string[]\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  // Load roles on component mount\r\n  useEffect(() => {\r\n    fetchRoles();\r\n  }, []);\r\n\r\n  const fetchRoles = async () => {\r\n    try {\r\n      setLoading(true);\r\n      console.log('Fetching roles...');\r\n      const rolesData = await roleService.getRoles();\r\n      console.log('Roles data received in component:', rolesData);\r\n      setRoles(rolesData);\r\n      \r\n      // Show info toast if using sample data (check if all roles have mock IDs)\r\n      const isUsingSampleData = rolesData.every(role => role.id.startsWith('sample-') || role.id.startsWith('mock-'));\r\n      if (isUsingSampleData && rolesData.length > 0) {\r\n        toast({\r\n          title: \"Demo Mode\",\r\n          description: \"Showing sample role data. Connect to database for live data.\",\r\n          variant: \"default\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching roles:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error instanceof Error ? error.message : \"Failed to load roles\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const filteredRoles = roles.filter(role =>\r\n    (role.name || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n    (role.description || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleAddRole = async () => {\r\n    if (!newRole.name) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please provide a role name\",\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const createdRole = await roleService.createRole(newRole);\r\n      setRoles([...roles, createdRole]);\r\n      setNewRole({ name: '', description: '', permissions: [] });\r\n      setIsAddRoleOpen(false);\r\n      \r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Role created successfully\"\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating role:', error);\r\n      const errorMessage = error instanceof Error ? error.message : \"Failed to create role\";\r\n      const isNetworkError = errorMessage.includes('Network error');\r\n      \r\n      toast({\r\n        title: isNetworkError ? \"Network Error\" : \"Error\",\r\n        description: isNetworkError \r\n          ? \"Unable to reach the server. Please check your connection and try again.\"\r\n          : errorMessage,\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleEditRole = (role: Role) => {\r\n    setEditingRole(role);\r\n    setNewRole({\r\n      name: role.name,\r\n      description: role.description,\r\n      permissions: [...role.permissions]\r\n    });\r\n  };\r\n\r\n  const handleUpdateRole = async () => {\r\n    if (!editingRole || !newRole.name) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Please provide a role name\",\r\n        variant: \"destructive\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const updatedRole = await roleService.updateRole({\r\n        id: editingRole.id,\r\n        ...newRole\r\n      });\r\n      \r\n      const updatedRoles = roles.map(role => \r\n        role.id === editingRole.id ? updatedRole : role\r\n      );\r\n      \r\n      setRoles(updatedRoles);\r\n      setEditingRole(null);\r\n      setNewRole({ name: '', description: '', permissions: [] });\r\n      \r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Role updated successfully\"\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating role:', error);\r\n      const errorMessage = error instanceof Error ? error.message : \"Failed to update role\";\r\n      const isNetworkError = errorMessage.includes('Network error');\r\n      \r\n      toast({\r\n        title: isNetworkError ? \"Network Error\" : \"Error\",\r\n        description: isNetworkError \r\n          ? \"Unable to reach the server. Please check your connection and try again.\"\r\n          : errorMessage,\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRole = async (roleId: string) => {\r\n    try {\r\n      await roleService.deleteRole(roleId);\r\n      setRoles(roles.filter(role => role.id !== roleId));\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Role deleted successfully\"\r\n      });\r\n    } catch (error) {\r\n      console.error('Error deleting role:', error);\r\n      const errorMessage = error instanceof Error ? error.message : \"Failed to delete role\";\r\n      const isNetworkError = errorMessage.includes('Network error');\r\n      \r\n      toast({\r\n        title: isNetworkError ? \"Network Error\" : \"Error\",\r\n        description: isNetworkError \r\n          ? \"Unable to reach the server. Please check your connection and try again.\"\r\n          : errorMessage,\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePermissionChange = (permission: string, checked: boolean) => {\r\n    if (checked) {\r\n      setNewRole({\r\n        ...newRole,\r\n        permissions: [...newRole.permissions, permission]\r\n      });\r\n    } else {\r\n      setNewRole({\r\n        ...newRole,\r\n        permissions: newRole.permissions.filter(p => p !== permission)\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewRole({ name: '', description: '', permissions: [] });\r\n    setEditingRole(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Role Management</h1>\r\n          <p className=\"text-sm text-gray-600 mt-1\">Manage roles and permissions</p>\r\n        </div>\r\n        <Button \r\n          onClick={() => setIsAddRoleOpen(true)} \r\n          className=\"bg-orange-500 hover:bg-orange-600\"\r\n          disabled={loading}\r\n        >\r\n          <Plus className=\"h-4 w-4 mr-2\" />\r\n          Add Role\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"flex items-center space-x-4 mb-6\">\r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n          <Input\r\n            placeholder=\"Search roles...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-10 w-64\"\r\n            disabled={loading}\r\n          />\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={fetchRoles}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n          ) : null}\r\n          Refresh\r\n        </Button>\r\n        <Button\r\n          variant=\"outline\"\r\n          onClick={async () => {\r\n            await testRoleWebhooks();\r\n          }}\r\n          disabled={loading}\r\n        >\r\n          Debug All Webhooks\r\n        </Button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"flex items-center justify-center py-12\">\r\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n          <span className=\"ml-2\">Loading roles...</span>\r\n        </div>\r\n      ) : filteredRoles.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <p className=\"text-gray-500\">\r\n            {searchTerm ? 'No roles found matching your search' : 'No roles found'}\r\n          </p>\r\n          {!searchTerm && (\r\n            <Button \r\n              onClick={() => setIsAddRoleOpen(true)} \r\n              className=\"mt-4 bg-orange-500 hover:bg-orange-600\"\r\n            >\r\n              <Plus className=\"h-4 w-4 mr-2\" />\r\n              Create your first role\r\n            </Button>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredRoles.map((role) => (\r\n            <Card key={role.id} className=\"relative\">\r\n              <CardHeader>\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div>\r\n                    <CardTitle className=\"text-lg\">{role.name}</CardTitle>\r\n                    <CardDescription className=\"mt-1\">{role.description}</CardDescription>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleEditRole(role)}\r\n                      className=\"text-orange-600 hover:text-orange-700 p-1 h-auto\"\r\n                    >\r\n                      <Edit2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => handleDeleteRole(role.id)}\r\n                      className=\"text-red-600 hover:text-red-700 p-1 h-auto\"\r\n                    >\r\n                      <Trash2 className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Users className=\"h-4 w-4 text-gray-500\" />\r\n                    <span className=\"text-sm text-gray-600\">{role.userCount} users</span>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <p className=\"text-sm font-medium text-gray-700 mb-2\">Permissions:</p>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {(role.permissions || []).map((permission) => (\r\n                        <Badge\r\n                          key={permission}\r\n                          variant=\"secondary\"\r\n                          className=\"text-xs bg-orange-100 text-orange-800\"\r\n                        >\r\n                          {permission}\r\n                        </Badge>\r\n                      ))}\r\n                      {(!role.permissions || role.permissions.length === 0) && (\r\n                        <span className=\"text-xs text-gray-400\">No permissions assigned</span>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-xs text-gray-500 pt-2 border-t\">\r\n                    Created {role.createdAt}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <Dialog open={isAddRoleOpen || editingRole !== null} onOpenChange={(open) => {\r\n        if (!open) {\r\n          setIsAddRoleOpen(false);\r\n          resetForm();\r\n        }\r\n      }}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>{editingRole ? 'Edit Role' : 'Add New Role'}</DialogTitle>\r\n            <DialogDescription>\r\n              {editingRole ? 'Update role information and permissions.' : 'Create a new role with specific permissions.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"grid gap-6 py-4\">\r\n            <div className=\"grid grid-cols-4 items-center gap-4\">\r\n              <Label htmlFor=\"role-name\" className=\"text-right\">\r\n                Role Name\r\n              </Label>\r\n              <Input\r\n                id=\"role-name\"\r\n                value={newRole.name}\r\n                onChange={(e) => setNewRole({ ...newRole, name: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter role name\"\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-start gap-4\">\r\n              <Label htmlFor=\"role-description\" className=\"text-right pt-2\">\r\n                Description\r\n              </Label>\r\n              <Textarea\r\n                id=\"role-description\"\r\n                value={newRole.description}\r\n                onChange={(e) => setNewRole({ ...newRole, description: e.target.value })}\r\n                className=\"col-span-3\"\r\n                placeholder=\"Enter role description\"\r\n                rows={3}\r\n                disabled={submitting}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-4 items-start gap-4\">\r\n              <Label className=\"text-right pt-2\">Permissions</Label>\r\n              <div className=\"col-span-3 space-y-3\">\r\n                {availablePermissions.map((permission) => (\r\n                  <div key={permission} className=\"flex items-center space-x-2\">\r\n                    <Checkbox\r\n                      id={permission}\r\n                      checked={newRole.permissions.includes(permission)}\r\n                      onCheckedChange={(checked) => handlePermissionChange(permission, checked as boolean)}\r\n                      disabled={submitting}\r\n                    />\r\n                    <Label htmlFor={permission} className=\"text-sm font-normal\">\r\n                      {permission}\r\n                    </Label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <DialogFooter>\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={() => {\r\n                setIsAddRoleOpen(false);\r\n                resetForm();\r\n              }}\r\n              disabled={submitting}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button \r\n              onClick={editingRole ? handleUpdateRole : handleAddRole} \r\n              className=\"bg-orange-500 hover:bg-orange-600\"\r\n              disabled={submitting}\r\n            >\r\n              {submitting ? (\r\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\r\n              ) : null}\r\n              {editingRole ? 'Update Role' : 'Create Role'}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5930, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/CompanyManagement.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Badge } from './ui/badge';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\r\nimport { Card, CardContent, CardHeader } from './ui/card';\r\nimport { Search, Building, Edit2, Trash2, Loader2 } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getAllCompanies } from '@/services/companyService';\r\nimport type { Company } from '@/lib/types';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CompanyManagementProps {\r\n  onEditCompany?: (company: Company) => void;\r\n}\r\n\r\nexport function CompanyManagement({ onEditCompany }: CompanyManagementProps) {\r\n  const [companies, setCompanies] = useState<Company[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { toast } = useToast();\r\n  \r\n  const fetchCompanies = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const fetchedCompanies = await getAllCompanies();\r\n      setCompanies(fetchedCompanies);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch companies.\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n  }, []);\r\n\r\n  const filteredCompanies = companies.filter(company => {\r\n    const matchesSearch = \r\n      company.company_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      company.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      company.chat_bot_name.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesSearch;\r\n  });\r\n\r\n  const handleEditCompany = (company: Company) => {\r\n    onEditCompany?.(company);\r\n  };\r\n\r\n  const handleDeleteCompany = (companyId: string) => {\r\n    // This would call a deleteCompany service in a real app.\r\n    setCompanies(companies.filter(company => company.id !== companyId));\r\n    toast({\r\n      title: \"Success\",\r\n      description: \"Company deleted successfully (client-side). Implement backend delete call.\"\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-semibold text-gray-900\">Company Management</h1>\r\n          <p className=\"text-sm text-gray-600 mt-1\">Manage company accounts and configurations</p>\r\n        </div>\r\n      </div>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4\" />\r\n                <Input\r\n                  placeholder=\"Search companies...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"pl-10 w-64\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>Company</TableHead>\r\n                <TableHead>Bot Name</TableHead>\r\n                <TableHead>Users</TableHead>\r\n                <TableHead>Environment</TableHead>\r\n                <TableHead>LLM Config</TableHead>\r\n                <TableHead>Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filteredCompanies.map((company) => (\r\n                <TableRow key={company.id}>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <div className=\"h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center\">\r\n                        <Building className=\"h-5 w-5 text-blue-600\" />\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"font-medium text-blue-600\">{company.company_name}</div>\r\n                        <div className=\"text-sm text-gray-600\">ID: {company.id}</div>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"font-medium\">{company.chat_bot_name}</div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"text-center\">\r\n                      <span className=\"text-lg font-medium\">{company.user_count}</span>\r\n                      <div className=\"text-xs text-gray-500\">users</div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge \r\n                      variant={company.demo_environment ? 'secondary' : 'default'}\r\n                      className={cn(\r\n                        company.demo_environment ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'\r\n                      )}\r\n                    >\r\n                      {company.demo_environment ? 'Demo' : 'Production'}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge variant=\"outline\">\r\n                      {company.llm_config}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleEditCompany(company)}\r\n                        className=\"text-orange-600 hover:text-orange-700\"\r\n                      >\r\n                        <Edit2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleDeleteCompany(company.id)}\r\n                        className=\"text-red-600 hover:text-red-700\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6378, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/CompanyEdit.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Label } from './ui/label';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\r\nimport { Switch } from './ui/switch';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from './ui/collapsible';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\r\nimport { Badge } from './ui/badge';\r\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\r\nimport { ArrowLeft, Save, Building, Loader2, ChevronDown, ChevronRight, Users } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getCompanyById, updateCompany } from '@/services/companyService';\r\nimport { getAllUsers } from '@/services/userService';\r\nimport type { Company, User } from '@/lib/types';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CompanyEditProps {\r\n  companyId?: string;\r\n  company?: Company;\r\n  onBack?: () => void;\r\n  onSave?: () => void;\r\n}\r\n\r\nexport function CompanyEdit({ companyId, company: initialCompany, onBack, onSave }: CompanyEditProps) {\r\n  const [company, setCompany] = useState<Company | null>(initialCompany || null);\r\n  const [loading, setLoading] = useState(!initialCompany && !!companyId);\r\n  const [saving, setSaving] = useState(false);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(false);\r\n  const [configOpen, setConfigOpen] = useState(false);\r\n  const [environmentOpen, setEnvironmentOpen] = useState(false);\r\n  const [usersOpen, setUsersOpen] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const fetchCompany = async () => {\r\n      if (companyId && !initialCompany) {\r\n        setLoading(true);\r\n        try {\r\n          const companyData = await getCompanyById(companyId);\r\n          setCompany(companyData);\r\n        } catch (error) {\r\n          console.error('Failed to fetch company data:', error);\r\n          toast({ \r\n            variant: 'destructive', \r\n            title: 'Error', \r\n            description: 'Failed to load company profile.' \r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCompany();\r\n  }, [companyId, initialCompany, toast]);\r\n\r\n  const fetchCompanyUsers = async () => {\r\n    if (!company) return;\r\n    \r\n    setLoadingUsers(true);\r\n    try {\r\n      const allUsers = await getAllUsers();\r\n      console.log('Full company object:', JSON.stringify(company, null, 2));\r\n      \r\n      // Filter users by company_id\r\n      const companyUsers = allUsers.filter(user => {\r\n        // Extract user's company ID\r\n        const userCompanyId = typeof user.company_id === 'object' \r\n          ? user.company_id?.$oid \r\n          : user.company_id;\r\n        \r\n        // Extract the MongoDB ObjectId from company data\r\n        // Try different possible locations for the ObjectId\r\n        let companyMongoId = null;\r\n        \r\n        if (company._id && typeof company._id === 'object' && company._id.$oid) {\r\n          companyMongoId = company._id.$oid;\r\n        } else if (company._id && typeof company._id === 'string') {\r\n          companyMongoId = company._id;\r\n        } else if (company.id) {\r\n          // If id is actually the MongoDB ObjectId string\r\n          companyMongoId = company.id;\r\n        }\r\n        \r\n        console.log(`User ${user.email}: company_id = ${userCompanyId}`);\r\n        console.log(`Company MongoDB ID: ${companyMongoId}`);\r\n        \r\n        const matches = userCompanyId === companyMongoId;\r\n        console.log(`Match result: ${matches}`);\r\n        \r\n        return matches;\r\n      });\r\n      \r\n      console.log('Filtered company users:', companyUsers);\r\n      setUsers(companyUsers);\r\n    } catch (error) {\r\n      console.error('Failed to fetch company users:', error);\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'Failed to load company users.' \r\n      });\r\n    } finally {\r\n      setLoadingUsers(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (company) {\r\n      fetchCompanyUsers();\r\n    }\r\n  }, [company]);\r\n\r\n  const handleInputChange = (field: keyof Company, value: string | number | boolean) => {\r\n    if (!company) return;\r\n    setCompany({ ...company, [field]: value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!company) return;\r\n    \r\n    setSaving(true);\r\n    try {\r\n      const success = await updateCompany(company);\r\n      if (success) {\r\n        toast({ \r\n          title: 'Success', \r\n          description: 'Company profile updated successfully!', \r\n          duration: 3000 \r\n        });\r\n        \r\n        // Refresh company data after successful update\r\n        if (company.id) {\r\n          try {\r\n            const refreshedCompany = await getCompanyById(company.id);\r\n            if (refreshedCompany) {\r\n              setCompany(refreshedCompany);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error refreshing company data after update:', error);\r\n          }\r\n        }\r\n        \r\n        onSave?.();\r\n      } else {\r\n        toast({ \r\n          variant: 'destructive', \r\n          title: 'Error', \r\n          description: 'Failed to update company profile.' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving company:', error);\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'An error occurred while saving.' \r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleConfigToggle = () => {\r\n    setConfigOpen(!configOpen);\r\n    if (!configOpen && environmentOpen) {\r\n      setEnvironmentOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleEnvironmentToggle = () => {\r\n    setEnvironmentOpen(!environmentOpen);\r\n    if (!environmentOpen && configOpen) {\r\n      setConfigOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleUsersToggle = () => {\r\n    setUsersOpen(!usersOpen);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!company) {\r\n    return <div>Company not found. Please try again later.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6 max-w-4xl mx-auto\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-4\">\r\n          {onBack && (\r\n            <Button variant=\"ghost\" onClick={onBack}>\r\n              <ArrowLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n          )}\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Company Profile</h1>\r\n            <p className=\"text-sm text-gray-600 mt-1\">Manage company configuration and settings</p>\r\n          </div>\r\n        </div>\r\n        <Button onClick={handleSave} disabled={saving} className=\"bg-orange-500 hover:bg-orange-600\">\r\n          {saving ? <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" /> : <Save className=\"h-4 w-4 mr-2\" />}\r\n          Save Changes\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Profile Information */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Profile Information</CardTitle>\r\n          <CardDescription>Basic company information and configuration</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center\">\r\n              <Building className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n            <div className=\"grid gap-1.5\">\r\n              <h2 className=\"text-xl font-bold\">{company.company_name}</h2>\r\n              <p className=\"text-muted-foreground\">ID: {company.id}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"grid gap-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"company_name\">Company Name</Label>\r\n                <Input \r\n                  id=\"company_name\" \r\n                  value={company.company_name || ''} \r\n                  onChange={(e) => handleInputChange('company_name', e.target.value)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"id\">Company ID</Label>\r\n                <Input \r\n                  id=\"id\" \r\n                  value={company.id || ''} \r\n                  onChange={(e) => handleInputChange('id', e.target.value)} \r\n                  disabled\r\n                  className=\"bg-gray-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"chat_bot_name\">Chat Bot Name</Label>\r\n                <Input \r\n                  id=\"chat_bot_name\" \r\n                  value={company.chat_bot_name || ''} \r\n                  onChange={(e) => handleInputChange('chat_bot_name', e.target.value)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"user_count\">User Count</Label>\r\n                <Input \r\n                  id=\"user_count\" \r\n                  type=\"number\"\r\n                  value={company.user_count || 0} \r\n                  onChange={(e) => handleInputChange('user_count', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Configuration Settings */}\r\n      <Card>\r\n        <Collapsible open={configOpen} onOpenChange={handleConfigToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Configuration</CardTitle>\r\n                  <CardDescription>System configuration and limits</CardDescription>\r\n                </div>\r\n                {configOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"space-y-6 pt-0\">\r\n          <div className=\"grid gap-4\">\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"openai_key\">OpenAI API Key</Label>\r\n              <Input \r\n                id=\"openai_key\" \r\n                type=\"password\"\r\n                value={company[\"OpenAI API Key\"] || ''} \r\n                onChange={(e) => handleInputChange('OpenAI API Key', e.target.value)} \r\n                placeholder=\"sk-...\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"token_allotment\">Token Allotment</Label>\r\n                <Input \r\n                  id=\"token_allotment\" \r\n                  type=\"number\"\r\n                  value={company.token_allotment || 0} \r\n                  onChange={(e) => handleInputChange('token_allotment', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"max_workspace_sessions\">Max Workspace Sessions</Label>\r\n                <Input \r\n                  id=\"max_workspace_sessions\" \r\n                  type=\"number\"\r\n                  value={company.max_workspace_sessions || 0} \r\n                  onChange={(e) => handleInputChange('max_workspace_sessions', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"llm_config\">LLM Configuration</Label>\r\n              <Select \r\n                value={company.llm_config || ''} \r\n                onValueChange={(value) => handleInputChange('llm_config', value)}\r\n              >\r\n                <SelectTrigger>\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"GEMINI\">Gemini</SelectItem>\r\n                  <SelectItem value=\"OPENAI\">OpenAI</SelectItem>\r\n                  <SelectItem value=\"CLAUDE\">Claude</SelectItem>\r\n                  <SelectItem value=\"AZURE\">Azure</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Environment Settings */}\r\n      <Card>\r\n        <Collapsible open={environmentOpen} onOpenChange={handleEnvironmentToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Environment Settings</CardTitle>\r\n                  <CardDescription>Environment and deployment configuration</CardDescription>\r\n                </div>\r\n                {environmentOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"pt-0\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"space-y-0.5\">\r\n              <div className=\"text-base font-medium\">Demo Environment</div>\r\n              <div className=\"text-sm text-muted-foreground\">\r\n                Enable demo mode for testing and development\r\n              </div>\r\n            </div>\r\n            <Switch\r\n              checked={company.demo_environment || false}\r\n              onCheckedChange={(checked) => handleInputChange('demo_environment', checked)}\r\n              className={cn('transition-opacity', !company.demo_environment && 'opacity-50')}\r\n            />\r\n          </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Company Users */}\r\n      <Card>\r\n        <Collapsible open={usersOpen} onOpenChange={handleUsersToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Users className=\"h-5 w-5\" />\r\n                    Company Users ({users.length})\r\n                  </CardTitle>\r\n                  <CardDescription>Users associated with this company</CardDescription>\r\n                </div>\r\n                {usersOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"pt-0\">\r\n              {loadingUsers ? (\r\n                <div className=\"flex justify-center items-center py-8\">\r\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n                </div>\r\n              ) : users.length === 0 ? (\r\n                <div className=\"text-center py-8 text-muted-foreground\">\r\n                  No users found for this company\r\n                </div>\r\n              ) : (\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>User</TableHead>\r\n                      <TableHead>Role</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Last Login</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {users.map((user) => {\r\n                      const userRoles = user.roles && user.roles.length > 0 ? user.roles : ['User'];\r\n                      return (\r\n                        <TableRow key={user.userId}>\r\n                          <TableCell>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <Avatar>\r\n                                <AvatarImage src={user.avatar} />\r\n                                <AvatarFallback>{user.first_name?.charAt(0)}{user.last_name?.charAt(0)}</AvatarFallback>\r\n                              </Avatar>\r\n                              <div>\r\n                                <div className=\"font-medium text-blue-600\">{user.first_name} {user.last_name}</div>\r\n                                <div className=\"text-sm text-gray-600\">{user.email}</div>\r\n                              </div>\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {userRoles.map(role => (\r\n                                <Badge \r\n                                  key={role}\r\n                                  variant=\"secondary\" \r\n                                  className={cn(\r\n                                    \"font-normal\",\r\n                                    role === 'Admin' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                                  )}\r\n                                >\r\n                                  {role}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Badge \r\n                              variant={'default'}\r\n                              className={cn(user.active ? 'bg-green-500' : 'bg-gray-400')}\r\n                            >\r\n                              {user.active ? 'Active' : 'Inactive'}\r\n                            </Badge>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-gray-600\">Never</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAlBA;;;;;;;;;;;;;;;;;;AA2BO,SAAS,YAAY,EAAE,SAAS,EAAE,SAAS,cAAc,EAAE,MAAM,EAAE,MAAM,EAAoB;IAClG,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,kBAAkB;IACzE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAC5D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,IAAI,aAAa,CAAC,gBAAgB;gBAChC,WAAW;gBACX,IAAI;oBACF,MAAM,cAAc,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE;oBACzC,WAAW;gBACb,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,iCAAiC;oBAC/C,MAAM;wBACJ,SAAS;wBACT,OAAO;wBACP,aAAa;oBACf;gBACF,SAAU;oBACR,WAAW;gBACb;YACF;QACF;QAEA;IACF,GAAG;QAAC;QAAW;QAAgB;KAAM;IAErC,MAAM,oBAAoB;QACxB,IAAI,CAAC,SAAS;QAEd,gBAAgB;QAChB,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;YACjC,QAAQ,GAAG,CAAC,wBAAwB,KAAK,SAAS,CAAC,SAAS,MAAM;YAElE,6BAA6B;YAC7B,MAAM,eAAe,SAAS,MAAM,CAAC,CAAA;gBACnC,4BAA4B;gBAC5B,MAAM,gBAAgB,OAAO,KAAK,UAAU,KAAK,WAC7C,KAAK,UAAU,EAAE,OACjB,KAAK,UAAU;gBAEnB,iDAAiD;gBACjD,oDAAoD;gBACpD,IAAI,iBAAiB;gBAErB,IAAI,QAAQ,GAAG,IAAI,OAAO,QAAQ,GAAG,KAAK,YAAY,QAAQ,GAAG,CAAC,IAAI,EAAE;oBACtE,iBAAiB,QAAQ,GAAG,CAAC,IAAI;gBACnC,OAAO,IAAI,QAAQ,GAAG,IAAI,OAAO,QAAQ,GAAG,KAAK,UAAU;oBACzD,iBAAiB,QAAQ,GAAG;gBAC9B,OAAO,IAAI,QAAQ,EAAE,EAAE;oBACrB,gDAAgD;oBAChD,iBAAiB,QAAQ,EAAE;gBAC7B;gBAEA,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,eAAe,EAAE,eAAe;gBAC/D,QAAQ,GAAG,CAAC,CAAC,oBAAoB,EAAE,gBAAgB;gBAEnD,MAAM,UAAU,kBAAkB;gBAClC,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,SAAS;gBAEtC,OAAO;YACT;YAEA,QAAQ,GAAG,CAAC,2BAA2B;YACvC,SAAS;QACX,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;QACF,SAAU;YACR,gBAAgB;QAClB;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS;YACX;QACF;IACF,GAAG;QAAC;KAAQ;IAEZ,MAAM,oBAAoB,CAAC,OAAsB;QAC/C,IAAI,CAAC,SAAS;QACd,WAAW;YAAE,GAAG,OAAO;YAAE,CAAC,MAAM,EAAE;QAAM;IAC1C;IAEA,MAAM,aAAa;QACjB,IAAI,CAAC,SAAS;QAEd,UAAU;QACV,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,iIAAA,CAAA,gBAAa,AAAD,EAAE;YACpC,IAAI,SAAS;gBACX,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,UAAU;gBACZ;gBAEA,+CAA+C;gBAC/C,IAAI,QAAQ,EAAE,EAAE;oBACd,IAAI;wBACF,MAAM,mBAAmB,MAAM,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,EAAE;wBACxD,IAAI,kBAAkB;4BACpB,WAAW;wBACb;oBACF,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+CAA+C;oBAC/D;gBACF;gBAEA;YACF,OAAO;gBACL,MAAM;oBACJ,SAAS;oBACT,OAAO;oBACP,aAAa;gBACf;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;gBACJ,SAAS;gBACT,OAAO;gBACP,aAAa;YACf;QACF,SAAU;YACR,UAAU;QACZ;IACF;IAEA,MAAM,qBAAqB;QACzB,cAAc,CAAC;QACf,IAAI,CAAC,cAAc,iBAAiB;YAClC,mBAAmB;QACrB;IACF;IAEA,MAAM,0BAA0B;QAC9B,mBAAmB,CAAC;QACpB,IAAI,CAAC,mBAAmB,YAAY;YAClC,cAAc;QAChB;IACF;IAEA,MAAM,oBAAoB;QACxB,aAAa,CAAC;IAChB;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,iNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;;;;;;IAGzB;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO,8OAAC;sBAAI;;;;;;IACd;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;4BACZ,wBACC,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,SAAS;0CAC/B,cAAA,8OAAC,gNAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;;;;;;0CAGzB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAAuC;;;;;;kDACrD,8OAAC;wCAAE,WAAU;kDAA6B;;;;;;;;;;;;;;;;;;kCAG9C,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAY,UAAU;wBAAQ,WAAU;;4BACtD,uBAAS,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;qDAAiC,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAkB;;;;;;;;;;;;;0BAMpG,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;;0CACT,8OAAC,gIAAA,CAAA,YAAS;0CAAC;;;;;;0CACX,8OAAC,gIAAA,CAAA,kBAAe;0CAAC;;;;;;;;;;;;kCAEnB,8OAAC,gIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,0MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAG,WAAU;0DAAqB,QAAQ,YAAY;;;;;;0DACvD,8OAAC;gDAAE,WAAU;;oDAAwB;oDAAK,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;0CAIxD,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAe;;;;;;kEAC9B,8OAAC,iIAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,QAAQ,YAAY,IAAI;wDAC/B,UAAU,CAAC,IAAM,kBAAkB,gBAAgB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0DAGrE,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAK;;;;;;kEACpB,8OAAC,iIAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,QAAQ,EAAE,IAAI;wDACrB,UAAU,CAAC,IAAM,kBAAkB,MAAM,EAAE,MAAM,CAAC,KAAK;wDACvD,QAAQ;wDACR,WAAU;;;;;;;;;;;;;;;;;;kDAKhB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAgB;;;;;;kEAC/B,8OAAC,iIAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,OAAO,QAAQ,aAAa,IAAI;wDAChC,UAAU,CAAC,IAAM,kBAAkB,iBAAiB,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;0DAGtE,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAa;;;;;;kEAC5B,8OAAC,iIAAA,CAAA,QAAK;wDACJ,IAAG;wDACH,MAAK;wDACL,OAAO,QAAQ,UAAU,IAAI;wDAC7B,UAAU,CAAC,IAAM,kBAAkB,cAAc,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASzF,8OAAC,gIAAA,CAAA,OAAI;0BACH,cAAA,8OAAC,uIAAA,CAAA,cAAW;oBAAC,MAAM;oBAAY,cAAc;;sCAC3C,8OAAC,uIAAA,CAAA,qBAAkB;4BAAC,OAAO;sCACzB,cAAA,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,gIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;wCAElB,2BAAa,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;iEAAe,8OAAC,sNAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sCAIlF,8OAAC,uIAAA,CAAA,qBAAkB;sCACjB,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACzB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,iIAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAa;;;;;;8DAC5B,8OAAC,iIAAA,CAAA,QAAK;oDACJ,IAAG;oDACH,MAAK;oDACL,OAAO,OAAO,CAAC,iBAAiB,IAAI;oDACpC,UAAU,CAAC,IAAM,kBAAkB,kBAAkB,EAAE,MAAM,CAAC,KAAK;oDACnE,aAAY;;;;;;;;;;;;sDAIhB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,iIAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAkB;;;;;;sEACjC,8OAAC,iIAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO,QAAQ,eAAe,IAAI;4DAClC,UAAU,CAAC,IAAM,kBAAkB,mBAAmB,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;;;;;;;8DAGtF,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,iIAAA,CAAA,QAAK;4DAAC,SAAQ;sEAAyB;;;;;;sEACxC,8OAAC,iIAAA,CAAA,QAAK;4DACJ,IAAG;4DACH,MAAK;4DACL,OAAO,QAAQ,sBAAsB,IAAI;4DACzC,UAAU,CAAC,IAAM,kBAAkB,0BAA0B,SAAS,EAAE,MAAM,CAAC,KAAK,KAAK;;;;;;;;;;;;;;;;;;sDAK/F,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,iIAAA,CAAA,QAAK;oDAAC,SAAQ;8DAAa;;;;;;8DAC5B,8OAAC,kIAAA,CAAA,SAAM;oDACL,OAAO,QAAQ,UAAU,IAAI;oDAC7B,eAAe,CAAC,QAAU,kBAAkB,cAAc;;sEAE1D,8OAAC,kIAAA,CAAA,gBAAa;sEACZ,cAAA,8OAAC,kIAAA,CAAA,cAAW;;;;;;;;;;sEAEd,8OAAC,kIAAA,CAAA,gBAAa;;8EACZ,8OAAC,kIAAA,CAAA,aAAU;oEAAC,OAAM;8EAAS;;;;;;8EAC3B,8OAAC,kIAAA,CAAA,aAAU;oEAAC,OAAM;8EAAS;;;;;;8EAC3B,8OAAC,kIAAA,CAAA,aAAU;oEAAC,OAAM;8EAAS;;;;;;8EAC3B,8OAAC,kIAAA,CAAA,aAAU;oEAAC,OAAM;8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWtC,8OAAC,gIAAA,CAAA,OAAI;0BACH,cAAA,8OAAC,uIAAA,CAAA,cAAW;oBAAC,MAAM;oBAAiB,cAAc;;sCAChD,8OAAC,uIAAA,CAAA,qBAAkB;4BAAC,OAAO;sCACzB,cAAA,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,gIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;wCAElB,gCAAkB,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;iEAAe,8OAAC,sNAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sCAIvF,8OAAC,uIAAA,CAAA,qBAAkB;sCACjB,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACzB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DAAwB;;;;;;8DACvC,8OAAC;oDAAI,WAAU;8DAAgC;;;;;;;;;;;;sDAIjD,8OAAC,kIAAA,CAAA,SAAM;4CACL,SAAS,QAAQ,gBAAgB,IAAI;4CACrC,iBAAiB,CAAC,UAAY,kBAAkB,oBAAoB;4CACpE,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sBAAsB,CAAC,QAAQ,gBAAgB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BASzE,8OAAC,gIAAA,CAAA,OAAI;0BACH,cAAA,8OAAC,uIAAA,CAAA,cAAW;oBAAC,MAAM;oBAAW,cAAc;;sCAC1C,8OAAC,uIAAA,CAAA,qBAAkB;4BAAC,OAAO;sCACzB,cAAA,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;;8DACC,8OAAC,gIAAA,CAAA,YAAS;oDAAC,WAAU;;sEACnB,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;wDAAY;wDACb,MAAM,MAAM;wDAAC;;;;;;;8DAE/B,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;wCAElB,0BAAY,8OAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;iEAAe,8OAAC,sNAAA,CAAA,eAAY;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;sCAIjF,8OAAC,uIAAA,CAAA,qBAAkB;sCACjB,cAAA,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;0CACpB,6BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC,iNAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;;;;;2CAEnB,MAAM,MAAM,KAAK,kBACnB,8OAAC;oCAAI,WAAU;8CAAyC;;;;;yDAIxD,8OAAC,iIAAA,CAAA,QAAK;;sDACJ,8OAAC,iIAAA,CAAA,cAAW;sDACV,cAAA,8OAAC,iIAAA,CAAA,WAAQ;;kEACP,8OAAC,iIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,iIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,iIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,iIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;;;;;;;sDAGf,8OAAC,iIAAA,CAAA,YAAS;sDACP,MAAM,GAAG,CAAC,CAAC;gDACV,MAAM,YAAY,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,GAAG,IAAI,KAAK,KAAK,GAAG;oDAAC;iDAAO;gDAC7E,qBACE,8OAAC,iIAAA,CAAA,WAAQ;;sEACP,8OAAC,iIAAA,CAAA,YAAS;sEACR,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC,kIAAA,CAAA,SAAM;;0FACL,8OAAC,kIAAA,CAAA,cAAW;gFAAC,KAAK,KAAK,MAAM;;;;;;0FAC7B,8OAAC,kIAAA,CAAA,iBAAc;;oFAAE,KAAK,UAAU,EAAE,OAAO;oFAAI,KAAK,SAAS,EAAE,OAAO;;;;;;;;;;;;;kFAEtE,8OAAC;;0FACC,8OAAC;gFAAI,WAAU;;oFAA6B,KAAK,UAAU;oFAAC;oFAAE,KAAK,SAAS;;;;;;;0FAC5E,8OAAC;gFAAI,WAAU;0FAAyB,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;;;sEAIxD,8OAAC,iIAAA,CAAA,YAAS;sEACR,cAAA,8OAAC;gEAAI,WAAU;0EACZ,UAAU,GAAG,CAAC,CAAA,qBACb,8OAAC,iIAAA,CAAA,QAAK;wEAEJ,SAAQ;wEACR,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,eACA,SAAS,UAAU,gCAAgC;kFAGpD;uEAPI;;;;;;;;;;;;;;;sEAYb,8OAAC,iIAAA,CAAA,YAAS;sEACR,cAAA,8OAAC,iIAAA,CAAA,QAAK;gEACJ,SAAS;gEACT,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,KAAK,MAAM,GAAG,iBAAiB;0EAE5C,KAAK,MAAM,GAAG,WAAW;;;;;;;;;;;sEAG9B,8OAAC,iIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAgB;;;;;;;mDArCxB,KAAK,MAAM;;;;;4CAwC9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUpB","debugId":null}},
    {"offset": {"line": 7610, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/ai_browser/src/components/FindAnswersPanel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\r\nimport { RefreshCw, X, ChevronDown, ChevronRight, HelpCircle, Sparkles } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { getFindAnswersDetailById } from '@/services/findAnswersService';\r\n\r\ninterface Article {\r\n    id: string;\r\n    policyName: string;\r\n    content: string;\r\n    category: string;\r\n    url?: string;\r\n    lastUpdated: string;\r\n    author: string;\r\n}\r\n\r\ninterface FindAnswersData {\r\n    _id: { $oid: string };\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    learnMoreLink?: string;\r\n    scenario?: string;\r\n    actions?: string[];\r\n    articles: Article[];\r\n}\r\n\r\ninterface FindAnswersPanelProps {\r\n    findAnswersId: string;\r\n    onClose: () => void;\r\n}\r\n\r\nexport function FindAnswersPanel({ findAnswersId, onClose }: FindAnswersPanelProps) {\r\n    console.log('FindAnswersPanel mounted with ID:', findAnswersId);\r\n    const [data, setData] = useState<FindAnswersData | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [openArticles, setOpenArticles] = useState<Set<string>>(new Set());\r\n    const [showDebug, setShowDebug] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadFindAnswersData();\r\n    }, [findAnswersId]);\r\n\r\n    const loadFindAnswersData = async () => {\r\n        console.log('Loading find answers data for ID:', findAnswersId);\r\n        setLoading(true);\r\n        try {\r\n            const detailData = await getFindAnswersDetailById(findAnswersId);\r\n            console.log('Loaded find answers data:', detailData);\r\n            setData(detailData);\r\n        } catch (error) {\r\n            console.error('Failed to load find answers data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const toggleArticle = (articleId: string) => {\r\n        const newOpenArticles = new Set(openArticles);\r\n        if (newOpenArticles.has(articleId)) {\r\n            newOpenArticles.delete(articleId);\r\n        } else {\r\n            newOpenArticles.add(articleId);\r\n        }\r\n        setOpenArticles(newOpenArticles);\r\n    };\r\n\r\n    const formatDate = (dateString: string) => {\r\n        return new Date(dateString).toLocaleDateString('en-US', {\r\n            year: 'numeric',\r\n            month: 'numeric', \r\n            day: 'numeric'\r\n        });\r\n    };\r\n\r\n    console.log('FindAnswersPanel render state:', { loading, hasData: !!data, dataTitle: data?.title });\r\n\r\n    if (loading) {\r\n        console.log('Rendering loading state');\r\n        return (\r\n            <div className=\"flex-1 bg-gray-50 overflow-auto\">\r\n                <div className=\"w-full p-6 pr-8 flex items-center justify-center h-64\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\r\n                        <span>Loading Find Answers...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!data) {\r\n        return (\r\n            <div className=\"flex-1 bg-gray-50 overflow-auto\">\r\n                <div className=\"w-full p-6 pr-8 flex items-center justify-center h-64\">\r\n                    <span className=\"text-gray-500\">No data found for {findAnswersId}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    console.log('Rendering main content with data:', data);\r\n    return (\r\n        <div className=\"flex-1 bg-gray-50 overflow-auto\">\r\n            <div className=\"w-full p-6 pr-8\">\r\n                {/* Header */}\r\n                <div className=\"mb-8 flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                        <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">{data.title}</h1>\r\n                        <p className=\"text-gray-600 text-lg leading-relaxed\">{data.description}</p>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2 ml-4\">\r\n                        <Button \r\n                            variant=\"outline\" \r\n                            size=\"sm\" \r\n                            onClick={loadFindAnswersData}\r\n                            className=\"flex items-center space-x-2 px-3 py-2\"\r\n                            title=\"Refresh knowledge articles\"\r\n                        >\r\n                            <RefreshCw className=\"h-4 w-4\" />\r\n                            <span className=\"text-sm\">Refresh</span>\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"ghost\" \r\n                            size=\"sm\" \r\n                            onClick={onClose}\r\n                            className=\"p-2 text-gray-400 hover:text-gray-600\"\r\n                            title=\"Close panel\"\r\n                        >\r\n                            <X className=\"h-4 w-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Try It Yourself Section */}\r\n                {data.scenario && (\r\n                    <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 border border-orange-200 rounded-lg p-6 mb-8\">\r\n                        <div className=\"flex items-start space-x-3 mb-4\">\r\n                            <Sparkles className=\"w-5 h-5 text-orange-600 mt-0.5 flex-shrink-0\" />\r\n                            <h2 className=\"text-lg font-semibold text-orange-900\">Try it yourself!</h2>\r\n                        </div>\r\n                        <div className=\"text-gray-700 mb-4\">\r\n                            <p className=\"mb-4\">{data.scenario}</p>\r\n                            {data.actions && (\r\n                                <ul className=\"space-y-2 ml-4\">\r\n                                    {data.actions.map((action, index) => (\r\n                                        <li key={index} className=\"flex items-start\">\r\n                                            <span className=\"w-2 h-2 bg-orange-400 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\r\n                                            <span>{action}</span>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Articles Section */}\r\n                <div className=\"mb-8\">\r\n                    <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">\r\n                        Here are the sample articles that power the answers about your questions\r\n                    </h3>\r\n                    \r\n                    <div className=\"space-y-3\">\r\n                        {data.articles.map((article) => (\r\n                            <Collapsible\r\n                                key={article.id}\r\n                                open={openArticles.has(article.id)}\r\n                                onOpenChange={() => toggleArticle(article.id)}\r\n                            >\r\n                                <div className=\"bg-white border border-gray-200 rounded-lg\">\r\n                                    <CollapsibleTrigger asChild>\r\n                                        <button className=\"w-full flex items-center justify-between p-4 text-left hover:bg-gray-50 transition-colors\">\r\n                                            <span className=\"font-medium text-gray-900\">{article.policyName}</span>\r\n                                            {openArticles.has(article.id) ? \r\n                                                <ChevronDown className=\"w-5 h-5 text-gray-400\" /> : \r\n                                                <ChevronRight className=\"w-5 h-5 text-gray-400\" />\r\n                                            }\r\n                                        </button>\r\n                                    </CollapsibleTrigger>\r\n                                    <CollapsibleContent className=\"px-4 pb-4\">\r\n                                        <p className=\"text-gray-700 mb-3\">{article.content}</p>\r\n                                        <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\r\n                                            <span className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded text-xs\">\r\n                                                {article.category}\r\n                                            </span>\r\n                                            <span>Author: {article.author}</span>\r\n                                            <span>Updated: {formatDate(article.lastUpdated)}</span>\r\n                                            {article.url && (\r\n                                                <a href={article.url} className=\"text-orange-600 hover:text-orange-700 hover:underline\">\r\n                                                    View Full Article\r\n                                                </a>\r\n                                            )}\r\n                                        </div>\r\n                                    </CollapsibleContent>\r\n                                </div>\r\n                            </Collapsible>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Learn More Link */}\r\n                {data.learnMoreLink && (\r\n                    <div className=\"flex items-center space-x-2 text-orange-600 hover:text-orange-700 transition-colors cursor-pointer mb-8\">\r\n                        <ChevronRight className=\"w-4 h-4\" />\r\n                        <span className=\"font-medium\">{data.learnMoreLink}</span>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Debug Section */}\r\n                <div className=\"mt-8\">\r\n                    <Collapsible open={showDebug} onOpenChange={setShowDebug}>\r\n                        <CollapsibleTrigger asChild>\r\n                            <button className=\"flex items-center space-x-2 text-sm text-gray-400 hover:text-gray-600 transition-colors mb-2\">\r\n                                <HelpCircle className=\"w-4 h-4\" />\r\n                                <span>Debug Information</span>\r\n                            </button>\r\n                        </CollapsibleTrigger>\r\n                        <CollapsibleContent className=\"mt-2 p-3 bg-gray-100 rounded text-xs space-y-1 text-gray-600\">\r\n                            <div><strong>Debug Info:</strong> Successfully loaded: {data.title}</div>\r\n                            <div><strong>Section:</strong> {data.id}</div>\r\n                            <div><strong>Assistant ID:</strong> None (will use ODIN)</div>\r\n                            <div><strong>Has Data:</strong> Yes</div>\r\n                            <div><strong>Title:</strong> {data.title}</div>\r\n                            <div><strong>Articles Count:</strong> {data.articles.length}</div>\r\n                            <div><strong>Try It Yourself:</strong> {data.scenario ? 'Yes' : 'No'}</div>\r\n                            <div><strong>Assistant ID from Data:</strong> Not specified</div>\r\n                        </CollapsibleContent>\r\n                    </Collapsible>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}