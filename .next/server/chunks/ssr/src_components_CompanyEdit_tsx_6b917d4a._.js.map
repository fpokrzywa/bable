{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/CompanyEdit.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Button } from './ui/button';\r\nimport { Input } from './ui/input';\r\nimport { Label } from './ui/label';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';\r\nimport { Switch } from './ui/switch';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from './ui/collapsible';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';\r\nimport { Badge } from './ui/badge';\r\nimport { Avatar, AvatarFallback, AvatarImage } from './ui/avatar';\r\nimport { ArrowLeft, Save, Building, Loader2, ChevronDown, ChevronRight, Users } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getCompanyById, updateCompany } from '@/services/companyService';\r\nimport { getAllUsers } from '@/services/userService';\r\nimport type { Company, User } from '@/lib/types';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface CompanyEditProps {\r\n  companyId?: string;\r\n  company?: Company;\r\n  onBack?: () => void;\r\n  onSave?: () => void;\r\n}\r\n\r\nexport function CompanyEdit({ companyId, company: initialCompany, onBack, onSave }: CompanyEditProps) {\r\n  const [company, setCompany] = useState<Company | null>(initialCompany || null);\r\n  const [loading, setLoading] = useState(!initialCompany && !!companyId);\r\n  const [saving, setSaving] = useState(false);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loadingUsers, setLoadingUsers] = useState(false);\r\n  const [configOpen, setConfigOpen] = useState(false);\r\n  const [environmentOpen, setEnvironmentOpen] = useState(false);\r\n  const [usersOpen, setUsersOpen] = useState(false);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const fetchCompany = async () => {\r\n      if (companyId && !initialCompany) {\r\n        setLoading(true);\r\n        try {\r\n          const companyData = await getCompanyById(companyId);\r\n          setCompany(companyData);\r\n        } catch (error) {\r\n          console.error('Failed to fetch company data:', error);\r\n          toast({ \r\n            variant: 'destructive', \r\n            title: 'Error', \r\n            description: 'Failed to load company profile.' \r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCompany();\r\n  }, [companyId, initialCompany, toast]);\r\n\r\n  const fetchCompanyUsers = async () => {\r\n    if (!company) return;\r\n    \r\n    setLoadingUsers(true);\r\n    try {\r\n      const allUsers = await getAllUsers();\r\n      console.log('Full company object:', JSON.stringify(company, null, 2));\r\n      \r\n      // Filter users by company_id\r\n      const companyUsers = allUsers.filter(user => {\r\n        // Extract user's company ID\r\n        const userCompanyId = typeof user.company_id === 'object' \r\n          ? user.company_id?.$oid \r\n          : user.company_id;\r\n        \r\n        // Extract the MongoDB ObjectId from company data\r\n        // Try different possible locations for the ObjectId\r\n        let companyMongoId = null;\r\n        \r\n        if (company._id && typeof company._id === 'object' && company._id.$oid) {\r\n          companyMongoId = company._id.$oid;\r\n        } else if (company._id && typeof company._id === 'string') {\r\n          companyMongoId = company._id;\r\n        } else if (company.id) {\r\n          // If id is actually the MongoDB ObjectId string\r\n          companyMongoId = company.id;\r\n        }\r\n        \r\n        console.log(`User ${user.email}: company_id = ${userCompanyId}`);\r\n        console.log(`Company MongoDB ID: ${companyMongoId}`);\r\n        \r\n        const matches = userCompanyId === companyMongoId;\r\n        console.log(`Match result: ${matches}`);\r\n        \r\n        return matches;\r\n      });\r\n      \r\n      console.log('Filtered company users:', companyUsers);\r\n      setUsers(companyUsers);\r\n    } catch (error) {\r\n      console.error('Failed to fetch company users:', error);\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'Failed to load company users.' \r\n      });\r\n    } finally {\r\n      setLoadingUsers(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (company) {\r\n      fetchCompanyUsers();\r\n    }\r\n  }, [company]);\r\n\r\n  const handleInputChange = (field: keyof Company, value: string | number | boolean) => {\r\n    if (!company) return;\r\n    setCompany({ ...company, [field]: value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!company) return;\r\n    \r\n    setSaving(true);\r\n    try {\r\n      const success = await updateCompany(company);\r\n      if (success) {\r\n        toast({ \r\n          title: 'Success', \r\n          description: 'Company profile updated successfully!', \r\n          duration: 3000 \r\n        });\r\n        \r\n        // Refresh company data after successful update\r\n        if (company.id) {\r\n          try {\r\n            const refreshedCompany = await getCompanyById(company.id);\r\n            if (refreshedCompany) {\r\n              setCompany(refreshedCompany);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error refreshing company data after update:', error);\r\n          }\r\n        }\r\n        \r\n        onSave?.();\r\n      } else {\r\n        toast({ \r\n          variant: 'destructive', \r\n          title: 'Error', \r\n          description: 'Failed to update company profile.' \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving company:', error);\r\n      toast({ \r\n        variant: 'destructive', \r\n        title: 'Error', \r\n        description: 'An error occurred while saving.' \r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleConfigToggle = () => {\r\n    setConfigOpen(!configOpen);\r\n    if (!configOpen && environmentOpen) {\r\n      setEnvironmentOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleEnvironmentToggle = () => {\r\n    setEnvironmentOpen(!environmentOpen);\r\n    if (!environmentOpen && configOpen) {\r\n      setConfigOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleUsersToggle = () => {\r\n    setUsersOpen(!usersOpen);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-64\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!company) {\r\n    return <div>Company not found. Please try again later.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6 max-w-4xl mx-auto\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-4\">\r\n          {onBack && (\r\n            <Button variant=\"ghost\" onClick={onBack}>\r\n              <ArrowLeft className=\"h-4 w-4\" />\r\n            </Button>\r\n          )}\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Company Profile</h1>\r\n            <p className=\"text-sm text-gray-600 mt-1\">Manage company configuration and settings</p>\r\n          </div>\r\n        </div>\r\n        <Button onClick={handleSave} disabled={saving} className=\"bg-orange-500 hover:bg-orange-600\">\r\n          {saving ? <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" /> : <Save className=\"h-4 w-4 mr-2\" />}\r\n          Save Changes\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Profile Information */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Profile Information</CardTitle>\r\n          <CardDescription>Basic company information and configuration</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center\">\r\n              <Building className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n            <div className=\"grid gap-1.5\">\r\n              <h2 className=\"text-xl font-bold\">{company.company_name}</h2>\r\n              <p className=\"text-muted-foreground\">ID: {company.id}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"grid gap-4\">\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"company_name\">Company Name</Label>\r\n                <Input \r\n                  id=\"company_name\" \r\n                  value={company.company_name || ''} \r\n                  onChange={(e) => handleInputChange('company_name', e.target.value)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"id\">Company ID</Label>\r\n                <Input \r\n                  id=\"id\" \r\n                  value={company.id || ''} \r\n                  onChange={(e) => handleInputChange('id', e.target.value)} \r\n                  disabled\r\n                  className=\"bg-gray-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"chat_bot_name\">Chat Bot Name</Label>\r\n                <Input \r\n                  id=\"chat_bot_name\" \r\n                  value={company.chat_bot_name || ''} \r\n                  onChange={(e) => handleInputChange('chat_bot_name', e.target.value)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"user_count\">User Count</Label>\r\n                <Input \r\n                  id=\"user_count\" \r\n                  type=\"number\"\r\n                  value={company.user_count || 0} \r\n                  onChange={(e) => handleInputChange('user_count', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Configuration Settings */}\r\n      <Card>\r\n        <Collapsible open={configOpen} onOpenChange={handleConfigToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Configuration</CardTitle>\r\n                  <CardDescription>System configuration and limits</CardDescription>\r\n                </div>\r\n                {configOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"space-y-6 pt-0\">\r\n          <div className=\"grid gap-4\">\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"openai_key\">OpenAI API Key</Label>\r\n              <Input \r\n                id=\"openai_key\" \r\n                type=\"password\"\r\n                value={company[\"OpenAI API Key\"] || ''} \r\n                onChange={(e) => handleInputChange('OpenAI API Key', e.target.value)} \r\n                placeholder=\"sk-...\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"token_allotment\">Token Allotment</Label>\r\n                <Input \r\n                  id=\"token_allotment\" \r\n                  type=\"number\"\r\n                  value={company.token_allotment || 0} \r\n                  onChange={(e) => handleInputChange('token_allotment', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"max_workspace_sessions\">Max Workspace Sessions</Label>\r\n                <Input \r\n                  id=\"max_workspace_sessions\" \r\n                  type=\"number\"\r\n                  value={company.max_workspace_sessions || 0} \r\n                  onChange={(e) => handleInputChange('max_workspace_sessions', parseInt(e.target.value) || 0)} \r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"llm_config\">LLM Configuration</Label>\r\n              <Select \r\n                value={company.llm_config || ''} \r\n                onValueChange={(value) => handleInputChange('llm_config', value)}\r\n              >\r\n                <SelectTrigger>\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"GEMINI\">Gemini</SelectItem>\r\n                  <SelectItem value=\"OPENAI\">OpenAI</SelectItem>\r\n                  <SelectItem value=\"CLAUDE\">Claude</SelectItem>\r\n                  <SelectItem value=\"AZURE\">Azure</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Environment Settings */}\r\n      <Card>\r\n        <Collapsible open={environmentOpen} onOpenChange={handleEnvironmentToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Environment Settings</CardTitle>\r\n                  <CardDescription>Environment and deployment configuration</CardDescription>\r\n                </div>\r\n                {environmentOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"pt-0 space-y-6\">\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"servicenow_url\">ServiceNow Instance URL</Label>\r\n                <Input \r\n                  id=\"servicenow_url\" \r\n                  value={company.url || ''} \r\n                  onChange={(e) => handleInputChange('url', e.target.value)} \r\n                  placeholder=\"https://your-instance.service-now.com\"\r\n                />\r\n                <div className=\"text-sm text-muted-foreground\">\r\n                  The URL of your ServiceNow instance for API integration\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <div className=\"text-base font-medium\">Demo Environment</div>\r\n                  <div className=\"text-sm text-muted-foreground\">\r\n                    Enable demo mode for testing and development\r\n                  </div>\r\n                </div>\r\n                <Switch\r\n                  checked={company.demo_environment || false}\r\n                  onCheckedChange={(checked) => handleInputChange('demo_environment', checked)}\r\n                  className={cn('transition-opacity', !company.demo_environment && 'opacity-50')}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n\r\n      {/* Company Users */}\r\n      <Card>\r\n        <Collapsible open={usersOpen} onOpenChange={handleUsersToggle}>\r\n          <CollapsibleTrigger asChild>\r\n            <CardHeader className=\"hover:bg-gray-50 cursor-pointer transition-colors rounded-t-lg hover:rounded-lg\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Users className=\"h-5 w-5\" />\r\n                    Company Users ({users.length})\r\n                  </CardTitle>\r\n                  <CardDescription>Users associated with this company</CardDescription>\r\n                </div>\r\n                {usersOpen ? <ChevronDown className=\"h-4 w-4\" /> : <ChevronRight className=\"h-4 w-4\" />}\r\n              </div>\r\n            </CardHeader>\r\n          </CollapsibleTrigger>\r\n          <CollapsibleContent>\r\n            <CardContent className=\"pt-0\">\r\n              {loadingUsers ? (\r\n                <div className=\"flex justify-center items-center py-8\">\r\n                  <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n                </div>\r\n              ) : users.length === 0 ? (\r\n                <div className=\"text-center py-8 text-muted-foreground\">\r\n                  No users found for this company\r\n                </div>\r\n              ) : (\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>User</TableHead>\r\n                      <TableHead>Role</TableHead>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Last Login</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {users.map((user) => {\r\n                      const userRoles = user.roles && user.roles.length > 0 ? user.roles : ['User'];\r\n                      return (\r\n                        <TableRow key={user.userId}>\r\n                          <TableCell>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <Avatar>\r\n                                <AvatarImage src={user.avatar} />\r\n                                <AvatarFallback>{user.first_name?.charAt(0)}{user.last_name?.charAt(0)}</AvatarFallback>\r\n                              </Avatar>\r\n                              <div>\r\n                                <div className=\"font-medium text-blue-600\">{user.first_name} {user.last_name}</div>\r\n                                <div className=\"text-sm text-gray-600\">{user.email}</div>\r\n                              </div>\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {userRoles.map(role => (\r\n                                <Badge \r\n                                  key={role}\r\n                                  variant=\"secondary\" \r\n                                  className={cn(\r\n                                    \"font-normal\",\r\n                                    role === 'Admin' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                                  )}\r\n                                >\r\n                                  {role}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <Badge \r\n                              variant={'default'}\r\n                              className={cn(user.active ? 'bg-green-500' : 'bg-gray-400')}\r\n                            >\r\n                              {user.active ? 'Active' : 'Inactive'}\r\n                            </Badge>\r\n                          </TableCell>\r\n                          <TableCell className=\"text-gray-600\">Never</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </CardContent>\r\n          </CollapsibleContent>\r\n        </Collapsible>\r\n      </Card>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}