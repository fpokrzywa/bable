{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/Dashboard.tsx"],"sourcesContent":["\r\n\r\n'use client';\r\n\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport type { Widget, SavedQuery, Problem, Incident, Change, User, Workspace } from '@/lib/types';\r\nimport { generateWidgetFromQuery } from '@/ai/flows/generate-widget-from-query';\r\nimport { agentSpecificWidget } from '@/ai/flows/agent-specific-widget';\r\nimport { saveQueryWithVoiceText } from '@/ai/flows/save-query-with-voice-text';\r\nimport { generateOverviewSummary } from '@/ai/flows/generate-overview-summary';\r\nimport { Sidebar, useSidebar } from '@/components/ui/sidebar';\r\nimport { AppSidebar } from '@/components/layout/AppSidebar';\r\nimport { WidgetContainer, WIDGET_INITIAL_HEIGHT, WIDGET_INITIAL_WIDTH } from '@/components/widgets/WidgetContainer';\r\nimport { ChatInput } from '@/components/ChatInput';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { getIncidents } from '@/services/servicenow';\r\nimport { getCompanyById } from '@/services/companyService';\r\nimport { getUserProfile, getCachedUserData, updateCachedWorkspaces, getCachedWorkspace } from '@/services/userService';\r\nimport { getSampleData } from '@/services/sampleDataService';\r\nimport { getWorkspaces, saveWorkspace, deleteWorkspace } from '@/services/workspaceService';\r\nimport { Menu, Sparkle, Loader2, Save, Edit, X as XIcon, Disc, Pencil, Clock } from 'lucide-react';\r\nimport { Button } from './ui/button';\r\nimport Image from 'next/image';\r\nimport { cn } from '@/lib/utils';\r\nimport { Dialog, DialogClose, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from './ui/dialog';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\nimport { useWorkspaceSync } from '@/hooks/use-workspace-sync';\r\nimport { BaseWidget } from './widgets/BaseWidget';\r\nimport { ScrollArea } from './ui/scroll-area';\r\nimport { Input } from './ui/input';\r\nimport { Label } from './ui/label';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from './ui/tooltip';\r\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetDescription } from './ui/sheet';\r\nimport { Profile } from './Profile';\r\nimport { AIStore } from './AIStore';\r\nimport { PromptCatalog } from './PromptCatalog';\r\nimport { UserManagement } from './UserManagement';\r\nimport { RoleManagement } from './RoleManagement';\r\nimport { CompanyManagement } from './CompanyManagement';\r\nimport { CompanyEdit } from './CompanyEdit';\r\nimport { FindAnswersPanel } from './FindAnswersPanel';\r\n\r\n\r\ntype ViewType = 'dashboard' | 'ai-store' | 'prompt-catalog' | 'profile' | 'user-management' | 'role-management' | 'company-management' | 'company-edit' | string;\r\n\r\nexport function Dashboard() {\r\n  const [currentView, setCurrentView] = useState<ViewType>('dashboard');\r\n  const [selectedFindAnswersId, setSelectedFindAnswersId] = useState<string | null>(null);\r\n  const [widgets, setWidgets] = useState<Widget[]>([]);\r\n  const [favorites, setFavorites] = useState<Widget[]>([]);\r\n  const [savedQueries, setSavedQueries] = useState<SavedQuery[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingWorkspaces, setLoadingWorkspaces] = useState(true);\r\n  const { toast } = useToast();\r\n  const { state, openMobile, setOpenMobile } = useSidebar();\r\n  const isMobile = useIsMobile();\r\n  const [nextZIndex, setNextZIndex] = useState(1);\r\n  const [lastRestorePosition, setLastRestorePosition] = useState({ x: 0, y: 0 });\r\n  const sidebarRef = useRef<HTMLDivElement>(null);\r\n  const chatInputRef = useRef<HTMLDivElement>(null);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [selectedCompany, setSelectedCompany] = useState<any>(null);\r\n\r\n  const [workspaces, setWorkspaces] = useState<Workspace[]>([]);\r\n  const [openWorkspaces, setOpenWorkspaces] = useState<Workspace[]>([]);\r\n  const [currentWorkspaceId, setCurrentWorkspaceId] = useState<string | null>(null);\r\n\r\n  const [isWorkspaceModalOpen, setIsWorkspaceModalOpen] = useState(false);\r\n  const [workspaceName, setWorkspaceName] = useState('');\r\n  const [workspaceToEdit, setWorkspaceToEdit] = useState<Workspace | null>(null);\r\n  const [workspaceAction, setWorkspaceAction] = useState<'create' | 'edit' | 'load' | 'forget' | 'save' | null>(null);\r\n  const [isWorkspaceListOpen, setIsWorkspaceListOpen] = useState(false);\r\n  \r\n  const [isDraggingWidget, setIsDraggingWidget] = useState(false);\r\n  const [isManualSaving, setIsManualSaving] = useState(false);\r\n\r\n  const activeWorkspace = openWorkspaces.find(ws => ws.workspaceId === currentWorkspaceId) || null;\r\n  const MAX_OPEN_SESSIONS = parseInt(process.env.NEXT_PUBLIC_WORKSPACE_OPEN_SESSIONS || '3', 10);\r\n  \r\n  // Workspace synchronization\r\n  const {\r\n    isChecking: isSyncingWorkspaces,\r\n    lastSyncTime,\r\n    syncNow: syncWorkspacesNow,\r\n    enabled: syncEnabled\r\n  } = useWorkspaceSync({\r\n    user,\r\n    workspaces,\r\n    onWorkspacesChanged: (updatedWorkspaces) => {\r\n      setWorkspaces(updatedWorkspaces);\r\n    },\r\n    onWorkspacesDeleted: (deletedIds) => {\r\n      // Remove deleted workspaces from open sessions\r\n      const remainingOpen = openWorkspaces.filter(ws => !deletedIds.includes(ws.workspaceId));\r\n      setOpenWorkspaces(remainingOpen);\r\n      \r\n      // If current workspace was deleted, switch to first available or clear\r\n      if (currentWorkspaceId && deletedIds.includes(currentWorkspaceId)) {\r\n        if (remainingOpen.length > 0) {\r\n          setCurrentWorkspaceId(remainingOpen[0].workspaceId);\r\n          loadWorkspaceUI(remainingOpen[0]);\r\n        } else {\r\n          setCurrentWorkspaceId(null);\r\n          setWidgets([]);\r\n        }\r\n      }\r\n    },\r\n    enabled: process.env.NEXT_PUBLIC_WORKSPACE_SYNC_ENABLED !== 'false',\r\n    intervalMs: parseInt(process.env.NEXT_PUBLIC_WORKSPACE_SYNC_INTERVAL || '30000', 10),\r\n    showNotifications: process.env.NEXT_PUBLIC_WORKSPACE_SYNC_NOTIFICATIONS !== 'false'\r\n  });\r\n\r\n  const loadUserData = () => {\r\n    // First try to get cached data from login\r\n    const cachedData = getCachedUserData();\r\n    \r\n    if (cachedData.user && cachedData.workspaces.length >= 0) {\r\n      // Use cached data immediately\r\n      setUser(cachedData.user);\r\n      setWorkspaces(cachedData.workspaces);\r\n      setLoadingWorkspaces(false);\r\n      return;\r\n    }\r\n\r\n    // Fallback to fetching if no cached data (shouldn't happen after login)\r\n    fetchUserDataFallback();\r\n  };\r\n\r\n  const fetchUserDataFallback = async () => {\r\n    const session = localStorage.getItem('session');\r\n    if (!session) return;\r\n    const userEmail = JSON.parse(session).email;\r\n    if (!userEmail) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const profile = await getUserProfile(userEmail);\r\n      setUser(profile);\r\n\r\n      if (profile) {\r\n        const workspacesData = await getWorkspaces(profile.userId);\r\n        setWorkspaces(workspacesData);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch user data:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n      setLoadingWorkspaces(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadUserData();\r\n  }, []);\r\n\r\n  const useDebouncedEffect = (effect: () => void, deps: any[], delay: number) => {\r\n      const callback = useCallback(effect, deps);\r\n      useEffect(() => {\r\n          const handler = setTimeout(() => {\r\n              callback();\r\n          }, delay);\r\n\r\n          return () => {\r\n              clearTimeout(handler);\r\n          };\r\n      }, [callback, delay]);\r\n  };\r\n    \r\n  // Debounced auto-save for workspace changes\r\n  useDebouncedEffect(() => {\r\n      if (activeWorkspace && user && !loading && !isWorkspaceModalOpen && !isDraggingWidget && !isManualSaving) {\r\n        handleQuickSaveWorkspace(true);\r\n      }\r\n  }, [widgets, activeWorkspace, user, isDraggingWidget, isManualSaving], 1000);\r\n  \r\n  const handleProfileUpdate = () => {\r\n    // Refresh user data from server and update cache\r\n    fetchUserDataFallback();\r\n  };\r\n\r\n  const handleViewChange = (view: ViewType) => {\r\n    setCurrentView(view);\r\n    \r\n    // Check if this is a Find Answers item\r\n    const findAnswersItems = ['it-support-guides', 'my-support-guides', 'hr-policies', 'niea-guides', 'adept-guides'];\r\n    if (findAnswersItems.includes(view)) {\r\n      setSelectedFindAnswersId(view);\r\n    } else {\r\n      setSelectedFindAnswersId(null);\r\n    }\r\n    \r\n    // Refresh user data when switching to profile view to get latest changes\r\n    if (view === 'profile') {\r\n      fetchUserDataFallback();\r\n    }\r\n  };\r\n\r\n  const handleEditCompany = (company: any) => {\r\n    setSelectedCompany(company);\r\n    setCurrentView('company-edit');\r\n  };\r\n\r\n  const handleBackToCompanyList = () => {\r\n    setSelectedCompany(null);\r\n    setCurrentView('company-management');\r\n  };\r\n\r\n  const handleMainWorkspace = () => {\r\n    // Switch to dashboard view\r\n    setCurrentView('dashboard');\r\n    \r\n    // Clear current workspace (no active workspace selected)\r\n    setCurrentWorkspaceId(null);\r\n    \r\n    // Minimize all current widgets\r\n    setWidgets(prevWidgets => \r\n      prevWidgets.map(widget => ({ ...widget, isMinimized: true }))\r\n    );\r\n    \r\n    // Keep all open workspaces - just deselect the current one\r\n    // This preserves the workspace buttons at the top\r\n  };\r\n\r\n  const renderDashboardView = () => (\r\n    <main className=\"absolute inset-0 z-0\">\r\n      {isMobile ? (\r\n        <div className=\"p-4 space-y-4\" style={{ paddingTop: mobileHeaderHeight, paddingBottom: chatInputAreaHeight }}>\r\n          {normalWidgets.map(widget => (\r\n            <div key={widget.id} className=\"h-auto\">\r\n              <BaseWidget\r\n                widget={widget}\r\n                removeWidget={removeWidget}\r\n                updateEntity={updateEntity}\r\n                bringToFront={bringToFront}\r\n                toggleMinimizeWidget={toggleMinimizeWidget}\r\n                toggleFavoriteWidget={toggleFavoriteWidget}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <WidgetContainer \r\n          widgets={normalWidgets} \r\n          removeWidget={removeWidget} \r\n          updateEntity={updateEntity}\r\n          bringToFront={bringToFront}\r\n          toggleMinimizeWidget={toggleMinimizeWidget}\r\n          toggleFavoriteWidget={toggleFavoriteWidget}\r\n          updateWidgetPosition={updateWidgetPosition}\r\n          updateWidgetDimensions={updateWidgetDimensions}\r\n          sidebarState={state}\r\n          sidebarRef={sidebarRef}\r\n          chatInputRef={chatInputRef}\r\n          setIsDragging={setIsDraggingWidget}\r\n        />\r\n      )}\r\n      \r\n      <div \r\n        className=\"absolute inset-0 flex flex-col items-center pointer-events-none\" \r\n        style={{ paddingLeft: !isMobile && sidebarRef.current && state === 'expanded' ? `${sidebarRef.current.offsetWidth}px`: '0' }}\r\n      >\r\n        {normalWidgets.length === 0 && (\r\n          <div className=\"flex flex-col h-full w-full max-w-xl mx-auto items-center text-center p-4\" style={{ paddingBottom: isMobile ? chatInputAreaHeight : '6rem' }}>\r\n            <div className=\"flex-grow flex flex-col justify-center items-center\">\r\n              <Image\r\n                src=\"/bablephish_logo.svg\"\r\n                alt=\"BabelPhish Logo\"\r\n                width={100}\r\n                height={100}\r\n                className=\"mx-auto mb-6 opacity-50\"\r\n              />\r\n              <h1 className=\"text-2xl font-bold text-muted-foreground mb-4\">\r\n                Welcome to BabelPhish\r\n              </h1>\r\n              <p className=\"text-muted-foreground mb-8 max-w-md\">\r\n                Start by typing a command or query below to create your first widget.\r\n              </p>\r\n              \r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 w-full max-w-lg pointer-events-auto\">\r\n                <p className=\"text-sm text-muted-foreground mb-4 text-center col-span-full\">Quick browse items</p>\r\n                <div className=\"space-y-2 col-span-full\">\r\n                  {starterPrompts.map((prompt, index) => {\r\n                    const Icon = prompt.icon;\r\n                    return (\r\n                      <Button \r\n                        key={index}\r\n                        variant=\"link\"\r\n                        className=\"w-full justify-start h-auto py-3 px-4 text-left text-sm bg-transparent pointer-events-auto rounded-lg\"\r\n                        onClick={() => handleStarterPrompt(prompt.query)}\r\n                      >\r\n                        <Icon className=\"mr-3 text-primary\" size={20}/>\r\n                        {prompt.text}\r\n                      </Button>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </main>\r\n  );\r\n\r\n  const renderCurrentView = () => {\r\n    switch (currentView) {\r\n      case 'dashboard':\r\n        return renderDashboardView();\r\n      case 'ai-store':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <AIStore />\r\n          </div>\r\n        );\r\n      case 'prompt-catalog':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <PromptCatalog />\r\n          </div>\r\n        );\r\n      case 'profile':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <div className=\"max-w-4xl mx-auto\">\r\n              <Profile user={user} onProfileUpdate={handleProfileUpdate} isPage={true} />\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'user-management':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <div className=\"max-w-6xl mx-auto\">\r\n              <UserManagement />\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'role-management':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <div className=\"max-w-6xl mx-auto\">\r\n              <RoleManagement />\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'company-management':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <div className=\"max-w-6xl mx-auto\">\r\n              <CompanyManagement onEditCompany={handleEditCompany} />\r\n            </div>\r\n          </div>\r\n        );\r\n      case 'company-edit':\r\n        return (\r\n          <div className=\"flex-1 overflow-y-auto p-6\">\r\n            <CompanyEdit \r\n              company={selectedCompany} \r\n              onBack={handleBackToCompanyList}\r\n              onSave={handleBackToCompanyList}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        // Check if this is a Find Answers item\r\n        if (selectedFindAnswersId) {\r\n          return (\r\n            <div className=\"flex-1 flex\">\r\n              <FindAnswersPanel \r\n                findAnswersId={selectedFindAnswersId}\r\n                onClose={() => {\r\n                  setSelectedFindAnswersId(null);\r\n                  setCurrentView('dashboard');\r\n                }}\r\n              />\r\n              <div className=\"flex-1 flex\">\r\n                <div className=\"flex flex-1 bg-gray-50\">\r\n                  <div className=\"flex flex-col transition-all duration-300 ease-in-out flex-1\">\r\n                    {/* Chat Header */}\r\n                    <div className=\"bg-white border-b border-gray-200 px-3 sm:px-6 py-3 sm:py-4\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center space-x-2 sm:space-x-3 min-w-0 flex-1\">\r\n                          <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-orange-100 rounded flex items-center justify-center flex-shrink-0\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-3 h-3 sm:w-4 sm:h-4 text-orange-600\">\r\n                              <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\r\n                            </svg>\r\n                          </div>\r\n                          <span className=\"font-medium text-gray-900 text-sm sm:text-base truncate\">ODIN</span>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-1 sm:space-x-2 flex-shrink-0\">\r\n                          <select className=\"px-2 py-1 sm:px-3 sm:py-2 border border-gray-200 rounded-lg text-xs sm:text-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white\">\r\n                            <option>GPT-4o</option>\r\n                            <option>GPT-4</option>\r\n                            <option>Claude-3.5</option>\r\n                            <option>Gemini Pro</option>\r\n                          </select>\r\n                          <button className=\"px-2 py-1 sm:px-4 sm:py-1 bg-orange-600 text-white rounded text-xs sm:text-sm hover:bg-orange-700 transition-colors\">\r\n                            Prompts\r\n                          </button>\r\n                          <button className=\"px-2 py-1 sm:px-3 sm:py-1 border border-gray-300 text-gray-600 rounded text-xs sm:text-sm hover:bg-gray-50 transition-colors\">\r\n                            Clear\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Chat Content */}\r\n                    <div className=\"flex-1 flex flex-col px-3 sm:px-6 lg:px-8 py-4 sm:py-6 overflow-hidden\">\r\n                      <div className=\"flex-1 flex flex-col justify-center\">\r\n                        <div className=\"max-w-4xl w-full mx-auto\">\r\n                          <h2 className=\"text-base sm:text-lg lg:text-xl font-medium text-gray-800 mb-4 sm:mb-6 lg:mb-8 text-center\">\r\n                            Please ask ODIN your questions\r\n                          </h2>\r\n                          <p className=\"text-gray-500 text-xs sm:text-sm mb-4 sm:mb-6 text-center px-2\">\r\n                            Ask a question or add files to the conversation using the paperclip icon.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Chat Input */}\r\n                      <div className=\"flex-shrink-0\">\r\n                        <div className=\"relative\">\r\n                          <div className=\"flex items-center space-x-2 sm:space-x-3 bg-white rounded-lg p-2 sm:p-3 border border-gray-200 shadow-sm\">\r\n                            <button className=\"p-1 sm:p-2 text-gray-400 hover:text-orange-600 transition-colors flex-shrink-0 relative\" title=\"Upload files\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-4 h-4 sm:w-5 sm:h-5\">\r\n                                <path d=\"m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48\"></path>\r\n                              </svg>\r\n                            </button>\r\n                            <input \r\n                              type=\"text\" \r\n                              placeholder=\"Ask a question...\" \r\n                              className=\"flex-1 bg-transparent border-none outline-none text-gray-900 placeholder-gray-400 text-sm sm:text-base min-w-0\" \r\n                            />\r\n                            <button className=\"p-1 sm:p-2 text-gray-400 hover:text-orange-600 transition-colors flex-shrink-0\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-4 h-4 sm:w-5 sm:h-5\">\r\n                                <path d=\"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\"></path>\r\n                                <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\r\n                                <line x1=\"12\" x2=\"12\" y1=\"19\" y2=\"22\"></line>\r\n                              </svg>\r\n                            </button>\r\n                            <button className=\"p-2 sm:p-3 transition-colors flex-shrink-0 rounded-lg text-gray-400 hover:text-orange-600\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-4 h-4 sm:w-5 sm:h-5\">\r\n                                <path d=\"m22 2-7 20-4-9-9-4Z\"></path>\r\n                                <path d=\"M22 2 11 13\"></path>\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                          <div className=\"flex flex-wrap gap-1 sm:gap-2 mt-2 sm:mt-3 justify-start\">\r\n                            <button key=\"web-search\" className=\"flex items-center space-x-1 px-2 py-1 border border-gray-200 rounded-full text-gray-600 hover:bg-gray-50 transition-colors text-xs\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-3 h-3 text-gray-400\">\r\n                                <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                                <path d=\"m21 21-4.3-4.3\"></path>\r\n                              </svg>\r\n                              <span className=\"hidden sm:inline\">Web Search</span>\r\n                              <span className=\"sm:hidden\">Web</span>\r\n                            </button>\r\n                            <button key=\"research\" className=\"flex items-center space-x-1 px-2 py-1 border border-gray-200 rounded-full text-gray-600 hover:bg-gray-50 transition-colors text-xs\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-3 h-3 text-gray-400\">\r\n                                <path d=\"M3 3v18h18\"></path>\r\n                                <path d=\"M18 17V9\"></path>\r\n                                <path d=\"M13 17V5\"></path>\r\n                                <path d=\"M8 17v-3\"></path>\r\n                              </svg>\r\n                              <span>Research</span>\r\n                            </button>\r\n                            <button key=\"help-with-this\" className=\"flex items-center space-x-1 px-2 py-1 border border-gray-200 rounded-full text-gray-600 hover:bg-gray-50 transition-colors text-xs\">\r\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-3 h-3 text-gray-400\">\r\n                                <rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\"></rect>\r\n                                <circle cx=\"9\" cy=\"9\" r=\"2\"></circle>\r\n                                <path d=\"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\"></path>\r\n                              </svg>\r\n                              <span className=\"hidden sm:inline\">Help me with this</span>\r\n                              <span className=\"sm:hidden\">Image</span>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        \r\n        // Handle other dynamic views\r\n        if (currentView !== 'dashboard' && currentView !== 'ai-store' && currentView !== 'prompt-catalog' && \r\n            currentView !== 'profile' && currentView !== 'user-management' && currentView !== 'role-management' && \r\n            currentView !== 'company-management' && currentView !== 'company-edit') {\r\n          const title = currentView.split('-').map(word => \r\n            word.charAt(0).toUpperCase() + word.slice(1)\r\n          ).join(' ');\r\n          \r\n          return (\r\n            <div className=\"flex-1 overflow-y-auto p-6\">\r\n              <div className=\"max-w-6xl mx-auto\">\r\n                <div className=\"text-center py-12\">\r\n                  <h1 className=\"text-2xl font-semibold mb-4\">{title}</h1>\r\n                  <p className=\"text-muted-foreground\">Content for {title.toLowerCase()} will be available here.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n        return renderDashboardView();\r\n    }\r\n  };\r\n  \r\n  const fetchWorkspaces = async (userId: string, forceRefresh = false) => {\r\n    if (!userId) return;\r\n    \r\n    // Use cached data first if not forcing refresh\r\n    if (!forceRefresh) {\r\n      const { workspaces: cachedWorkspaces } = getCachedUserData();\r\n      if (cachedWorkspaces.length > 0) {\r\n        setWorkspaces(cachedWorkspaces);\r\n        setLoadingWorkspaces(false);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    setLoadingWorkspaces(true);\r\n    try {\r\n        const data = await getWorkspaces(userId);\r\n        setWorkspaces(data);\r\n        updateCachedWorkspaces(data);\r\n    } catch (error) {\r\n        console.error(\"Failed to fetch workspaces\", error);\r\n    } finally {\r\n        setLoadingWorkspaces(false);\r\n    }\r\n  };\r\n  \r\n  const refreshWorkspaces = () => {\r\n    if (user) {\r\n      syncWorkspacesNow();\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (!activeWorkspace) {\r\n      setWidgets([]);\r\n    }\r\n  }, [activeWorkspace]);\r\n  \r\n  const bringToFront = (id: string, isSummaryOrChat?: boolean) => {\r\n    setWidgets(prevWidgets => {\r\n      const currentMaxZ = prevWidgets.reduce((max, w) => Math.max(max, w.zIndex), 0) || 1;\r\n      const newZIndex = isSummaryOrChat ? 100 : currentMaxZ + 1;\r\n  \r\n      return prevWidgets.map(w => w.id === id ? { ...w, zIndex: newZIndex } : w);\r\n    });\r\n  };\r\n  \r\n  const createWidgetFromDefinition = (widgetDef: Omit<Widget, 'id' | 'isMinimized'>, id?: string) => {\r\n    const newZIndex = nextZIndex;\r\n    setNextZIndex(newZIndex + 1);\r\n\r\n    const sidebarWidth = state === 'expanded' && sidebarRef.current ? sidebarRef.current.offsetWidth : 0;\r\n    const workspaceWidth = window.innerWidth - sidebarWidth;\r\n    const workspaceHeight = window.innerHeight;\r\n    \r\n    // Add some randomness to avoid perfect stacking\r\n    const randomOffsetX = Math.floor(Math.random() * 50) - 25; \r\n    const randomOffsetY = Math.floor(Math.random() * 50) - 25;\r\n\r\n    const initialX = sidebarWidth + (workspaceWidth / 2) - (WIDGET_INITIAL_WIDTH / 2) + randomOffsetX;\r\n    const initialY = (workspaceHeight / 2) - (WIDGET_INITIAL_HEIGHT / 2) + randomOffsetY;\r\n    \r\n    const newWidget: Widget = {\r\n      ...widgetDef,\r\n      id: id || Date.now().toString(),\r\n      isMinimized: false,\r\n      x: widgetDef.x ?? initialX,\r\n      y: widgetDef.y ?? initialY,\r\n      width: widgetDef.width ?? WIDGET_INITIAL_WIDTH,\r\n      height: widgetDef.height ?? WIDGET_INITIAL_HEIGHT,\r\n    };\r\n    \r\n    setWidgets((prev) => [...prev, newWidget]);\r\n  }\r\n\r\n  const handleCreateWidget = async (query: string) => {\r\n    if (!query.trim()) return;\r\n    setLoading(true);\r\n    const lowerCaseQuery = query.toLowerCase();\r\n\r\n    let newWidgetDef: Omit<Widget, 'id' | 'zIndex' | 'isMinimized'> | null = null;\r\n    \r\n    try {\r\n      if (lowerCaseQuery.includes('@servicenow')) {\r\n        // Get the user's company URL for ServiceNow integration\r\n        let serviceNowUrl: string | undefined;\r\n        if (user?.company_id) {\r\n          try {\r\n            const companyId = typeof user.company_id === 'object' ? user.company_id.$oid : user.company_id;\r\n            const company = await getCompanyById(companyId);\r\n            serviceNowUrl = company?.url;\r\n            \r\n            if (!serviceNowUrl) {\r\n              toast({\r\n                variant: 'destructive',\r\n                title: 'Configuration Required',\r\n                description: 'ServiceNow Instance URL is not configured for your company. Please contact your administrator.',\r\n              });\r\n              return;\r\n            }\r\n          } catch (error) {\r\n            console.error('Failed to get company ServiceNow URL:', error);\r\n            toast({\r\n              variant: 'destructive',\r\n              title: 'Error',\r\n              description: 'Could not retrieve company configuration. Using default ServiceNow instance.',\r\n            });\r\n          }\r\n        }\r\n        \r\n        const incidentData = await getIncidents(serviceNowUrl);\r\n        newWidgetDef = {\r\n          query: serviceNowUrl ? `ServiceNow Records (${new URL(serviceNowUrl).hostname})` : 'ServiceNow Records',\r\n          data: incidentData,\r\n          agent: { agentType: 'Incident Agent', agentBehavior: 'Manages and resolves incidents.' },\r\n          type: 'incident',\r\n          isFavorited: false,\r\n        };\r\n      } else if (lowerCaseQuery.includes('@incident')) {\r\n        const incidentData = await getSampleData('incident');\r\n        newWidgetDef = {\r\n          query: 'Incidents',\r\n          data: incidentData,\r\n          agent: { agentType: 'Incident Agent', agentBehavior: 'Manages and resolves incidents.' },\r\n          type: 'incident',\r\n          isFavorited: false,\r\n        };\r\n\r\n      } else if (lowerCaseQuery.includes('@change')) {\r\n         const changeData = await getSampleData('change_request');\r\n        newWidgetDef = {\r\n          query: 'Changes',\r\n          data: changeData,\r\n          agent: { agentType: 'Change Agent', agentBehavior: 'Manages and tracks change requests.' },\r\n          type: 'change',\r\n          isFavorited: false,\r\n        };\r\n\r\n      } else if (lowerCaseQuery.includes('@problem')) {\r\n        const problemData = await getSampleData('problem');\r\n        newWidgetDef = {\r\n          query: 'Problem',\r\n          data: problemData,\r\n          agent: { agentType: 'Problem Agent', agentBehavior: 'Manages and resolves problems.' },\r\n          type: 'problem',\r\n          isFavorited: false,\r\n        };\r\n      } else if (lowerCaseQuery.includes('@summary')) {\r\n        const allWidgetData = widgets.map(w => ({ type: w.type, query: w.query, data: w.data }));\r\n        const result = await generateOverviewSummary({ widgetData: allWidgetData });\r\n  \r\n        newWidgetDef = {\r\n          query: 'Overview Summary',\r\n          data: result.summary,\r\n          agent: { agentType: 'Summary Agent', agentBehavior: 'Provides a summary of all open widgets.' },\r\n          type: 'generic',\r\n          isFavorited: false,\r\n        };\r\n      } else {\r\n        const allWorkspacesData = openWorkspaces.flatMap(ws => {\r\n            try {\r\n              const widgetsInWorkspace: Widget[] = JSON.parse(ws.workspace_data);\r\n              return widgetsInWorkspace.map(w => ({ type: w.type, query: w.query, data: w.data }));\r\n            } catch (e) {\r\n              console.error(`Could not parse workspace data for ${ws.workspace_name}`, e);\r\n              return [];\r\n            }\r\n          });\r\n\r\n          const result = await generateWidgetFromQuery({ query, workspaceData: allWorkspacesData });\r\n          \r\n          if (result.workspace_to_load) {\r\n            const workspaceToLoad = workspaces.find(ws => ws.workspace_name.toLowerCase().includes(result.workspace_to_load!.toLowerCase()));\r\n            if (workspaceToLoad) {\r\n              setWorkspaceAction('load');\r\n              handleWorkspaceListSelect(workspaceToLoad);\r\n            } else {\r\n              toast({ variant: 'destructive', title: 'Not Found', description: `Workspace \"${result.workspace_to_load}\" not found.` });\r\n            }\r\n          }\r\n          \r\n          const agent = await agentSpecificWidget({ widgetData: result.answer });\r\n    \r\n          newWidgetDef = {\r\n            query: query,\r\n            data: result.answer,\r\n            agent: agent,\r\n            type: 'generic',\r\n            isFavorited: false,\r\n          };\r\n      }\r\n\r\n      if (newWidgetDef) {\r\n        const fullWidgetDef = {\r\n          ...newWidgetDef,\r\n          zIndex: newWidgetDef.type === 'generic' ? 100 : nextZIndex,\r\n        };\r\n        createWidgetFromDefinition(fullWidgetDef);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create widget:', error);\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Error',\r\n        description: 'Could not create widget. The AI service may be temporarily unavailable. Please try again later.',\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveQuery = async (query: string, name: string) => {\r\n    if (!query.trim() || !name.trim()) return;\r\n    try {\r\n      const result = await saveQueryWithVoiceText({ queryName: name, queryText: query });\r\n      if (result.success) {\r\n        setSavedQueries(prev => [...prev, { name, query }]);\r\n        toast({\r\n          title: 'Query Saved',\r\n          description: `\"${name}\" has been saved successfully.`,\r\n        });\r\n      } else {\r\n        toast({\r\n          variant: 'destructive',\r\n          title: 'Save Failed',\r\n          description: result.message,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save query:', error);\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Error',\r\n        description: 'Could not save the query.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeWidget = (id: string) => {\r\n    setWidgets((prev) => prev.filter((w) => w.id !== id));\r\n  };\r\n\r\n  const toggleMinimizeWidget = (id: string) => {\r\n    setWidgets(prevWidgets =>\r\n      prevWidgets.map(widget => {\r\n        if (widget.id === id) {\r\n          const isMinimized = !widget.isMinimized;\r\n          let newPosition = {};\r\n          if (!isMinimized) { // Restoring\r\n            const newX = lastRestorePosition.x + 20;\r\n            const newY = lastRestorePosition.y + 20;\r\n            setLastRestorePosition({ x: newX, y: newY });\r\n            newPosition = { x: newX, y: newY };\r\n          }\r\n          return { ...widget, isMinimized, ...newPosition };\r\n        }\r\n        return widget;\r\n      })\r\n    );\r\n  };\r\n  \r\n  const handleRestoreFavorite = (fav: Widget) => {\r\n    const activeWidget = widgets.find(w => w.id === fav.id);\r\n    if (!activeWidget) {\r\n       // Create a new widget instance from the favorite definition\r\n       createWidgetFromDefinition({ ...fav, isFavorited: true }, fav.id);\r\n    } else {\r\n      // If widget is just minimized, un-minimize it and bring to front\r\n      if (activeWidget.isMinimized) {\r\n        toggleMinimizeWidget(activeWidget.id);\r\n      }\r\n      bringToFront(activeWidget.id);\r\n    }\r\n  };\r\n\r\n const toggleFavoriteWidget = (id: string) => {\r\n    let widgetToToggle: Widget | undefined = widgets.find(w => w.id === id);\r\n    if (!widgetToToggle) {\r\n      widgetToToggle = favorites.find(f => f.id === id);\r\n    }\r\n    if (!widgetToToggle) return;\r\n  \r\n    const isCurrentlyFavorited = widgetToToggle.isFavorited;\r\n  \r\n    // Update the widget in the main widgets array if it exists\r\n    setWidgets(prev => \r\n      prev.map(w => \r\n        w.id === id ? { ...w, isFavorited: !isCurrentlyFavorited } : w\r\n      )\r\n    );\r\n  \r\n    // Update the favorites list\r\n    if (!isCurrentlyFavorited) {\r\n      // Add to favorites if not already there\r\n      setFavorites(prev => {\r\n        if (prev.some(f => f.id === id)) {\r\n          return prev.map(f => f.id === id ? { ...widgetToToggle!, isFavorited: true } : f);\r\n        }\r\n        return [...prev, { ...widgetToToggle!, isFavorited: true }];\r\n      });\r\n    } else {\r\n      // Remove from favorites\r\n      setFavorites(prev => prev.filter(f => f.id !== id));\r\n    }\r\n  };\r\n\r\n\r\n  const updateWidgetPosition = (id: string, x: number, y: number) => {\r\n    setWidgets(prevWidgets =>\r\n      prevWidgets.map(widget =>\r\n        widget.id === id ? { ...widget, x, y } : widget\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateWidgetDimensions = (id: string, width: number, height: number) => {\r\n    setWidgets(prevWidgets =>\r\n        prevWidgets.map(widget =>\r\n            widget.id === id ? { ...widget, width, height } : widget\r\n        )\r\n    );\r\n  };\r\n\r\n\r\n  const updateEntity = (widgetId: string, entityNumber: string, updatedData: Partial<Problem | Incident | Change>) => {\r\n    const updateInData = (data: any[]) =>\r\n      data.map((entity: any) =>\r\n        entity.number === entityNumber ? { ...entity, ...updatedData } : entity\r\n      );\r\n  \r\n    setWidgets(prevWidgets =>\r\n      prevWidgets.map(widget => {\r\n        if (widget.id === widgetId && (widget.type === 'problem' || widget.type === 'incident' || widget.type === 'change')) {\r\n          if (!Array.isArray(widget.data)) return widget;\r\n          return { ...widget, data: updateInData(widget.data) };\r\n        }\r\n        return widget;\r\n      })\r\n    );\r\n  \r\n    setFavorites(prevFavorites =>\r\n      prevFavorites.map(fav => {\r\n        if (fav.id === widgetId && (fav.type === 'problem' || fav.type === 'incident' || fav.type === 'change')) {\r\n          if (!Array.isArray(fav.data)) return fav;\r\n          return { ...fav, data: updateInData(fav.data) };\r\n        }\r\n        return fav;\r\n      })\r\n    );\r\n  };\r\n  \r\n  const handleWorkspaceAction = (action: 'create' | 'edit' | 'forget' | 'load' | 'save') => {\r\n    setWorkspaceAction(action);\r\n    if (action === 'create') {\r\n        setWorkspaceName('');\r\n        setWorkspaceToEdit(null);\r\n        setIsWorkspaceModalOpen(true);\r\n    } else if (action === 'edit') {\r\n        if (user) fetchWorkspaces(user.userId, true); // Force refresh when editing\r\n        setIsWorkspaceListOpen(true);\r\n    } else if (action === 'forget') {\r\n        handleDeleteWorkspace();\r\n    } else if (action === 'load') {\r\n        if (user) fetchWorkspaces(user.userId);\r\n        setIsWorkspaceListOpen(true);\r\n    } else if (action === 'save') {\r\n        handleQuickSaveWorkspace();\r\n    }\r\n  };\r\n    \r\n    const handleQuickSaveWorkspace = async (silent = false) => {\r\n        if (!activeWorkspace || !activeWorkspace.workspace_name) {\r\n            if (!silent) handleWorkspaceAction('create');\r\n            return;\r\n        }\r\n        if (!user) return;\r\n        \r\n        // If this is a manual save (not silent), set the flag\r\n        if (!silent) {\r\n            setIsManualSaving(true);\r\n        }\r\n        \r\n        const widgetContent = widgets.map(({ x, y, width, height, zIndex, ...rest }) => rest);\r\n        const widgetCoordinates = widgets.map(({ id, x, y, width, height, zIndex }) => ({\r\n            id,\r\n            x: Math.round(x || 0),\r\n            y: Math.round(y || 0),\r\n            width: width || WIDGET_INITIAL_WIDTH,\r\n            height: height || WIDGET_INITIAL_HEIGHT,\r\n            zIndex,\r\n        }));\r\n\r\n\r\n\r\n        const workspace_data = JSON.stringify(widgetContent);\r\n        const cordinates = JSON.stringify(widgetCoordinates);\r\n        \r\n        const result = await saveWorkspace({\r\n            userId: user.userId,\r\n            workspace_name: activeWorkspace.workspace_name,\r\n            workspace_data,\r\n            cordinates,\r\n            workspaceId: activeWorkspace.workspaceId\r\n        });\r\n\r\n        if (result) {\r\n            if (!silent) {\r\n                toast({ title: 'Success', description: `Workspace \"${activeWorkspace.workspace_name}\" saved.`, duration: 2000 });\r\n            }\r\n            // After saving, only refresh workspaces list but don't reload UI to avoid position conflicts\r\n            if (user) {\r\n                await fetchWorkspaces(user.userId, true);\r\n            }\r\n        } else {\r\n            if (!silent) {\r\n                toast({ variant: 'destructive', title: 'Error', description: 'Failed to save workspace.' });\r\n            }\r\n        }\r\n        \r\n        // Clear manual saving flag after a delay for manual saves\r\n        if (!silent) {\r\n            setTimeout(() => {\r\n                setIsManualSaving(false);\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    const handleSaveWorkspace = async () => {\r\n      if (!user || !workspaceName.trim()) {\r\n        toast({ variant: 'destructive', title: 'Error', description: 'User not found or workspace name is empty.' });\r\n        return;\r\n      }\r\n    \r\n      setLoading(true);\r\n      setIsManualSaving(true);\r\n      const isCreating = workspaceAction === 'create';\r\n      const isEditing = workspaceAction === 'edit' && workspaceToEdit;\r\n    \r\n      let workspace_data: string;\r\n      let cordinates: string | undefined;\r\n    \r\n      if (isCreating) {\r\n        const widgetContent = widgets.map(({ x, y, width, height, zIndex, ...rest }) => rest);\r\n        const widgetCoordinates = widgets.map(({ id, x, y, width, height, zIndex }) => ({\r\n          id,\r\n          x: Math.round(x || 0),\r\n          y: Math.round(y || 0),\r\n          width: width || WIDGET_INITIAL_WIDTH,\r\n          height: height || WIDGET_INITIAL_HEIGHT,\r\n          zIndex,\r\n        }));\r\n        workspace_data = JSON.stringify(widgetContent);\r\n        cordinates = JSON.stringify(widgetCoordinates);\r\n      } else if (isEditing) {\r\n        workspace_data = workspaceToEdit.workspace_data;\r\n        cordinates = workspaceToEdit.cordinates;\r\n      } else {\r\n        // Fallback for saving an unnamed workspace (shouldn't happen with the new flow)\r\n        const widgetContent = widgets.map(({ x, y, width, height, zIndex, ...rest }) => rest);\r\n         const widgetCoordinates = widgets.map(({ id, x, y, width, height, zIndex }) => ({\r\n          id,\r\n          x: Math.round(x || 0),\r\n          y: Math.round(y || 0),\r\n          width: width || WIDGET_INITIAL_WIDTH,\r\n          height: height || WIDGET_INITIAL_HEIGHT,\r\n          zIndex,\r\n        }));\r\n        workspace_data = JSON.stringify(widgetContent);\r\n        cordinates = JSON.stringify(widgetCoordinates);\r\n      }\r\n    \r\n      const workspaceIdToSave = isCreating ? undefined : workspaceToEdit!.workspaceId;\r\n    \r\n      const result = await saveWorkspace({\r\n        userId: user.userId,\r\n        workspace_name: workspaceName,\r\n        workspace_data,\r\n        cordinates,\r\n        workspaceId: workspaceIdToSave,\r\n      });\r\n      setLoading(false);\r\n    \r\n      if (result) {\r\n        toast({ title: 'Success', description: `Workspace \"${workspaceName}\" saved.`, duration: 2000 });\r\n        \r\n        await fetchWorkspaces(user.userId, true);\r\n    \r\n        if (isCreating) {\r\n          const newWorkspace = { ...result, last_accessed: new Date().toISOString() };\r\n          setOpenWorkspaces(prev => [...prev, newWorkspace]);\r\n          setCurrentWorkspaceId(newWorkspace.workspaceId);\r\n        } else if (isEditing) {\r\n          // Update the open workspace tab with the new name\r\n          setOpenWorkspaces(prev =>\r\n            prev.map(ws =>\r\n              ws.workspaceId === workspaceToEdit.workspaceId\r\n                ? { ...ws, workspace_name: workspaceName }\r\n                : ws\r\n            )\r\n          );\r\n        }\r\n      } else {\r\n        toast({ variant: 'destructive', title: 'Error', description: 'Failed to save workspace.' });\r\n      }\r\n      \r\n      // Clear manual saving flag after a delay to allow auto-save to resume\r\n      setTimeout(() => {\r\n        setIsManualSaving(false);\r\n      }, 2000);\r\n      \r\n      setIsWorkspaceModalOpen(false);\r\n      setWorkspaceName('');\r\n      setWorkspaceToEdit(null);\r\n    };\r\n    \r\n    const handleDeleteWorkspace = async () => {\r\n        if (!activeWorkspace) {\r\n            toast({ variant: 'destructive', title: 'Error', description: 'No active workspace to forget.' });\r\n            return;\r\n        }\r\n        \r\n        setLoading(true);\r\n        const success = await deleteWorkspace(activeWorkspace.workspaceId);\r\n        setLoading(false);\r\n        if (success) {\r\n            const deletedId = activeWorkspace.workspaceId;\r\n            setWorkspaces(prev => prev.filter(ws => ws.workspaceId !== deletedId));\r\n            closeWorkspace(deletedId);\r\n            toast({ title: 'Success', description: `Workspace \"${activeWorkspace.workspace_name}\" has been forgotten.`, duration: 2000 });\r\n        } else {\r\n            toast({ variant: 'destructive', title: 'Error', description: 'Failed to forget workspace.' });\r\n        }\r\n    };\r\n    \r\n    const loadWorkspaceUI = (workspace: Workspace) => {\r\n        try {\r\n            if (workspace.workspace_data && workspace.workspace_data.trim() !== '') {\r\n                const contentData = JSON.parse(workspace.workspace_data);\r\n                if (workspace.cordinates) {\r\n                    const layoutData = JSON.parse(workspace.cordinates);\r\n                    console.log('Loading coordinates from workspace:', layoutData);\r\n                    const layoutMap = new Map(layoutData.map((l: any) => [l.id, l]));\r\n                    const mergedWidgets = contentData.map((widget: any) => ({\r\n                        ...widget,\r\n                        ...(layoutMap.get(widget.id) || {}),\r\n                    }));\r\n                    console.log('Final merged widgets being set:', mergedWidgets.map(w => ({\r\n                        id: w.id,\r\n                        x: w.x,\r\n                        y: w.y, \r\n                        width: w.width,\r\n                        height: w.height\r\n                    })));\r\n                    setWidgets(mergedWidgets);\r\n                } else {\r\n                    // Fallback for old format\r\n                    setWidgets(contentData);\r\n                }\r\n            } else {\r\n                setWidgets([]);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Failed to parse workspace data\", error);\r\n            toast({variant: \"destructive\", title: \"Error\", description: \"Could not load workspace.\"})\r\n        }\r\n    }\r\n    \r\n    const loadWorkspaceDirectly = (workspace: Workspace) => {\r\n        // Always switch to dashboard view when loading a workspace\r\n        setCurrentView('dashboard');\r\n        \r\n        // Check if workspace is already open\r\n        if (openWorkspaces.find(ws => ws.workspaceId === workspace.workspaceId)) {\r\n            setCurrentWorkspaceId(workspace.workspaceId);\r\n            loadWorkspaceUI(workspace);\r\n            return;\r\n        }\r\n\r\n        // Check workspace limit\r\n        if (openWorkspaces.length >= MAX_OPEN_SESSIONS) {\r\n            toast({\r\n                variant: 'destructive',\r\n                title: 'Limit Reached',\r\n                description: `You can only have ${MAX_OPEN_SESSIONS} workspaces open at a time.`\r\n            });\r\n            return;\r\n        }\r\n        \r\n        // Add to open workspaces and load\r\n        setOpenWorkspaces(prev => [...prev, workspace]);\r\n        setCurrentWorkspaceId(workspace.workspaceId);\r\n        loadWorkspaceUI(workspace);\r\n    };\r\n    \r\n    const handleWorkspaceListSelect = (workspace: Workspace) => {\r\n        setIsWorkspaceListOpen(false);\r\n        if (workspaceAction === 'load') {\r\n            if (openWorkspaces.find(ws => ws.workspaceId === workspace.workspaceId)) {\r\n                setCurrentWorkspaceId(workspace.workspaceId);\r\n                loadWorkspaceUI(workspace);\r\n                return;\r\n            }\r\n\r\n            if (openWorkspaces.length >= MAX_OPEN_SESSIONS) {\r\n                toast({\r\n                    variant: 'destructive',\r\n                    title: 'Limit Reached',\r\n                    description: `You can only have ${MAX_OPEN_SESSIONS} workspaces open at a time.`\r\n                });\r\n                return;\r\n            }\r\n            \r\n            setOpenWorkspaces(prev => [...prev, workspace]);\r\n            setCurrentWorkspaceId(workspace.workspaceId);\r\n            loadWorkspaceUI(workspace);\r\n        } else if (workspaceAction === 'edit') {\r\n            setWorkspaceToEdit(workspace);\r\n            setWorkspaceName(workspace.workspace_name);\r\n            setIsWorkspaceModalOpen(true);\r\n        }\r\n    };\r\n\r\n    const switchWorkspace = (workspaceId: string) => {\r\n        const workspaceToSwitch = openWorkspaces.find(ws => ws.workspaceId === workspaceId);\r\n        if (workspaceToSwitch) {\r\n            setCurrentWorkspaceId(workspaceId);\r\n            loadWorkspaceUI(workspaceToSwitch);\r\n        }\r\n    }\r\n    \r\n    const closeWorkspace = (workspaceId: string) => {\r\n        const remainingWorkspaces = openWorkspaces.filter(ws => ws.workspaceId !== workspaceId);\r\n        setOpenWorkspaces(remainingWorkspaces);\r\n\r\n        if (currentWorkspaceId === workspaceId) {\r\n            if (remainingWorkspaces.length > 0) {\r\n                const newCurrent = remainingWorkspaces[0];\r\n                setCurrentWorkspaceId(newCurrent.workspaceId);\r\n                loadWorkspaceUI(newCurrent);\r\n            } else {\r\n                setCurrentWorkspaceId(null);\r\n                setWidgets([]); // Clear widgets if no workspace is open\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n  const normalWidgets = widgets.filter(w => !w.isMinimized);\r\n  const minimizedWidgets = widgets.filter(w => w.isMinimized && !favorites.some(fav => fav.id === w.id));\r\n\r\n  const starterPrompts = [\r\n    { text: 'Get my incidents', query: '@incident', icon: Sparkle },\r\n    { text: 'Show me high priority changes', query: '@change high priority', icon: Sparkle },\r\n    { text: 'Are there any recurring problems?', query: '@problem recurring', icon: Sparkle },\r\n  ];\r\n\r\n  const handleStarterPrompt = (query: string) => {\r\n    handleCreateWidget(query);\r\n  };\r\n\r\n  const renderSidebar = () => (\r\n    <AppSidebar \r\n      user={user}\r\n      minimizedWidgets={minimizedWidgets} \r\n      favoritedWidgets={favorites}\r\n      onRestoreWidget={toggleMinimizeWidget}\r\n      onRestoreFavorite={handleRestoreFavorite}\r\n      onProfileUpdate={handleProfileUpdate}\r\n      workspaces={workspaces}\r\n      onLoadWorkspace={loadWorkspaceDirectly}\r\n      onWorkspaceAction={handleWorkspaceAction}\r\n      currentView={currentView}\r\n      onViewChange={handleViewChange}\r\n      onMainWorkspace={handleMainWorkspace}\r\n      onRefreshWorkspaces={refreshWorkspaces}\r\n      isSyncingWorkspaces={isSyncingWorkspaces}\r\n      syncEnabled={syncEnabled}\r\n      lastSyncTime={lastSyncTime}\r\n      activeWorkspaceId={currentWorkspaceId}\r\n    />\r\n  );\r\n  \r\n  const mobileHeaderHeight = 56; // 14 * 4\r\n  const chatInputAreaHeight = 96; // 24 * 4\r\n  \r\n  return (\r\n    <div className=\"relative flex h-screen w-screen overflow-hidden bg-background\">\r\n      {isMobile ? (\r\n        <Sheet open={openMobile} onOpenChange={setOpenMobile}>\r\n          <SheetContent side=\"left\" className=\"p-0 w-[300px] bg-card/95\">\r\n            <SheetHeader>\r\n                <SheetTitle className=\"sr-only\">Main Menu</SheetTitle>\r\n                <SheetDescription className=\"sr-only\">\r\n                    Navigate through workspaces, favorites, and settings.\r\n                </SheetDescription>\r\n            </SheetHeader>\r\n            {renderSidebar()}\r\n          </SheetContent>\r\n        </Sheet>\r\n      ) : (\r\n        <div ref={sidebarRef} className=\"z-50\">\r\n          <Sidebar side=\"left\" collapsible=\"icon\" variant={state === 'collapsed' ? 'floating' : 'sidebar'}>\r\n            {renderSidebar()}\r\n          </Sidebar>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex-1 flex flex-col overflow-hidden relative\">\r\n        {renderCurrentView()}\r\n        \r\n        {/* Header for mobile and desktop workspaces */}\r\n        {isMobile ? (\r\n            <header className=\"absolute top-0 left-0 right-0 p-2 flex items-center justify-between z-30\" style={{ height: mobileHeaderHeight }}>\r\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => setOpenMobile(true)}>\r\n                <Menu />\r\n                </Button>\r\n                {activeWorkspace && (\r\n                <div className=\"text-sm font-semibold truncate px-2\">\r\n                    {activeWorkspace.workspace_name}\r\n                </div>\r\n                )}\r\n                <div className=\"w-10\"></div>\r\n            </header>\r\n         ) : (\r\n            // Only show workspace buttons when on dashboard view\r\n            currentView === 'dashboard' && (\r\n                <div className=\"absolute top-0 left-0 right-0 flex items-center justify-center gap-2 p-4 bg-transparent z-30 pointer-events-none\">\r\n                  <div className=\"flex items-center justify-center gap-2 pointer-events-auto\">\r\n                    {openWorkspaces.map(ws => (\r\n                    <TooltipProvider key={ws.workspaceId}>\r\n                        <div className=\"group relative flex flex-col items-center\">\r\n                            <Button\r\n                            variant={ws.workspaceId === currentWorkspaceId ? \"secondary\" : \"ghost\"}\r\n                            size=\"sm\"\r\n                            className=\"rounded-full px-6 py-2 h-auto shadow-lg\"\r\n                            onClick={() => switchWorkspace(ws.workspaceId)}\r\n                            >\r\n                            {ws.workspace_name}\r\n                            </Button>\r\n                            <div className=\"flex items-center justify-end w-full gap-1 mt-2 h-6 opacity-0 group-hover:opacity-100 transition-opacity pr-2\">\r\n                            <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\" onClick={() => handleQuickSaveWorkspace()}><Save size={14} /></Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Save</TooltipContent>\r\n                            </Tooltip>\r\n                            <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\" onClick={() => {\r\n                                        setWorkspaceAction('edit');\r\n                                        setWorkspaceToEdit(ws);\r\n                                        setWorkspaceName(ws.workspace_name);\r\n                                        setIsWorkspaceModalOpen(true);\r\n                                }}><Pencil size={14} /></Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Edit</TooltipContent>\r\n                            </Tooltip>\r\n                            <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\" onClick={() => closeWorkspace(ws.workspaceId)}><XIcon size={14} /></Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent>Close</TooltipContent>\r\n                            </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </TooltipProvider>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n            )\r\n         )}\r\n        \r\n        {/* Chat Input - only show for dashboard view */}\r\n        {currentView === 'dashboard' && (\r\n            <div ref={chatInputRef} className={cn(\"z-40 transition-transform duration-300 ease-in-out absolute bottom-0 left-0 right-0\")} style={{ paddingLeft: !isMobile && sidebarRef.current && state === 'expanded' ? `${sidebarRef.current.offsetWidth}px`: '0' }}>\r\n                <div className=\"p-4 bg-transparent w-full max-w-xl mx-auto\">\r\n                    <ChatInput onSubmit={handleCreateWidget} onSave={handleSaveQuery} loading={loading} widgets={widgets} onWorkspaceAction={handleWorkspaceAction} user={user} />\r\n                </div>\r\n            </div>\r\n        )}\r\n      </div>\r\n        <Dialog open={isWorkspaceModalOpen} onOpenChange={setIsWorkspaceModalOpen}>\r\n            <DialogContent size=\"form\">\r\n                <DialogHeader>\r\n                    <DialogTitle>{workspaceAction === 'create' ? 'Create' : 'Edit'} Workspace</DialogTitle>\r\n                    <DialogDescription>\r\n                        {workspaceAction === 'create' \r\n                            ? \"Give your workspace a name to save the current layout.\"\r\n                            : `Renaming workspace: ${workspaceToEdit?.workspace_name}`\r\n                        }\r\n                    </DialogDescription>\r\n                </DialogHeader>\r\n                <div className=\"grid gap-4 py-4\">\r\n                    <div className=\"grid grid-cols-4 items-center gap-4\">\r\n                        <Label htmlFor=\"workspace-name\" className=\"text-right\">Name</Label>\r\n                        <Input\r\n                            id=\"workspace-name\"\r\n                            value={workspaceName}\r\n                            onChange={(e) => setWorkspaceName(e.target.value)}\r\n                            className=\"col-span-3\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <DialogFooter>\r\n                    <DialogClose asChild><Button variant=\"outline\">Cancel</Button></DialogClose>\r\n                    <Button onClick={handleSaveWorkspace} disabled={!workspaceName.trim() || loading}>\r\n                        {loading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                        Save\r\n                    </Button>\r\n                </DialogFooter>\r\n            </DialogContent>\r\n        </Dialog>\r\n        <Dialog open={isWorkspaceListOpen} onOpenChange={setIsWorkspaceListOpen}>\r\n            <DialogContent>\r\n                <DialogHeader>\r\n                    <DialogTitle>{workspaceAction === 'load' ? 'Load Workspace' : 'Edit Workspace'}</DialogTitle>\r\n                    <DialogDescription>\r\n                        {workspaceAction === 'load' \r\n                            ? \"Select a saved workspace to load it onto your dashboard.\"\r\n                            : \"Select a workspace to edit its name.\"\r\n                        }\r\n                    </DialogDescription>\r\n                </DialogHeader>\r\n                <div className=\"py-4\">\r\n                    {loadingWorkspaces ? <Loader2 className=\"mx-auto animate-spin\" /> : (\r\n                        <div className=\"space-y-2\">\r\n                            {workspaces.map(ws => (\r\n                                <Button key={ws.workspaceId} variant=\"ghost\" className=\"w-full justify-start\" onClick={() => handleWorkspaceListSelect(ws)}>\r\n                                    {ws.workspace_name}\r\n                                </Button>\r\n                            ))}\r\n                            {workspaces.length === 0 && <p className=\"text-sm text-muted-foreground text-center\">No saved workspaces found.</p>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}