{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/GenericWidget.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\ninterface GenericWidgetProps {\r\n  data: any;\r\n}\r\n\r\nexport function GenericWidget({ data }: GenericWidgetProps) {\r\n  return (\r\n    <div className=\"text-sm @[400px]:text-base h-full\">\r\n      {typeof data === 'string' ? \r\n        <div className=\"prose prose-sm dark:prose-invert max-w-none\">\r\n            <ReactMarkdown>{data}</ReactMarkdown>\r\n        </div>\r\n        : <pre className=\"whitespace-pre-wrap break-all\">{JSON.stringify(data, null, 2)}</pre>}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAFA;;;AAQO,SAAS,cAAc,EAAE,IAAI,EAAsB;IACxD,qBACE,6LAAC;QAAI,WAAU;kBACZ,OAAO,SAAS,yBACf,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC,2LAAA,CAAA,UAAa;0BAAE;;;;;;;;;;iCAElB,6LAAC;YAAI,WAAU;sBAAiC,KAAK,SAAS,CAAC,MAAM,MAAM;;;;;;;;;;;AAGrF;KAVgB","debugId":null}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/EntityEditForm.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport * as z from 'zod';\r\nimport type { Incident, Problem, Change } from '@/lib/types';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { DialogClose } from '@/components/ui/dialog';\r\n\r\ntype Entity = Incident | Problem | Change;\r\n\r\nconst incidentSchema = z.object({\r\n  short_description: z.string().min(1, 'Short description is required'),\r\n  priority: z.string().optional(),\r\n  state: z.string().optional(),\r\n  assigned_to: z.string().optional(),\r\n  description: z.string().optional(),\r\n});\r\n\r\nconst problemSchema = z.object({\r\n  short_description: z.string().min(1, 'Short description is required'),\r\n  description: z.string().optional(),\r\n  workaround: z.string().optional(),\r\n  cause: z.string().optional(),\r\n});\r\n\r\nconst changeSchema = z.object({\r\n  short_description: z.string().min(1, 'Short description is required'),\r\n  type: z.string().optional(),\r\n  state: z.string().optional(),\r\n  assigned_to: z.string().optional(),\r\n  justification: z.string().optional(),\r\n  implementation_plan: z.string().optional(),\r\n});\r\n\r\nconst entitySchemas = {\r\n  incident: incidentSchema,\r\n  problem: problemSchema,\r\n  change: changeSchema,\r\n};\r\n\r\nconst entityFields: { [key in 'incident' | 'problem' | 'change']: { name: string; label: string; type: 'input' | 'textarea' }[] } = {\r\n  incident: [\r\n    { name: 'short_description', label: 'Short Description', type: 'input' },\r\n    { name: 'priority', label: 'Priority', type: 'input' },\r\n    { name: 'state', label: 'State', type: 'input' },\r\n    { name: 'assigned_to', label: 'Assigned To', type: 'input' },\r\n    { name: 'description', label: 'Description', type: 'textarea' },\r\n  ],\r\n  problem: [\r\n    { name: 'short_description', label: 'Short Description', type: 'input' },\r\n    { name: 'description', label: 'Description', type: 'textarea' },\r\n    { name: 'workaround', label: 'Workaround', type: 'textarea' },\r\n    { name: 'cause', label: 'Cause', type: 'textarea' },\r\n  ],\r\n  change: [\r\n    { name: 'short_description', label: 'Short Description', type: 'input' },\r\n    { name: 'type', label: 'Type', type: 'input' },\r\n    { name: 'state', label: 'State', type: 'input' },\r\n    { name: 'assigned_to', label: 'Assigned To', type: 'input' },\r\n    { name: 'justification', label: 'Justification', type: 'textarea' },\r\n    { name: 'implementation_plan', label: 'Implementation Plan', type: 'textarea' },\r\n  ],\r\n};\r\n\r\n\r\ninterface EntityEditFormProps {\r\n  type: 'incident' | 'problem' | 'change';\r\n  entity: Entity;\r\n  onSubmit: (values: Partial<Entity>) => void;\r\n}\r\n\r\nexport function EntityEditForm({ type, entity, onSubmit }: EntityEditFormProps) {\r\n  const form = useForm({\r\n    resolver: zodResolver(entitySchemas[type]),\r\n    defaultValues: entity,\r\n  });\r\n\r\n  const fieldsToRender = entityFields[type];\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        {fieldsToRender.map((fieldInfo) => (\r\n          <FormField\r\n            key={fieldInfo.name}\r\n            control={form.control}\r\n            name={fieldInfo.name as any}\r\n            render={({ field }) => (\r\n              <FormItem>\r\n                <FormLabel>{fieldInfo.label}</FormLabel>\r\n                <FormControl>\r\n                  {fieldInfo.type === 'textarea' ? <Textarea {...field} /> : <Input {...field} />}\r\n                </FormControl>\r\n                <FormMessage />\r\n              </FormItem>\r\n            )}\r\n          />\r\n        ))}\r\n        <DialogClose asChild>\r\n          <Button type=\"submit\">Save Changes</Button>\r\n        </DialogClose>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/EntityWidget.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport type { Incident, Problem, Change } from '@/lib/types';\r\nimport { Button } from '@/components/ui/button';\r\nimport { ArrowLeft, Pencil } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { EntityEditForm } from './EntityEditForm';\r\n\r\ntype Entity = Incident | Problem | Change;\r\n\r\ninterface EntityWidgetProps {\r\n  widgetId: string;\r\n  type: 'incident' | 'problem' | 'change';\r\n  entities: Entity[];\r\n  onTextSelect: (text: string) => void;\r\n  updateEntity: (widgetId: string, entityNumber: string, updatedData: Partial<Entity>) => void;\r\n  onEntitySelectForChat: (entity: Entity) => void;\r\n}\r\n\r\nconst entityFieldMapping = {\r\n  incident: {\r\n    title: 'Incident',\r\n    fields: {\r\n      short_description: 'Short Description',\r\n      state: 'State',\r\n      priority: 'Priority',\r\n      assigned_to: 'Assigned To',\r\n      description: 'Description',\r\n    },\r\n  },\r\n  problem: {\r\n    title: 'Problem',\r\n    fields: {\r\n      short_description: 'Short Description',\r\n      description: 'Description',\r\n      workaround: 'Workaround',\r\n      cause: 'Cause',\r\n    },\r\n  },\r\n  change: {\r\n    title: 'Change',\r\n    fields: {\r\n      short_description: 'Short Description',\r\n      type: 'Type',\r\n      state: 'State',\r\n      assigned_to: 'Assigned To',\r\n      justification: 'Justification',\r\n      implementation_plan: 'Implementation Plan',\r\n    },\r\n  },\r\n};\r\n\r\nexport function EntityWidget({ widgetId, type, entities, onTextSelect, updateEntity, onEntitySelectForChat }: EntityWidgetProps) {\r\n  const [selectedEntity, setSelectedEntity] = useState<Entity | null>(null);\r\n  const [editingEntity, setEditingEntity] = useState<Entity | null>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleMouseUp = () => {\r\n      const selection = window.getSelection()?.toString().trim();\r\n      if (selection) {\r\n        onTextSelect(selection);\r\n      }\r\n    };\r\n    const container = containerRef.current;\r\n    container?.addEventListener('mouseup', handleMouseUp);\r\n    return () => {\r\n      container?.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [onTextSelect]);\r\n\r\n  const handleSelectEntity = (entity: Entity) => {\r\n    setSelectedEntity(entity);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setSelectedEntity(null);\r\n  };\r\n  \r\n  const handleEntityUpdate = (values: Partial<Entity>) => {\r\n    if (editingEntity) {\r\n      updateEntity(widgetId, editingEntity.number, values);\r\n      setEditingEntity(null);\r\n      if(selectedEntity && selectedEntity.number === editingEntity.number) {\r\n        setSelectedEntity({...selectedEntity, ...values});\r\n      }\r\n    }\r\n  };\r\n\r\n  const { title: entityTitle, fields } = entityFieldMapping[type];\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"relative h-full overflow-hidden text-sm @[400px]:text-base\">\r\n      <div className={cn(\"transition-transform duration-300 ease-in-out h-full overflow-y-auto no-scrollbar\", {\r\n        '-translate-x-full': selectedEntity\r\n      })}>\r\n        {entities.map((entity) => (\r\n          <div \r\n            key={entity.number}\r\n            className=\"mb-4 p-2 rounded-md hover:bg-accent/50\"\r\n          >\r\n            <p \r\n              className=\"font-medium cursor-pointer\"\r\n              onClick={() => onEntitySelectForChat(entity)}\r\n            >\r\n              {entity.number}\r\n            </p>\r\n\r\n            <p \r\n              className=\"text-muted-foreground cursor-pointer text-xs @[400px]:text-sm\"\r\n              onClick={() => handleSelectEntity(entity)}\r\n            >\r\n              {entity.short_description}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className={cn(\r\n        \"absolute top-0 right-0 h-full w-full bg-card p-4 transition-transform duration-300 ease-in-out\",\r\n        \"flex flex-col\",\r\n        selectedEntity ? 'translate-x-0' : 'translate-x-full'\r\n      )}>\r\n        {selectedEntity && (\r\n           <div className=\"flex-1 min-h-0 overflow-auto no-scrollbar\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n               <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={handleBack}>\r\n                <ArrowLeft size={18} />\r\n              </Button>\r\n               <h3 className=\"font-semibold\">{selectedEntity.number}</h3>\r\n                <Dialog onOpenChange={(open) => !open && setEditingEntity(null)}>\r\n                  <DialogTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => setEditingEntity(selectedEntity)}>\r\n                      <Pencil size={16} />\r\n                      <span className=\"sr-only\">Edit</span>\r\n                    </Button>\r\n                  </DialogTrigger>\r\n                  <DialogContent>\r\n                    <DialogHeader>\r\n                      <DialogTitle>Edit {entityTitle} {editingEntity?.number}</DialogTitle>\r\n                    </DialogHeader>\r\n                    {editingEntity && <EntityEditForm type={type} entity={editingEntity} onSubmit={handleEntityUpdate} />}\r\n                  </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n\r\n            <div className=\"space-y-4\">\r\n              {Object.entries(fields).map(([key, label]) => {\r\n                const rawValue = (selectedEntity as any)[key];\r\n                if (rawValue === undefined || rawValue === null || rawValue === '') return null;\r\n                \r\n                const value = typeof rawValue === 'object' && rawValue.hasOwnProperty('value') ? rawValue.value : rawValue;\r\n\r\n                return (\r\n                  <div key={key}>\r\n                    <h4 className=\"font-medium text-muted-foreground\">{label}</h4>\r\n                    <p className=\"whitespace-pre-wrap\">{value}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n           </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/ChatPanel.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, type FormEvent, useRef, useEffect } from 'react';\r\nimport type { ChatMessage } from '@/lib/types';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Send, Loader2, Bot, User, PanelLeft, Trash2 } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport { Avatar, AvatarFallback, AvatarImage } from '../ui/avatar';\r\n\r\ninterface ChatPanelProps {\r\n  messages: ChatMessage[];\r\n  loading: boolean;\r\n  onSubmit: (query: string) => void;\r\n  agentType: string;\r\n  onClose: () => void;\r\n  onClear: () => void;\r\n}\r\n\r\nexport function ChatPanel({ messages, loading, onSubmit, agentType, onClose, onClear }: ChatPanelProps) {\r\n  const [query, setQuery] = useState('');\r\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (scrollAreaRef.current) {\r\n        scrollAreaRef.current.scrollTop = scrollAreaRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      inputRef.current?.focus();\r\n    }\r\n  }, [loading]);\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col bg-background/50\">\r\n      <div className=\"p-3 flex items-center justify-between\">\r\n        <h4 className=\"font-semibold text-sm\">Chat with {agentType}</h4>\r\n        <div className=\"flex items-center gap-1\">\r\n          <Button \r\n            variant=\"ghost\" \r\n            size=\"icon\" \r\n            className=\"h-7 w-7\" \r\n            onClick={onClear}\r\n            title=\"Clear chat history\"\r\n            disabled={messages.length === 0}\r\n          >\r\n            <Trash2 size={16} />\r\n          </Button>\r\n          <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={onClose}>\r\n            <PanelLeft size={18} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 p-4 overflow-auto no-scrollbar\" ref={scrollAreaRef}>\r\n        <div className=\"space-y-4\">\r\n          {messages.map((message, index) => (\r\n            <div key={index} className={cn('flex items-start gap-3', message.role === 'user' ? 'justify-end' : 'justify-start')}>\r\n              {message.role === 'model' && (\r\n                <Avatar className=\"w-8 h-8 border\">\r\n                    <AvatarFallback><Bot size={18} /></AvatarFallback>\r\n                </Avatar>\r\n              )}\r\n              <div\r\n                className={cn('rounded-lg px-3 py-2 max-w-[80%] text-sm', \r\n                message.role === 'user' ? 'bg-primary text-primary-foreground' : 'bg-muted')}\r\n              >\r\n                <p className=\"whitespace-pre-wrap\">{message.content}</p>\r\n              </div>\r\n              {message.role === 'user' && (\r\n                 <Avatar className=\"w-8 h-8 border\">\r\n                    <AvatarFallback><User size={18} /></AvatarFallback>\r\n                </Avatar>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {loading && (\r\n             <div className='flex items-start gap-3 justify-start'>\r\n                <Avatar className=\"w-8 h-8 border\">\r\n                    <AvatarFallback><Bot size={18} /></AvatarFallback>\r\n                </Avatar>\r\n                <div className='rounded-lg px-3 py-2 max-w-[80%] text-sm bg-muted flex items-center'>\r\n                    <Loader2 className=\"animate-spin h-5 w-5\" />\r\n                </div>\r\n             </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-4\">\r\n        <form onSubmit={handleSubmit} className=\"flex w-full items-center gap-2\">\r\n          <Input\r\n            ref={inputRef}\r\n            placeholder=\"Your message...\"\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            disabled={loading}\r\n            className=\"text-xs\"\r\n          />\r\n          <Button type=\"submit\" size=\"icon\" disabled={loading || !query.trim()}>\r\n            {loading ? <Loader2 className=\"animate-spin\" size={16}/> : <Send size={16} />}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/BaseWidget.tsx"],"sourcesContent":["\r\n\r\n'use client';\r\n\r\nimport { useState, type FormEvent, useRef, useCallback, useEffect } from 'react';\r\nimport type { Widget, Problem, Incident, Change, ChatMessage } from '@/lib/types';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport { X, Bot, Minus, Heart, MessageCircle } from 'lucide-react';\r\nimport { GenericWidget } from './GenericWidget';\r\nimport { contextAwareWidgetChat } from '@/ai/flows/context-aware-widget-chat';\r\nimport { EntityWidget } from './EntityWidget';\r\nimport { cn } from '@/lib/utils';\r\nimport { ChatPanel } from './ChatPanel';\r\nimport { WIDGET_EXPANDED_WIDTH, WIDGET_INITIAL_WIDTH, WIDGET_INITIAL_HEIGHT } from './WidgetContainer';\r\nimport { useIsMobile } from '@/hooks/use-mobile';\r\n\r\ninterface BaseWidgetProps {\r\n  widget: Widget;\r\n  removeWidget: (id: string) => void;\r\n  updateEntity: (widgetId: string, entityNumber: string, updatedData: Partial<Problem | Incident | Change>) => void;\r\n  bringToFront: (id: string, isSummaryOrChat?: boolean) => void;\r\n  toggleMinimizeWidget: (id: string) => void;\r\n  toggleFavoriteWidget: (id: string) => void;\r\n  onResize?: (id: string, width: number, height: number) => void;\r\n  onPositionChange?: (id: string, x: number, y: number) => void;\r\n}\r\n\r\nexport function BaseWidget({ widget, removeWidget, updateEntity, bringToFront, toggleMinimizeWidget, toggleFavoriteWidget, onResize, onPositionChange }: BaseWidgetProps) {\r\n  const [chatMessages, setChatMessages] = useState<ChatMessage[]>([]);\r\n  const [isChatOpen, setIsChatOpen] = useState(widget.type === 'generic');\r\n  const [loading, setLoading] = useState(false);\r\n  const widgetRef = useRef<HTMLDivElement>(null);\r\n  const [chatPanelWidth, setChatPanelWidth] = useState(375);\r\n  const [isResizing, setIsResizing] = useState(false);\r\n  const [selectedEntityForChat, setSelectedEntityForChat] = useState<Incident | Problem | Change | null>(null);\r\n  const isMobile = useIsMobile();\r\n  \r\n  // Track the last reported size to prevent infinite loops\r\n  const lastReportedSize = useRef<{width: number, height: number} | null>(null);\r\n  \r\n  // Resize state\r\n  const [isCustomResizing, setIsCustomResizing] = useState(false);\r\n  const [resizeDirection, setResizeDirection] = useState<string | null>(null);\r\n  const [initialMousePos, setInitialMousePos] = useState({ x: 0, y: 0 });\r\n  const [initialWidgetSize, setInitialWidgetSize] = useState({ width: 0, height: 0 });\r\n  const [initialWidgetPos, setInitialWidgetPos] = useState({ x: 0, y: 0 });\r\n  \r\n  // ResizeObserver to detect when the card is resized via CSS resize handle\r\n  useEffect(() => {\r\n    if (!widgetRef.current || !onResize || isMobile) return;\r\n    \r\n    let timeoutId: NodeJS.Timeout;\r\n    \r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      clearTimeout(timeoutId);\r\n      timeoutId = setTimeout(() => {\r\n        for (const entry of entries) {\r\n          const { width, height } = entry.contentRect;\r\n          \r\n          // Only trigger if size actually changed significantly\r\n          const currentWidget = widget;\r\n          const currentWidth = currentWidget.width || WIDGET_INITIAL_WIDTH;\r\n          const currentHeight = currentWidget.height || WIDGET_INITIAL_HEIGHT;\r\n          \r\n          const widthChanged = Math.abs(width - currentWidth) > 5;\r\n          const heightChanged = Math.abs(height - currentHeight) > 5;\r\n          \r\n          // Also check against last reported size to prevent loops\r\n          const lastSize = lastReportedSize.current;\r\n          const differentFromLast = !lastSize || \r\n            Math.abs(width - lastSize.width) > 5 || \r\n            Math.abs(height - lastSize.height) > 5;\r\n          \r\n          if ((widthChanged || heightChanged) && differentFromLast) {\r\n            lastReportedSize.current = { width: Math.round(width), height: Math.round(height) };\r\n            onResize(widget.id, Math.round(width), Math.round(height));\r\n          }\r\n        }\r\n      }, 100); // Debounce by 100ms\r\n    });\r\n    \r\n    resizeObserver.observe(widgetRef.current);\r\n    \r\n    return () => {\r\n      clearTimeout(timeoutId);\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [widget.id, widget.width, widget.height, onResize, isMobile]);\r\n\r\n  // Custom resize handling\r\n  const handleResizeStart = (direction: string, e: React.MouseEvent) => {\r\n    if (isMobile || !widgetRef.current || !onResize) return;\r\n    \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    setIsCustomResizing(true);\r\n    setResizeDirection(direction);\r\n    setInitialMousePos({ x: e.clientX, y: e.clientY });\r\n    \r\n    const rect = widgetRef.current.getBoundingClientRect();\r\n    setInitialWidgetSize({ width: rect.width, height: rect.height });\r\n    setInitialWidgetPos({ x: widget.x || 0, y: widget.y || 0 });\r\n    \r\n    bringToFront(widget.id);\r\n  };\r\n\r\n  const handleResizeMove = useCallback((e: MouseEvent) => {\r\n    if (!isCustomResizing || !resizeDirection || !onResize || !widgetRef.current) return;\r\n    \r\n    const deltaX = e.clientX - initialMousePos.x;\r\n    const deltaY = e.clientY - initialMousePos.y;\r\n    \r\n    let newWidth = initialWidgetSize.width;\r\n    let newHeight = initialWidgetSize.height;\r\n    let newX = initialWidgetPos.x;\r\n    let newY = initialWidgetPos.y;\r\n    \r\n    const minWidth = 350;\r\n    const minHeight = 250;\r\n    \r\n    // Handle different resize directions\r\n    if (resizeDirection.includes('e')) { // East (right)\r\n      newWidth = Math.max(minWidth, initialWidgetSize.width + deltaX);\r\n    }\r\n    if (resizeDirection.includes('w')) { // West (left)\r\n      const widthChange = Math.min(deltaX, initialWidgetSize.width - minWidth);\r\n      newWidth = initialWidgetSize.width - widthChange;\r\n      newX = initialWidgetPos.x + widthChange;\r\n    }\r\n    if (resizeDirection.includes('s')) { // South (bottom)\r\n      newHeight = Math.max(minHeight, initialWidgetSize.height + deltaY);\r\n    }\r\n    if (resizeDirection.includes('n')) { // North (top)\r\n      const heightChange = Math.min(deltaY, initialWidgetSize.height - minHeight);\r\n      newHeight = initialWidgetSize.height - heightChange;\r\n      newY = initialWidgetPos.y + heightChange;\r\n    }\r\n    \r\n    // Apply the changes\r\n    if (onResize && (newWidth !== initialWidgetSize.width || newHeight !== initialWidgetSize.height)) {\r\n      onResize(widget.id, Math.round(newWidth), Math.round(newHeight));\r\n    }\r\n    \r\n    if (onPositionChange && (newX !== initialWidgetPos.x || newY !== initialWidgetPos.y)) {\r\n      onPositionChange(widget.id, Math.round(newX), Math.round(newY));\r\n    }\r\n  }, [isCustomResizing, resizeDirection, initialMousePos, initialWidgetSize, initialWidgetPos, onResize, onPositionChange, widget.id]);\r\n\r\n  const handleCustomResizeEnd = useCallback(() => {\r\n    setIsCustomResizing(false);\r\n    setResizeDirection(null);\r\n  }, []);\r\n\r\n  // Mouse event listeners for resizing\r\n  useEffect(() => {\r\n    if (isCustomResizing) {\r\n      document.addEventListener('mousemove', handleResizeMove);\r\n      document.addEventListener('mouseup', handleCustomResizeEnd);\r\n      document.body.style.cursor = resizeDirection ? `${resizeDirection}-resize` : 'default';\r\n      \r\n      return () => {\r\n        document.removeEventListener('mousemove', handleResizeMove);\r\n        document.removeEventListener('mouseup', handleCustomResizeEnd);\r\n        document.body.style.cursor = 'default';\r\n      };\r\n    }\r\n  }, [isCustomResizing, handleResizeMove, handleCustomResizeEnd, resizeDirection]);\r\n\r\n\r\n  // Set chat panel to exactly half the widget width for equal split (50/50)\r\n  useEffect(() => {\r\n    if (isChatOpen && widgetRef.current) {\r\n        const halfWidth = widgetRef.current.offsetWidth / 2;\r\n        setChatPanelWidth(halfWidth);\r\n    }\r\n  }, [isChatOpen, widget.width]);\r\n\r\n\r\n  const handleResize = useCallback((e: MouseEvent) => {\r\n    if (isResizing && widgetRef.current) {\r\n      const widgetRect = widgetRef.current.getBoundingClientRect();\r\n      const newChatWidth = widgetRect.right - e.clientX;\r\n      \r\n      const totalWidth = widgetRef.current.offsetWidth;\r\n      const minWidth = 200;\r\n      const maxWidth = totalWidth - 250;\r\n      \r\n      if (newChatWidth > minWidth && newChatWidth < maxWidth) {\r\n        setChatPanelWidth(newChatWidth);\r\n      }\r\n    }\r\n  }, [isResizing]);\r\n\r\n  const handleResizeEnd = useCallback(() => {\r\n    setIsResizing(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isResizing) {\r\n      window.addEventListener('mousemove', handleResize);\r\n      window.addEventListener('mouseup', handleResizeEnd);\r\n    } else {\r\n      window.removeEventListener('mousemove', handleResize);\r\n      window.removeEventListener('mouseup', handleResizeEnd);\r\n    }\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleResize);\r\n      window.removeEventListener('mouseup', handleResizeEnd);\r\n    };\r\n  }, [isResizing, handleResize, handleResizeEnd]);\r\n  \r\n  const clearChatMessages = () => {\r\n    setChatMessages([]);\r\n  };\r\n\r\n  const toggleChat = () => {\r\n    if (!isChatOpen) {\r\n      bringToFront(widget.id, true);\r\n    }\r\n    setIsChatOpen(prev => {\r\n        if (!prev === false) {\r\n            setSelectedEntityForChat(null);\r\n        }\r\n        return !prev;\r\n    });\r\n  }\r\n  \r\n  const handleChatSubmit = async (query: string) => {\r\n    if (!query.trim()) return;\r\n    setLoading(true);\r\n    \r\n    const userMessage: ChatMessage = { role: 'user', content: query };\r\n    const newMessages: ChatMessage[] = [...chatMessages, userMessage];\r\n    setChatMessages(newMessages);\r\n\r\n    if (!isChatOpen) {\r\n      toggleChat();\r\n    }\r\n    \r\n    try {\r\n      const result = await contextAwareWidgetChat({\r\n        widgetType: widget.type,\r\n        widgetData: widget.data,\r\n        userQuery: query,\r\n        selectedEntityData: selectedEntityForChat ?? undefined,\r\n        chatHistory: newMessages.slice(0, -1).map(m => ({role: m.role === 'user' ? 'user' : 'model', content: m.content})),\r\n      });\r\n      const aiResponse: ChatMessage = { role: 'model', content: result.suggestedActions.join('\\n') || \"I don't have any specific suggestions for that.\" };\r\n      setChatMessages(prev => [...prev, aiResponse]);\r\n\r\n    } catch (error) {\r\n      console.error('Context-aware chat failed:', error);\r\n      const errorMessage: ChatMessage = { role: 'model', content: 'Sorry, I encountered an error.' };\r\n      setChatMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTextSelection = (text: string) => {\r\n    if (text) {\r\n      if (!isChatOpen) {\r\n        toggleChat();\r\n      }\r\n      setChatMessages(prev => [\r\n        ...prev,\r\n        { role: 'model', content: `What would you like to ask about \"${text}\"?` }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  const handleEntitySelectForChat = (entity: Incident | Problem | Change) => {\r\n    setSelectedEntityForChat(entity);\r\n    if (!isChatOpen) {\r\n      setIsChatOpen(true);\r\n    }\r\n    setChatMessages(prev => [\r\n      ...prev,\r\n      { role: 'model', content: `Now focusing on ${widget.type} ${entity.number}. What would you like to know?` }\r\n    ]);\r\n  };\r\n  \r\n  const renderWidgetContent = () => {\r\n    switch (widget.type) {\r\n      case 'incident':\r\n      case 'problem':\r\n      case 'change':\r\n        if (!Array.isArray(widget.data)) {\r\n          return <GenericWidget data=\"Data is not in the correct format.\" />;\r\n        }\r\n        const entities = widget.data.map((e: any) => \r\n            Object.entries(e).reduce((acc, [key, value]) => {\r\n                acc[key] = typeof value === 'object' && value !== null && 'value' in value ? (value as any).value : value;\r\n                return acc;\r\n            }, {} as any)\r\n        );\r\n        return <EntityWidget widgetId={widget.id} type={widget.type} entities={entities} onTextSelect={handleTextSelection} updateEntity={updateEntity} onEntitySelectForChat={handleEntitySelectForChat} />;\r\n      case 'generic':\r\n      default:\r\n        return <GenericWidget data={widget.data} />;\r\n    }\r\n  };\r\n\r\n  const getWidgetWidth = () => {\r\n    if (isMobile) return '100%';\r\n    if (widget.width) return widget.width;\r\n    if (isChatOpen) return WIDGET_EXPANDED_WIDTH;\r\n    return WIDGET_INITIAL_WIDTH;\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      className={cn(\r\n        \"w-full h-full flex flex-col bg-card/80 backdrop-blur-sm overflow-hidden\",\r\n        !isMobile && \"resizable-widget\"\r\n      )}\r\n      ref={widgetRef}\r\n      style={{ \r\n        width: getWidgetWidth(),\r\n        height: isMobile ? 'auto' : widget.height,\r\n      }}\r\n    >\r\n      <div className={cn(!isMobile && \"drag-handle cursor-move\")} onDoubleClick={() => toggleMinimizeWidget(widget.id)}>\r\n        <CardHeader className=\"flex flex-row items-start justify-between p-4\">\r\n            <div className=\"flex-1\">\r\n            <CardTitle className=\"text-lg @[400px]:text-xl @[500px]:text-2xl\">{widget.query}</CardTitle>\r\n            <TooltipProvider>\r\n                <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                    <CardDescription className=\"flex items-center gap-1.5 cursor-help mt-1 text-xs @[400px]:text-sm\">\r\n                    <Bot size={14} className=\"text-primary\" />\r\n                    {widget.agent.agentType}\r\n                    </CardDescription>\r\n                </TooltipTrigger>\r\n                <TooltipContent>\r\n                    <p>{widget.agent.agentBehavior}</p>\r\n                </TooltipContent>\r\n            </Tooltip>\r\n          </TooltipProvider>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={toggleChat}>\r\n                <MessageCircle size={18} className={isChatOpen ? 'text-primary' : ''} />\r\n                <span className=\"sr-only\">Toggle chat</span>\r\n            </Button>\r\n             <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => toggleFavoriteWidget(widget.id)}>\r\n                <Heart size={18} className={widget.isFavorited ? 'fill-primary text-primary' : ''} />\r\n                <span className=\"sr-only\">Favorite widget</span>\r\n            </Button>\r\n             <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => toggleMinimizeWidget(widget.id)}>\r\n                <Minus size={18} />\r\n                <span className=\"sr-only\">Minimize widget</span>\r\n            </Button>\r\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={() => removeWidget(widget.id)}>\r\n                <X size={18} />\r\n                <span className=\"sr-only\">Close widget</span>\r\n            </Button>\r\n        </div>\r\n        </CardHeader>\r\n      </div>\r\n\r\n\r\n      <CardContent className=\"flex-1 min-h-0 relative p-0\">\r\n        {/* Resize handles - only show on desktop */}\r\n        {!isMobile && (\r\n          <>\r\n            {/* Corner handles */}\r\n            <div className=\"resize-handle resize-nw\" onMouseDown={(e) => handleResizeStart('nw', e)} />\r\n            <div className=\"resize-handle resize-ne\" onMouseDown={(e) => handleResizeStart('ne', e)} />\r\n            <div className=\"resize-handle resize-sw\" onMouseDown={(e) => handleResizeStart('sw', e)} />\r\n            <div className=\"resize-handle resize-se\" onMouseDown={(e) => handleResizeStart('se', e)} />\r\n            \r\n            {/* Edge handles */}\r\n            <div className=\"resize-handle resize-n\" onMouseDown={(e) => handleResizeStart('n', e)} />\r\n            <div className=\"resize-handle resize-s\" onMouseDown={(e) => handleResizeStart('s', e)} />\r\n            <div className=\"resize-handle resize-w\" onMouseDown={(e) => handleResizeStart('w', e)} />\r\n            <div className=\"resize-handle resize-e\" onMouseDown={(e) => handleResizeStart('e', e)} />\r\n          </>\r\n        )}\r\n        \r\n        <div className={cn(\"flex h-full\", isResizing ? 'cursor-col-resize select-none' : '')}>\r\n            <div className=\"h-full flex-1 overflow-auto no-scrollbar\" style={{ width: isChatOpen ? `calc(100% - ${chatPanelWidth}px)` : '100%' }}>\r\n              <div className=\"p-4 h-full\">\r\n                {renderWidgetContent()}\r\n              </div>\r\n            </div>\r\n            \r\n            {isChatOpen && (\r\n              <>\r\n                <div \r\n                  className=\"w-px h-full cursor-col-resize bg-border/50 hover:bg-border transition-colors\"\r\n                  onMouseDown={() => setIsResizing(true)}\r\n                />\r\n                <div style={{ width: `${chatPanelWidth}px` }}>\r\n                    <ChatPanel \r\n                        messages={chatMessages}\r\n                        loading={loading}\r\n                        onSubmit={handleChatSubmit}\r\n                        agentType={widget.agent.agentType}\r\n                        onClose={toggleChat}\r\n                        onClear={clearChatMessages}\r\n                    />\r\n                </div>\r\n              </>\r\n            )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1701, "column": 0}, "map": {"version":3,"sources":["file:///S:/Development/BabelPhish/code_base/bable_web/src/components/widgets/WidgetContainer.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useRef, createRef, useState, useEffect, useCallback } from 'react';\r\nimport Draggable, { type DraggableBounds, type DraggableData, type DraggableEvent } from 'react-draggable';\r\nimport type { Widget, Problem, Incident, Change } from '@/lib/types';\r\nimport { BaseWidget } from './BaseWidget';\r\n\r\ninterface WidgetContainerProps {\r\n  widgets: Widget[];\r\n  removeWidget: (id: string) => void;\r\n  updateEntity: (widgetId: string, entityNumber: string, updatedData: Partial<Problem | Incident | Change>) => void;\r\n  bringToFront: (id: string) => void;\r\n  toggleMinimizeWidget: (id: string) => void;\r\n  toggleFavoriteWidget: (id: string) => void;\r\n  updateWidgetPosition: (id: string, x: number, y: number) => void;\r\n  updateWidgetDimensions: (id: string, width: number, height: number) => void;\r\n  sidebarState: 'expanded' | 'collapsed';\r\n  sidebarRef: React.RefObject<HTMLDivElement>;\r\n  chatInputRef: React.RefObject<HTMLDivElement>;\r\n  setIsDragging: (isDragging: boolean) => void;\r\n}\r\n\r\nexport const WIDGET_INITIAL_WIDTH = 450;\r\nexport const WIDGET_EXPANDED_WIDTH = 750;\r\nexport const WIDGET_INITIAL_HEIGHT = 400;\r\n\r\n\r\nexport function WidgetContainer({ \r\n    widgets, \r\n    removeWidget, \r\n    updateEntity, \r\n    bringToFront, \r\n    toggleMinimizeWidget, \r\n    toggleFavoriteWidget, \r\n    updateWidgetPosition, \r\n    updateWidgetDimensions,\r\n    sidebarState, \r\n    sidebarRef, \r\n    chatInputRef,\r\n    setIsDragging\r\n}: WidgetContainerProps) {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const [bounds, setBounds] = useState<{[key: string]: DraggableBounds}>({});\r\n  const resizeObserverRef = useRef<ResizeObserver | null>(null);\r\n  \r\n  const nodeRefs = useRef(new Map<string, React.RefObject<HTMLDivElement>>());\r\n\r\n  widgets.forEach(widget => {\r\n    if (!nodeRefs.current.has(widget.id)) {\r\n      nodeRefs.current.set(widget.id, createRef<HTMLDivElement>());\r\n    }\r\n  });\r\n\r\n  const updateAllBounds = useCallback(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n    \r\n    const containerWidth = container.offsetWidth;\r\n    const containerHeight = container.offsetHeight;\r\n\r\n    const newBounds: {[key: string]: DraggableBounds} = {};\r\n    widgets.forEach(widget => {\r\n      const node = nodeRefs.current.get(widget.id)?.current;\r\n      if (node) {\r\n          const currentWidth = node.offsetWidth;\r\n          const currentHeight = node.offsetHeight;\r\n          newBounds[widget.id] = {\r\n            left: 0,\r\n            top: 0,\r\n            right: containerWidth - currentWidth,\r\n            bottom: containerHeight - currentHeight,\r\n          };\r\n      }\r\n    });\r\n    setBounds(newBounds);\r\n  }, [widgets]);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    const resizeObserver = new ResizeObserver(updateAllBounds);\r\n    resizeObserver.observe(container);\r\n    if(sidebarRef.current) resizeObserver.observe(sidebarRef.current);\r\n    if(chatInputRef.current) resizeObserver.observe(chatInputRef.current);\r\n    \r\n    // Store observer to disconnect it later\r\n    resizeObserverRef.current = resizeObserver;\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [sidebarState, sidebarRef, chatInputRef, widgets, updateAllBounds]);\r\n  \r\n  const handleDragStop = (id: string, data: DraggableData) => {\r\n    updateWidgetPosition(id, data.x, data.y);\r\n    setIsDragging(false);\r\n  };\r\n  \r\n  \r\n  if (widgets.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full\" ref={containerRef}>\r\n      {widgets.map((widget) => {\r\n        const nodeRef = nodeRefs.current.get(widget.id)!;\r\n        return (\r\n          <Draggable\r\n              key={widget.id}\r\n              nodeRef={nodeRef}\r\n              handle=\".drag-handle\"\r\n              onStart={() => {\r\n                bringToFront(widget.id);\r\n                setIsDragging(true);\r\n              }}\r\n              onStop={(e: DraggableEvent, data: DraggableData) => handleDragStop(widget.id, data)}\r\n              position={{ x: widget.x ?? 0, y: widget.y ?? 0 }}\r\n              bounds={bounds[widget.id]}\r\n          >\r\n              <div \r\n                className=\"absolute\" \r\n                ref={nodeRef}\r\n                style={{\r\n                    zIndex: widget.zIndex,\r\n                    width: widget.width || WIDGET_INITIAL_WIDTH,\r\n                    height: widget.height || WIDGET_INITIAL_HEIGHT,\r\n                }}\r\n                onMouseDown={() => bringToFront(widget.id)}\r\n              >\r\n                  <BaseWidget \r\n                      widget={widget} \r\n                      removeWidget={removeWidget} \r\n                      updateEntity={updateEntity}\r\n                      bringToFront={bringToFront}\r\n                      toggleMinimizeWidget={toggleMinimizeWidget}\r\n                      toggleFavoriteWidget={toggleFavoriteWidget}\r\n                      onResize={updateWidgetDimensions}\r\n                      onPositionChange={updateWidgetPosition}\r\n                  />\r\n              </div>\r\n          </Draggable>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}